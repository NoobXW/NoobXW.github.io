{"name":"SQL注入","slug":"SQL注入","count":20,"postlist":[{"title":"BUU-HardSQL","uid":"fc23abf567ea93cff7f9b201441e8d7a","slug":"BUU-HardSQL","date":"2022-07-22T11:29:37.000Z","updated":"2022-07-22T11:55:11.704Z","comments":true,"path":"api/articles/BUU-HardSQL.json","keywords":null,"cover":[],"text":"0x00BUU一到SQL注入题目。 0x01打开靶场： 先试试万能密码： 这里应该是把空格过滤了，测试一下： 输入admin’ ‘，还是返回同样的页面： 使用括号替换空格发现出现报错，没有出现那几个汉字，证明确实过滤了空格： 空格绕过原理： 括号是来包含子查询的，任何可以计算出结...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-SQL注入-寻找注入点","uid":"61025c4bc325a8f722ff6e7c3ae2291b","slug":"BUU-SQL注入-寻找注入点","date":"2022-03-18T02:49:56.000Z","updated":"2022-03-20T11:49:02.076Z","comments":true,"path":"api/articles/BUU-SQL注入-寻找注入点.json","keywords":null,"cover":[],"text":"前言记录一下BUU的一道SQL注入，这道题难点主要在于寻找注入点。 0x00 启动靶场启动靶场后发现只有两个页面，一个是热点页面，一个是登录页面，开始以为登录页面存在注入，测试了很多，万能密码，甚至抓包修改Referer值探测注入点也都没有结果。 0x01 信息搜集登录页面无果后...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-字符&数字型","uid":"35084a956f4a822fbd12f304f8c336a2","slug":"Less1-Less4","date":"2022-01-30T15:59:34.000Z","updated":"2022-12-24T04:22:16.654Z","comments":true,"path":"api/articles/Less1-Less4.json","keywords":null,"cover":[],"text":"[TOC] ###Less-1（字符型注入） 0x00首先注入： ?id&#x3D;1 正常返回结果 由于要判断注入点，如图： 添加 ‘ 报错，证明有注入点，字符型，id&#x3D;1’报错是由于源码当中接收值的时候本身自己就是id&#x3D;’’的闭合形式，但由于我们自己强行在...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入-HTTP头注入","uid":"8d3782033a7b54632cfb455b67ca9836","slug":"POST注入-HTTP头注入","date":"2022-02-05T13:27:35.000Z","updated":"2022-02-13T15:31:36.278Z","comments":true,"path":"api/articles/POST注入-HTTP头注入.json","keywords":null,"cover":[],"text":"[TOC] 0x00原理：HTTP头中的参数带入到数据库被执行，造成了HTTP头注入。 $_SERVER详解$_SERVER['SCRIPT_NAME'] //当前脚本的路径 dirname($_SERVER['SCRIPT_NAME'] //dirname() 返回路径中的目录...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入-二次注入","uid":"47679b9d369f170d867be494752fa62e","slug":"POST注入-二次注入","date":"2022-02-09T03:31:17.000Z","updated":"2022-02-13T15:33:50.663Z","comments":true,"path":"api/articles/POST注入-二次注入.json","keywords":null,"cover":[],"text":"[TOC] ##二次注入原理 二次注入，主要分为两步； 第一步：插入恶意数据 ​ 第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数...","link":"","photos":[],"count_time":{"symbolsCount":687,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入--基于Password的注入","uid":"9ed0d530657a494b586000f6c049b35e","slug":"POST注入-基于Password的注入","date":"2022-02-05T05:45:34.000Z","updated":"2022-02-13T15:41:34.276Z","comments":true,"path":"api/articles/POST注入-基于Password的注入.json","keywords":null,"cover":[],"text":"[TOC] Less-17说实话，看到的时候挺吃惊的，没见过，试了很多payload，都注不进去，它还嘲讽我： 0x01查了一下资料，又看了一下源码发现username已经不能被注入了，原因是源码将uname字段进行了检查，导致uname不能够构造payload进行注入。 （ch...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-HPP","uid":"ed28de52de42846cd0569a9a357ddaf1","slug":"SQL注入-HPP","date":"2022-02-10T05:11:20.000Z","updated":"2022-02-15T12:14:34.027Z","comments":true,"path":"api/articles/SQL注入-HPP.json","keywords":null,"cover":[],"text":"[TOC] ##服务器两层架构 服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-Less8-Less10","uid":"7e9ef5437654636a3aa94a45e71b7622","slug":"SQL注入-Less8-Less10","date":"2022-02-03T16:35:17.000Z","updated":"2022-02-13T15:42:39.833Z","comments":true,"path":"api/articles/SQL注入-Less8-Less10.json","keywords":null,"cover":[],"text":"[TOC] 0x00记录一下Less-8—Less10盲注遇到的一些问题 0x01首先8-10关最大特点就是没有报错回显，导致开始注入的时候都是利用报错注入，结果统统失败，后来查看源码发现，报错回显被注释掉了，那这几关报错盲注就不能用了，只能用布尔盲注和时间盲注。 0x02其次就...","link":"","photos":[],"count_time":{"symbolsCount":746,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-POST注入","uid":"32164fb6c436bfef89c97f001eea26bc","slug":"SQL注入-POST注入","date":"2022-02-05T01:25:13.000Z","updated":"2022-02-13T15:45:17.712Z","comments":true,"path":"api/articles/SQL注入-POST注入.json","keywords":null,"cover":[],"text":"[TOC] 0x00POST注入，就是数据从客户端提交 到服务器端，例如我们在登录过程中，输入用户名和密码，用户名 和密码以表单的形式提交， 提交到服务器后服务器再进行验证。这就是一次 post的过程。 Less-11当在输入框输入正确的用户名和密码后，显示登录成功 0x01接下...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-关键字过滤的注入","uid":"91c80453ca147ce2ce8eeaf9436ba64b","slug":"SQL注入-关键字过滤的注入","date":"2022-02-08T15:40:16.000Z","updated":"2022-02-13T15:39:14.145Z","comments":true,"path":"api/articles/SQL注入-关键字过滤的注入.json","keywords":null,"cover":[],"text":"[TOC] 关键字过滤的注入Less-23—Less-28a（Less-24除外）都是基于关键字过滤的注入，源码当中将--，#，or，and等关键字都过滤掉了，在这样的基础上进行 SQL注入。 Less-23由源码可以看到，接收到的id值将被函数preg_replace()进行过...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-堆叠注入","uid":"a92a2310a2f65e102da5b7c1e7626f1d","slug":"SQL注入-堆叠注入","date":"2022-02-10T09:06:24.000Z","updated":"2022-02-13T15:45:30.445Z","comments":true,"path":"api/articles/SQL注入-堆叠注入.json","keywords":null,"cover":[],"text":"[TOC] 堆叠注入原理在 SQL 中，分号（;）是用来表示一条 sql 语句的结束。试想一下我们在 ; 结束一个 sql 语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而 union injection（联合注入）也是将两条语句合并在一起，两者之间有...","link":"","photos":[],"count_time":{"symbolsCount":287,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-宽字节注入","uid":"b7b3116373fd14d65fd221fa9b494766","slug":"SQL注入-宽字节注入","date":"2022-02-10T07:14:55.000Z","updated":"2022-02-13T15:34:05.258Z","comments":true,"path":"api/articles/SQL注入-宽字节注入.json","keywords":null,"cover":[],"text":"[TOC] 宽字节注入原理原理：mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 注入思路思路一：由于单引...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-文件读写操作","uid":"9eb50f7de58edddafde74a5aa271206c","slug":"SQL注入-文件读写操作","date":"2022-02-01T04:55:10.000Z","updated":"2022-02-13T15:45:43.308Z","comments":true,"path":"api/articles/SQL注入-文件读写操作.json","keywords":null,"cover":[],"text":"[TOC] SQL注入文件读写及导出这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。 1、load_file():读取函数： 以下代码实在数据库执行的源码进行文件读取： select load_file(&#3...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-盲注","uid":"db9d897023f4869df00e643d24440891","slug":"SQL注入-盲注","date":"2022-02-02T07:08:10.000Z","updated":"2022-02-11T13:18:49.307Z","comments":true,"path":"api/articles/SQL注入-盲注.json","keywords":null,"cover":[],"text":"SQL盲注概述盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。 1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的 盲注来获取信息。2.盲注是不能通过直接显示的途径来获取数据库数据的方法。 盲注的分类1、布尔盲注 2、...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-绕过WAF","uid":"e80d729249f46c80b287eec83a7a4367","slug":"SQL注入-绕过WAF","date":"2022-02-11T15:37:25.000Z","updated":"2022-02-13T15:45:57.047Z","comments":true,"path":"api/articles/SQL注入-绕过WAF.json","keywords":null,"cover":[],"text":"[TOC] 前言由于网站会部署WAF，例如安全狗，宝塔等，各自有各自的WAF策略规则，因此，绕过的方法也不同。了解其最基本的WAF规则便可进行对其绕过。 WAF绕过姿势1、大小写&#x2F;关键字的替换： id=1 UnIoN/**/SeLeCT 1,user() Hex() b...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入字符型和数字型判断","uid":"13edec6f4d479c2c3e54757e7424c180","slug":"SQL注入字符型和数字型判断","date":"2022-01-31T15:43:00.000Z","updated":"2022-02-13T15:47:04.073Z","comments":true,"path":"api/articles/SQL注入字符型和数字型判断.json","keywords":null,"cover":[],"text":"[TOC] 说明在SQL注入中如何判断字符型注入还是数字型注入很重要，这里自己记录一下。 数字型判定1、and或者or 假设数据库的执行语句是：select * from table where id&#x3D;$id 这里我以自己本地的sql靶场为例。 此时执行语句为： htt...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入Payload汇总","uid":"54b1a02585172138db622471e54a6e9c","slug":"SQL注入Payload汇总","date":"2022-09-03T00:22:57.000Z","updated":"2022-12-17T15:47:18.556Z","comments":true,"path":"api/articles/SQL注入Payload汇总.json","keywords":null,"cover":[],"text":"0x00 文章出处文章来源：khan安全攻防实验室 0x01 通用 SQL 注入负载&#39; &#39;&#39; &#96; &#96;&#96; , &quot; &quot;&quot; &#x2F; &#x2F;&#x2F; \\ \\\\ ; &#39; or &quot;...","link":"","photos":[],"count_time":{"symbolsCount":"51k","symbolsTime":"46 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"攻防世界：upload","uid":"006aa54f10dc84a237bfb17ee3048459","slug":"攻防世界：upload","date":"2022-05-11T08:43:06.000Z","updated":"2022-05-11T10:54:14.236Z","comments":true,"path":"api/articles/攻防世界：upload.json","keywords":null,"cover":[],"text":"前言攻防世界一道Web进阶题，题目是upload，最后做了半天使用upload的方式一点用没有，看了几篇博主的帖子，发现是SQL注入，文件名的SQL注入。 0x01上传2.jpg文件会返回文件名，上传php文件返回：不正确的拓展名；开始以为有检测，尝试了各种upload的绕过方式...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"盲注-SQL靶场","uid":"b9f032fc8c8fc6510bd3ac95f6665bcd","slug":"盲注-SQL靶场","date":"2022-02-02T12:12:53.000Z","updated":"2022-02-13T15:30:25.012Z","comments":true,"path":"api/articles/盲注-SQL靶场.json","keywords":null,"cover":[],"text":"[TOC] 0x00Less-5和Less-6关看了很多文章，总的下来就是布尔盲注，报错注入和时间盲注，通过各种函数进行注入，在这里记录以下。 0x01（floor()报错）首先，开始注入的时候先是按照1-4关的注入方式探测了以下注入点，又看了一下源码，发现源码当中只能输出You...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"简要SQL注入","uid":"7636cfd8370edb30f65feb72ed748040","slug":"简要SQL注入","date":"2022-01-30T13:05:54.000Z","updated":"2022-02-13T15:48:59.624Z","comments":true,"path":"api/articles/简要SQL注入.json","keywords":null,"cover":[],"text":"[TOC] 前言SQL 注入漏洞是重点部分，其中 SQL 注入 又非常复杂，区分各种数据库类型，提交方法，数据类型等注入等，此类漏洞是 WEB 安全中严重的安全漏洞，学习如何利用，挖掘，修复。 SQL注入图解 手工注入原理手工注入：构造不同的sql语句，用户输入的数据拼接到原本的...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}