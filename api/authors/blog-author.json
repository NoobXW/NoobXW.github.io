{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"Kali渗透测试-Web【手动漏洞挖掘（一）】","uid":"0d0e6471f58d1438d9f4617a6eff85c3","slug":"Kali渗透测试-Web【手动漏洞挖掘（一）】","date":"2023-01-31T08:33:01.000Z","updated":"2023-01-31T13:40:52.969Z","comments":true,"path":"api/articles/Kali渗透测试-Web【手动漏洞挖掘（一）】.json","keywords":null,"cover":[],"text":"手动漏洞挖掘 漏洞挖掘原则 所有变量 所有头 Cookie中的变量 逐个变量删除 漏洞的本质 数据与指令的混淆 对用户输入信息过滤不严判断失误，误将指令当数据 命令执行 应用程序开发者直接调用系统功能 ; &amp;&amp; | || &amp; 查看源码，过滤用户输入 命令执...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Kali","slug":"Kali","count":4,"path":"api/categories/Kali.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"漏洞挖掘","slug":"漏洞挖掘","count":1,"path":"api/tags/漏洞挖掘.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Kali渗透测试-Web渗透【神器】","uid":"22f1f23e2016f6b45a27c45231798df8","slug":"Kali渗透测试-Web渗透【神器】","date":"2023-01-30T03:01:45.000Z","updated":"2023-01-31T08:29:16.250Z","comments":true,"path":"api/articles/Kali渗透测试-Web渗透【神器】.json","keywords":null,"cover":[],"text":"Burpsuite Web安全工具中的瑞士军刀 统一的集成工具发现全部现代WEB安全漏洞 PortSwigger公司开发 Burp Free Burp Professional http://www.portswigger.net 所有的工具共享一个能处理并显示HTTP消息的可扩...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"Kali","slug":"Kali","count":4,"path":"api/categories/Kali.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Kali渗透测试-Web渗透【扫描工具】","uid":"07bd6637ce5349fc443c73445b9bc54b","slug":"Kali渗透测试-Web渗透【扫描工具】","date":"2023-01-27T02:26:11.000Z","updated":"2023-01-29T14:13:25.100Z","comments":true,"path":"api/articles/Kali渗透测试-Web渗透【扫描工具】.json","keywords":null,"cover":[],"text":"Httrack web侦察工具；对目标网站进行复制克隆，将目标网站所有的页面都复制下来到本地；目的为了减少与目标服务器进行交互，防止侦察时被发现。 运行httrack Enter project name :输入项目名称 Base path (return&#x3D;&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Kali","slug":"Kali","count":4,"path":"api/categories/Kali.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Kali渗透测试-Web渗透【HTTP】","uid":"7256fe0cda8f1724f7ca8b321c3bd89b","slug":"Kali渗透测试-Web渗透【HTTP】","date":"2023-01-27T01:20:58.000Z","updated":"2023-01-27T02:18:54.997Z","comments":true,"path":"api/articles/Kali渗透测试-Web渗透【HTTP】.json","keywords":null,"cover":null,"text":"WEB攻击面 Network OS WEB Server App server Web Application Database Browser HTTP协议基础 明文 无内建的机密性安全机制 嗅探或代理截断可查看全部明文信息 https只能提高传出层安全 无状态 每一次客户端和...","link":"","photos":[],"count_time":{"symbolsCount":847,"symbolsTime":"1 mins."},"categories":[{"name":"Kali","slug":"Kali","count":4,"path":"api/categories/Kali.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-WPS攻击及黑客攻击方式","uid":"5a2e579f4b4b70f5a335b50e2b70ce14","slug":"Kali渗透测试-WPS攻击","date":"2023-01-25T00:22:18.000Z","updated":"2023-01-26T13:11:45.616Z","comments":true,"path":"api/articles/Kali渗透测试-WPS攻击.json","keywords":null,"cover":[],"text":"WPS (WIRELESS PROTECTED SETUP） WPS是WiFi联盟2006年开放的一项技术 通过PIN码来简化无线接入的操作，无需记住PSK 路由器和网卡各按一个按钮就能接入无线 PIN码是分为前后各4位的2段共8位数字 安全漏洞 2011年被发现安全涉及漏洞 接...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-WPA攻击","uid":"07e524c49773ccced0f88b5b9bd3112f","slug":"Kali渗透测试-WPA攻击","date":"2023-01-24T02:29:17.000Z","updated":"2023-01-24T14:09:23.051Z","comments":true,"path":"api/articles/Kali渗透测试-WPA攻击.json","keywords":null,"cover":[],"text":"WPA PSK攻击 只有一种密码破解方法 WPA不存在WEP的弱点 只能暴力破解 CPU资源 时间 字典质量 网上共享的字典 泄露密码 地区电话号码段 Crunch生成字典 Kali中自带的字典文件 学习资源： http://etutorials.org/Networking/8...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-无线渗透实操","uid":"fd3a6a07295146ed58cfec16849c7890","slug":"Kali渗透测试-无线渗透实操","date":"2023-01-23T04:18:22.000Z","updated":"2023-01-23T15:15:53.641Z","comments":true,"path":"api/articles/Kali渗透测试-无线渗透实操.json","keywords":null,"cover":[],"text":"AIRCRACK-NG基础 无线渗透和审计神器 包含各种功能的工具套件 网络检测 嗅探抓包 包注入 密码破解 无论是有线或者无线，进入内网之后的攻击方式是相同的并且攻击方式是多样的 AIRMON-NG检查网卡驱动 airmon-ng airmon-ng列出网卡信息，Driver为...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-WPA安全系统","uid":"5f7874ec045900cbfd81273c03a1bc24","slug":"Kali渗透测试-WPA安全系统","date":"2023-01-09T12:39:38.000Z","updated":"2023-01-09T14:27:27.859Z","comments":true,"path":"api/articles/Kali渗透测试-WPA安全系统.json","keywords":null,"cover":[],"text":"WPA安全系统 全称：Wi-Fi Protected Access 802.11组为提高无线安全，开发两个新的链路层加密协议 Temporal Key Integrity Protocol (TKIP) WPA1 (较之WEP可动态改变密钥，亦可兼容早期网卡) Counter M...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-无线通信过程","uid":"794f4a9afb9c333220f5373c11dd59cc","slug":"Kali渗透测试-无线通信过程","date":"2023-01-06T02:41:27.000Z","updated":"2023-01-09T12:37:52.931Z","comments":true,"path":"api/articles/Kali渗透测试-无线通信过程.json","keywords":null,"cover":[],"text":"连接到无线网络 Probe STA向所有信道发出probe帧，发现AP AP回应Response Authentication STA向AP发出验证请求 发生认证过程(步骤可变，如加密算法的不同) AP响应STA的认证结果 Association STA发出关联请求 AP响应关联...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-Radiotap头部及802.11包分析","uid":"23e7a773291421d7be94d649cd41c79b","slug":"Kali渗透测试-Radiotap头部","date":"2023-01-02T12:38:01.000Z","updated":"2023-01-04T03:38:48.952Z","comments":true,"path":"api/articles/Kali渗透测试-Radiotap头部.json","keywords":null,"cover":[],"text":"RADIOTAP头部 802.11帧发射和接收的事实标准（Radiotap并不遵循802.11的标准，但802.11依赖Radiotap完成通信过程） Linux系统在驱动和API中内建支持Radiotap的解析 802.11帧发射之前，网卡驱动在802.11头前面添加Radio...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-Linux无线协议栈及配置命令","uid":"9380cb6d0ca72ae1f44641638d3e52e2","slug":"Kali渗透测试-Linux无线协议栈及配置命令","date":"2023-01-02T09:28:55.000Z","updated":"2023-01-02T10:33:48.752Z","comments":true,"path":"api/articles/Kali渗透测试-Linux无线协议栈及配置命令.json","keywords":null,"cover":[],"text":"802.11协议栈 协议栈 内核接口（kernel） 用户空间命令及相应的调用程序（userspace） 无线网卡配置查看无线网卡 ifconfig iwconfig iw list 其中Mode模式为Managed，只有Monitor模式才能抓包 iw list命令：列出网卡支...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-无线渗透基础","uid":"25897d89483cfbd0756806de5b4359dd","slug":"Kali渗透测试-无线渗透基础","date":"2023-01-02T01:28:24.000Z","updated":"2023-01-02T04:03:09.961Z","comments":true,"path":"api/articles/Kali渗透测试-无线渗透基础.json","keywords":null,"cover":[],"text":"IEEE 电气与电子工程师协会（Institute of Electrical and Electronics Engineers），简称IEEE，总部位于美国纽约，是一个国际性的电子技术与信息科学工程师的协会，也是全球最大的非营利性专业技术学会。 IEEE致力于电气、电子、计算...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/categories/无线渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"无线渗透","slug":"无线渗透","count":8,"path":"api/tags/无线渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-提权【三】","uid":"8491666a2108b97c7f9058fe4b5a2b80","slug":"Kali渗透测试-提权【三】","date":"2023-01-01T02:25:14.000Z","updated":"2023-01-01T09:53:18.163Z","comments":true,"path":"api/articles/Kali渗透测试-提权【三】.json","keywords":null,"cover":[],"text":"WINDOWS身份认证过程 当启动windows后，电脑首先会进入自检阶段，BOIS对硬件进行自检，然后找到计算中安装的第一个硬盘设备，从中定位到系统分区，找到操作系统所在的分区，按照路径找到操作系统内核文件，之后会进入用户登录的界面，这个界面被称为Windows NT Logo...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-提权【二】","uid":"a5f315a0a1ebf3c993f6279860b4eb67","slug":"Kali渗透测试-提权【二】","date":"2022-12-29T02:20:18.000Z","updated":"2022-12-31T09:47:48.622Z","comments":true,"path":"api/articles/Kali渗透测试-提权【二】.json","keywords":null,"cover":[],"text":"抓包嗅探 Windows Wireshark Omnipeek 下载：https://www.liveaction.com/ OmniPeek_UserGuide：https://mypeek.liveaction.com/elements/mypeek_documentatio...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-提权【一】","uid":"815fe720fb340233ebbc2f80a6a91476","slug":"Kali渗透测试-提权【一】","date":"2022-12-24T02:19:07.000Z","updated":"2022-12-24T04:36:28.995Z","comments":true,"path":"api/articles/Kali渗透测试-提权【一】.json","keywords":null,"cover":[],"text":"本地提权 已实现本地低权限账号登录 远程溢出 直接获取账号密码 希望获取更高权限 实现对目标进一步控制 系统账号之间权限隔离 操作系统安全的基础 用户空间 内核空间 系统账号 用户账号登陆时获取权限令牌 服务账号无需用户登录已在后台启动服务 Windows权限 user # 普通...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-后渗透","uid":"755b3499f4fdd2a688f548741850cfad","slug":"Kali渗透测试-后渗透","date":"2022-12-22T09:25:03.000Z","updated":"2022-12-22T16:09:35.765Z","comments":true,"path":"api/articles/Kali渗透测试-后渗透.json","keywords":null,"cover":[],"text":"后渗透 拿下目标服务器的shell后，避免管理员为漏洞打上补丁，之后就再也不能控制目标系统；由此，拿下目标主机shell后需要进行后渗透。 上传工具 提权 若是拿到普通用户权限需要进行提权 擦除攻击痕迹 防止溯源 安装后门 长期控制 Dump 密码 内网渗透 后渗透阶段 最大的挑...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"后渗透","slug":"后渗透","count":1,"path":"api/categories/后渗透.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"后渗透","slug":"后渗透","count":1,"path":"api/tags/后渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-缓冲区溢出【Windows】","uid":"df6f9f609e4433344bf39ccbf49e3ca8","slug":"Kali渗透测试-缓冲区溢出【Windows】","date":"2022-12-19T09:20:03.000Z","updated":"2022-12-27T06:05:02.793Z","comments":true,"path":"api/articles/Kali渗透测试-缓冲区溢出【Windows】.json","keywords":null,"cover":[],"text":"0Day 零日漏洞 未被官方所发现和公开 只掌握在个人手里 缓冲区 又称为缓存，它是内存空间的一部分 内存空间中预留了一定的存储空间，这些存储空间用来缓冲输入或输出的数据，这部分预留的空间就叫做缓冲区。 缓冲区溢出 缓冲区溢出 0Day中最主要的攻击方式 控制目标机器 原理：当缓...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"21 mins."},"categories":[{"name":"缓冲区溢出","slug":"缓冲区溢出","count":1,"path":"api/categories/缓冲区溢出.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"缓冲区溢出","slug":"缓冲区溢出","count":1,"path":"api/tags/缓冲区溢出.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-漏洞扫描工具","uid":"48f34670bb7ad122042ed7d59939a5da","slug":"Kali渗透测试-漏洞扫描工具","date":"2022-12-15T03:01:15.000Z","updated":"2022-12-19T03:37:47.750Z","comments":true,"path":"api/articles/Kali渗透测试-漏洞扫描工具.json","keywords":null,"cover":[],"text":"Nmap Script nmap漏洞扫描脚本路径 &#x2F;usr&#x2F;share&#x2F;nmap&#x2F;scripts &#x2F;scripts.db 漏洞利用脚本 less script.db | grep vuln | wc -l Smb-vuln-ms1...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"漏洞扫描","slug":"漏洞扫描","count":2,"path":"api/categories/漏洞扫描.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"漏洞扫描","slug":"漏洞扫描","count":2,"path":"api/tags/漏洞扫描.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-漏洞扫描概念","uid":"fe017e4da29721d7599c38c0ffdbd9b2","slug":"Kali渗透测试-漏洞扫描概念","date":"2022-12-15T01:20:08.000Z","updated":"2022-12-27T06:07:23.585Z","comments":true,"path":"api/articles/Kali渗透测试-漏洞扫描概念.json","keywords":null,"cover":[],"text":"发现弱点 发现漏洞 基于端口服务扫描结果版本信息（速度慢） 搜索已公开的漏洞数据库 https://www.exploit-db.com/ 使用漏洞扫描器实现漏洞管理 Searchsploit 由于在各大网站搜索漏洞会很不方便导致花费大量的实践，可以使用集成的漏洞搜索库 sear...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"漏洞扫描","slug":"漏洞扫描","count":2,"path":"api/categories/漏洞扫描.json"}],"tags":[{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"},{"name":"漏洞扫描","slug":"漏洞扫描","count":2,"path":"api/tags/漏洞扫描.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-nmap专题","uid":"dd3ae0f5a97a6beeb6ec96fc20e75d85","slug":"Kali渗透测试-nmap专题","date":"2022-12-14T12:57:43.000Z","updated":"2022-12-17T15:12:40.196Z","comments":true,"path":"api/articles/Kali渗透测试-nmap专题.json","keywords":null,"cover":[],"text":"Nmap目标发现 -iL # 从主机或者网络列表中读取数据进行扫描 -iR # 随机选择目标进行扫描 –exclude # 排除某个或某段地址进行扫描 主机发现 -sL # 列出扫描的目标，相当于子网掩码的计算 -sn # 不做端口扫描 -Pn # 无论是否有响应包，把所有需要扫...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-主动信息搜集【服务扫描】","uid":"0a2dd6f4d852060b39241e4c81614177","slug":"Kali渗透测试-主动信息搜集【服务扫描】","date":"2022-12-13T01:59:23.000Z","updated":"2022-12-17T15:23:03.123Z","comments":true,"path":"api/articles/Kali渗透测试-主动信息搜集【服务扫描】.json","keywords":null,"cover":[],"text":"服务扫描 识别开放端口上运行的应用 识别目标操作系统 提高攻击效率 Banner捕获 最简单，最不可靠，Banner信息可被管理员修改或删除，迷惑扫描者 服务识别 操作系统识别 SNMP分析 简单网络管理协议 Community strings 信息查询或重新配置 防火墙识别 B...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-主动信息搜集【端口扫描】","uid":"c561906c2b22af98a524983174fdc348","slug":"Kali渗透测试-主动信息搜集【端口扫描】","date":"2022-12-12T02:23:56.000Z","updated":"2022-12-17T15:27:36.068Z","comments":true,"path":"api/articles/Kali渗透测试-主动信息搜集【端口扫描】.json","keywords":null,"cover":[],"text":"端口扫描—UDP 二三四层发现的目的只是为了准确发现所有活着主机IP，确定攻击面，端口扫描即发现攻击点，发现开放端口。端口对应网络服务及应用端程序，服务端程序的漏洞通过端口攻入。 UDP端口扫描 假设ICMP prot-unreachable响应代表端口关闭 目标系统不响应ICM...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-主动信息搜集【四层】","uid":"562470368a0e4b772e0a77daba1b3bbe","slug":"Kali渗透测试-主动信息搜集【四层】","date":"2022-12-11T09:11:26.000Z","updated":"2022-12-17T15:29:01.299Z","comments":true,"path":"api/articles/Kali渗透测试-主动信息搜集【四层】.json","keywords":null,"cover":[],"text":"主动信息搜集—四层发现 优点 可路由且结果可靠 不太可能被防火墙过滤 甚至可以发现所有端口都被过滤的主机 缺点 基于状态过滤的防火墙可能过滤扫描 全端口扫描速度慢 TCP 未经请求的ACK—RST 未建立连接，未请求资源直接发送ACK数据包，目标系统会直接给发ACK的来源IP返回...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-主动信息搜集【三层】","uid":"fdfdea21437da4c26453fa91e3c5de6d","slug":"Kali渗透测试-主动信息搜集【三层】","date":"2022-12-11T01:51:11.000Z","updated":"2022-12-17T15:30:25.831Z","comments":true,"path":"api/articles/Kali渗透测试-主动信息搜集【三层】.json","keywords":null,"cover":[],"text":"主动信息搜集—三层发现 优点 可路由 速度比较快 缺点 速度比二层慢 经常被边界防火墙过滤 IP、icmp协议 Ping ping 192.168.216.2 -c 5 -c 指定发送5个包 ping -R 1.1.1.1 # -R 记录经过的路由 -R参数记录的是离发送端远的端...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-主动信息搜集【二层】","uid":"569a0f2ea0be37f93bd60ef29cd8c870","slug":"Kali渗透测试-主动信息搜集【二层】","date":"2022-12-10T01:36:56.000Z","updated":"2023-01-28T16:44:39.801Z","comments":true,"path":"api/articles/Kali渗透测试-主动信息搜集【二层】.json","keywords":null,"cover":[],"text":"主动信息搜集 被动信息搜集可能搜集到的信息不是最新的信息，而是历史信息，由此，需要使用主动信息搜集对被动信息搜集得到的结果进行确认和验证，并且通过主动的手段发现更新，更准确，更完善的信息，以致于对后续渗透更有帮助。 直接与目标系统交互通信 无法避免留下访问的痕迹 使用受控的第三方...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试-被动信息搜集【搜索引擎篇】","uid":"ada03ac2e58b4b7f52c6c416827cfa9d","slug":"Kali渗透测试-被动信息搜集【搜索引擎篇】","date":"2022-12-06T12:34:10.000Z","updated":"2022-12-17T15:33:00.616Z","comments":true,"path":"api/articles/Kali渗透测试-被动信息搜集【搜索引擎篇】.json","keywords":null,"cover":[],"text":"搜索引擎利用Hacking语法进行信息搜集： 公司新闻动态 重要雇员信息 机密文档&#x2F;网络拓扑 搜索引擎会爬取任何数据，尽管没有对外公布 用户名密码 目标系统软硬件技术架构 搜索引擎获取Banner信息，了解其架构 SHODAN 搜索联网设备 Banner：http、ft...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Kali渗透测试--被动信息搜集","uid":"ef9aad89feb14bc71db83dcf1c572a1d","slug":"Kali渗透测试-被动信息搜集【DNS篇】","date":"2022-12-05T02:18:26.000Z","updated":"2022-12-17T15:45:50.987Z","comments":true,"path":"api/articles/Kali渗透测试-被动信息搜集【DNS篇】.json","keywords":null,"cover":[],"text":"公开渠道搜集被动信息搜集完全基于公开渠道的信息获取，这些信息都是在公开渠道被公开过；被动信息搜集就是通过公开渠道去搜集目标公司以及系统相关的信息，不会与目标系统产生直接交互访问，搜索渠道和手段都是基于搜索引擎，媒体网站等。 官方信息搜集文章： 美国军方： http://www.f...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"Kali","slug":"Kali","count":27,"path":"api/tags/Kali.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"正则表达式","uid":"03a1af7058cec8bb8efe418ed228e157","slug":"正则表达式","date":"2022-10-31T00:38:44.000Z","updated":"2022-10-31T02:17:40.177Z","comments":true,"path":"api/articles/正则表达式.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 正则语法（入门） 字符组（[]）允许匹配一组可能出现的字符。 区间： 连字符(-)代表区间： 要匹配任意数字可以使用[0-9]； 如果想要匹配所有小写字母，可以写成[a-z]； 想要匹配所有大写字母可以写成[A-Z]。 匹配特殊字符 使用\\进行都特殊字符...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入Payload汇总","uid":"54b1a02585172138db622471e54a6e9c","slug":"SQL注入Payload汇总","date":"2022-09-03T00:22:57.000Z","updated":"2022-12-17T15:47:18.556Z","comments":true,"path":"api/articles/SQL注入Payload汇总.json","keywords":null,"cover":[],"text":"0x00 文章出处文章来源：khan安全攻防实验室 0x01 通用 SQL 注入负载&#39; &#39;&#39; &#96; &#96;&#96; , &quot; &quot;&quot; &#x2F; &#x2F;&#x2F; \\ \\\\ ; &#39; or &quot;...","link":"","photos":[],"count_time":{"symbolsCount":"51k","symbolsTime":"46 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-[RoarCTF2019]Easy-Calc","uid":"86385108ea30f567fcdfebd7ea538d02","slug":"BUU-RoarCTF2019-Easy-Calc","date":"2022-07-24T01:50:42.000Z","updated":"2022-07-24T02:19:16.439Z","comments":true,"path":"api/articles/BUU-RoarCTF2019-Easy-Calc.json","keywords":null,"cover":[],"text":"0x00BUU一道PHP解析特性题目。 0x01 原理原理1：利用PHP的字符串解析特性 参考文章：https://www.freebuf.com/articles/web/213359.html PHP将查询字符串（在URL或正文中）转换为内部$_GET或关联数组$_POST。...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-[极客大挑战2019]PHP","uid":"03b1766a9dfb129451d74c3a9e2dbdc8","slug":"BUU-极客大挑战2019-PHP","date":"2022-07-23T15:25:34.000Z","updated":"2022-07-23T16:15:00.725Z","comments":true,"path":"api/articles/BUU-极客大挑战2019-PHP.json","keywords":null,"cover":[],"text":"0x00BUU一道PHP反序列化题目。 0x01 访问靶场打开靶场，提示有备份网站的好习惯，猜测有备份网站的文件 直接扫目录得到www.zip文件，解压： 0x02 代码审计查看index.php和class.php这两个主文件即可： index.php： include 'cl...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-HardSQL","uid":"fc23abf567ea93cff7f9b201441e8d7a","slug":"BUU-HardSQL","date":"2022-07-22T11:29:37.000Z","updated":"2022-07-22T11:55:11.704Z","comments":true,"path":"api/articles/BUU-HardSQL.json","keywords":null,"cover":[],"text":"0x00BUU一到SQL注入题目。 0x01打开靶场： 先试试万能密码： 这里应该是把空格过滤了，测试一下： 输入admin’ ‘，还是返回同样的页面： 使用括号替换空格发现出现报错，没有出现那几个汉字，证明确实过滤了空格： 空格绕过原理： 括号是来包含子查询的，任何可以计算出结...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Bugku-bp","uid":"dbee8267c0ff772e8e935645576bc24d","slug":"Bugku-bp","date":"2022-07-22T02:21:04.000Z","updated":"2022-07-22T02:50:25.943Z","comments":true,"path":"api/articles/Bugku-bp.json","keywords":null,"cover":[],"text":"0x00Bugku一道弱口令爆破题目，比平时的爆破略微有些不同。 0x01打开靶场，提示使用弱口令top1000，而且应该是z开头的六位密码： 0x02从网上下载好top1000弱口令字典直接使用bp设置好参数进行爆破： 0x03 观察长度都一样，没有任何一个不同，这就是与平时爆...","link":"","photos":[],"count_time":{"symbolsCount":856,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-WarmUp","uid":"b677a8964f78654f7fae8209041bf9e6","slug":"BUU-WarmUp","date":"2022-07-21T09:28:21.000Z","updated":"2022-07-23T15:38:34.333Z","comments":true,"path":"api/articles/BUU-WarmUp.json","keywords":null,"cover":[],"text":"0x00BUU，Web题目WarmUp，PHP代码审计。 0x01打开靶场只有一个表情包： 查看源码发现source.php文件，直接访问： 出现源代码。 看到源码中存在一个hint.php文件，直接访问： 提示flag在ffffllllaaaagggg当中，告诉了flag的文件...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"},{"name":"文件包含","slug":"文件包含","count":2,"path":"api/tags/文件包含.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SSRF靶场","uid":"a26ca86ff3a376714693fb5a890fc5f2","slug":"SSRF靶场","date":"2022-07-21T01:48:20.000Z","updated":"2022-07-21T02:18:37.896Z","comments":true,"path":"api/articles/SSRF靶场.json","keywords":null,"cover":[],"text":"0x00 CTFHUBCTFHUB的SSRF题目。 0x01 涉及协议及知识点 http:&#x2F;&#x2F;：探测内网主机存活、端口开放情况，可以通过访问其它网站确定存活，如百度 gopher:&#x2F;&#x2F;：发送GET或POST请求(需要配合http协议二次ur...","link":"","photos":[],"count_time":{"symbolsCount":706,"symbolsTime":"1 mins."},"categories":[{"name":"SSRF","slug":"SSRF","count":2,"path":"api/categories/SSRF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"SSRF","slug":"SSRF","count":2,"path":"api/tags/SSRF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-XXE","uid":"70c23a918e95c44d14bcc6704e34bc7d","slug":"BUU-XXE","date":"2022-07-19T13:55:45.000Z","updated":"2022-07-21T02:42:53.123Z","comments":true,"path":"api/articles/BUU-XXE.json","keywords":null,"cover":[],"text":"0x00BUU一道基础XXE题目。 0x01打开靶场出现登录界面： 随便登录抓包观察数据包： 发现数据包中有xml 文档声明： &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; 因...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-CODE-REVIEW","uid":"ce7038bbe334cd30b437a68d925a5eab","slug":"BUU-CODE-REVIEW","date":"2022-07-19T02:43:50.000Z","updated":"2022-07-19T03:30:50.144Z","comments":true,"path":"api/articles/BUU-CODE-REVIEW.json","keywords":null,"cover":[],"text":"0x00BUU基础题，代码审计和PHP反序列化。 0x01源码： &lt;?php /** * Created by PhpStorm. * User: jinzhao * Date: 2019/10/6 * Time: 8:04 PM */ highlight_file(__F...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【六】","uid":"0a0a60d095a528f1d7afccb8f8c8a1f3","slug":"内网安全-域横向渗透【六】","date":"2022-07-18T02:03:24.000Z","updated":"2022-07-18T12:57:38.179Z","comments":true,"path":"api/articles/内网安全-域横向渗透【六】.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 知识点0x00 代理和隧道技术区别隧道和代理的区别是：代理是委托一个人找目标，隧道是通过特定的通讯方法，直接找到这个目标；代理最主要的特征是，无论代理后面挂了几个设备，代理对外只表现为一个设备。外部设备以为自己是在和代理交互，而不能感知代理内部的设备。隧...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【五】","uid":"58d39df92467e98ccd5e4018d930afdc","slug":"内网安全-域横向渗透【五】","date":"2022-07-15T11:33:18.000Z","updated":"2022-07-18T02:04:58.618Z","comments":true,"path":"api/articles/内网安全-域横向渗透【五】.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 知识点0x00 内外网判断 内网ip地址是私有ip地址（10&#x2F;8, 172.16&#x2F;12 , 192.168&#x2F;16），除此之外就是外网ip。 0x01 内网1和内网2通信问题 两个不同的内网的主机想要通过CS或者MSF等工具实...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【四】","uid":"377bf3c0ff3344364d83fd8924788afb","slug":"内网安全-域横向渗透【四】","date":"2022-06-30T02:12:36.000Z","updated":"2022-06-30T09:07:01.865Z","comments":true,"path":"api/articles/内网安全-域横向渗透【四】.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 RDP传递-Mimikatz0x00 RDP介绍远程桌面协议(RDP)是一个多通道的协议，让使用者(所在计算机称为用户端或’本地计算机’)连上提供微软终端机服务的计算机(称为服务端或’远程计算机’)。 大部分的Windows版本都有用户端所需软件，有些其...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【三】","uid":"f3c27b71dabaf6ecc45b5a407a397e09","slug":"内网安全-域横向渗透【三】","date":"2022-06-28T13:22:21.000Z","updated":"2022-06-29T12:17:00.942Z","comments":true,"path":"api/articles/内网安全-域横向渗透【三】.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 Kerberos 协议###0x00 图解 0x01 介绍 客户机将明文密码进行 NTLM 哈希,然后和时间戳一起加密(使用krbtgt 密码 hash 作为密钥)，发送给 kdc（域控），kdc 对用户进行检测，成功之后创建 TGT(Ticket-Gr...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【二】","uid":"3025b9eec92496f30bb6ae7638116cb8","slug":"内网安全-域横向渗透【二】","date":"2022-06-28T01:58:56.000Z","updated":"2022-06-28T08:53:25.956Z","comments":true,"path":"api/articles/内网安全-域横向渗透【二】.json","keywords":null,"cover":[],"text":"0x00 相关知识点0x001、Windows2012以上版本默认关闭wdigest，攻击者无法从内存中获取明文密码（mimikatz），只能获取相关的hash值； 2、Windows2012以下版本如安装KB2871997补丁，同样也会导致无法获取明文密码 解决方法： 1、利用...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域横向渗透【一】","uid":"fd6e852f2bcb63bb7a3b0ef31dd46aab","slug":"内网安全-域横向渗透【一】","date":"2022-06-27T00:59:07.000Z","updated":"2022-06-27T14:44:49.944Z","comments":true,"path":"api/articles/内网安全-域横向渗透【一】.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 明文传递 at&amp;schtasks###0x00 思路及流程 1、在拿下一台内网主机后，通过本地信息搜集收集用户凭证等信息后，可以横向渗透拿下更多的主机在已知目标系统的用户明文密码的基础上， 使用at&amp;schtasks 命令，直接可以在远程...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"内网安全-域环境与工作组及局域网探针","uid":"71056ae21dd2a465161404f46f6a02f9","slug":"内网安全-域环境与工作组及局域网探针","date":"2022-06-26T02:00:33.000Z","updated":"2022-06-26T14:34:56.974Z","comments":true,"path":"api/articles/内网安全-域环境与工作组及局域网探针.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 基本知识###0x00 网络拓扑 0x01 DMZ（非军事）区域DMZ，是英文“demilitarized zone”的缩写，中文名称为“隔离区”，也称“非军事化区”。它是为了解决安装防火墙后外部网络的访问用户不能访问内部网络服务器的问题，而设立的一个非...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/categories/内网渗透.json"}],"tags":[{"name":"内网渗透","slug":"内网渗透","count":7,"path":"api/tags/内网渗透.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-Linux提权2","uid":"94e89ed0a4dcaf9a831f6c95bed9331c","slug":"权限提升-Linux提权2","date":"2022-06-25T01:38:59.000Z","updated":"2022-06-25T11:58:34.017Z","comments":true,"path":"api/articles/权限提升-Linux提权2.json","keywords":null,"cover":[],"text":"0x00 Linux 提权SUID配合环境变量本地提权0x00首先需要普通权限用户登录主机： 上传demo.c文件至主机的普通用户文件夹： 0x01 使用以下命令编译demo.c文件，编译出shell文件：gcc demo.c -o shell 0x02环境变量：一个命令对应执行...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-Linux提权1","uid":"fcd910c24ec5aac777084d6a38361ecb","slug":"权限提升-Linux提权1","date":"2022-06-23T01:10:48.000Z","updated":"2022-06-24T13:07:43.590Z","comments":true,"path":"api/articles/权限提升-Linux提权1.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 信息收集LinEnum、linuxprivchecker脚本0x00 LinEnum需要通过webshell权限或文件上传权限上传“LinEnum.sh”到“tmp”文件夹下。 （tmp目录是linux临时目录，可读写可执行，若是上传其他目录有可能当前权...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-windows提权2","uid":"c0a50503f3bb03b0879376d7c8e571c3","slug":"权限提升-windows提权2","date":"2022-06-21T15:02:18.000Z","updated":"2022-06-22T16:00:24.862Z","comments":true,"path":"api/articles/权限提升-windows提权2.json","keywords":null,"cover":[],"text":"0x00 RottenPotato(烂土豆)配合令牌窃取提权0x00 原理1.欺骗“NT AUTHORITY\\SYSTEM”账户通过NTLM认证到我们控制的TCP终端。 2.对这个认证过程使用中间人攻击（NTLM重放），为“NT AUTHORITY\\SYSTEM”账户本地协商一个...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-数据库提权2","uid":"2b9713aac0d7c052ca172c6738a7a353","slug":"权限提升-数据库提权2","date":"2022-06-21T00:31:26.000Z","updated":"2022-06-21T15:02:52.187Z","comments":true,"path":"api/articles/权限提升-数据库提权2.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 Redis数据库提权0x00 redis介绍Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。从2010年3月15日起，Redis的开发工作由VMware主持。从20...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-数据库提权1","uid":"1989a1e5dad512659756c4dce4a56243","slug":"权限提升-数据库提权1","date":"2022-06-20T08:13:30.000Z","updated":"2022-06-21T00:44:39.773Z","comments":true,"path":"api/articles/权限提升-数据库提权1.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 数据库提权的意义及流程1、意义：在利用系统溢出漏洞无果的情况下，可以采用数据库进行提权；但需要知道数据库提权的前提条件：服务器开启数据库服务及获取到最高权限用户密码。除 Access 数据库外，其他数据库基本都存在数据库提权的可能。 2、流程 ：服务探针...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-windows提权","uid":"e38c975ecb9beb0ae47fa044c10774fe","slug":"权限提升-windows提权","date":"2022-06-19T14:00:54.000Z","updated":"2022-06-20T02:03:43.786Z","comments":true,"path":"api/articles/权限提升-windows提权.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 windows权限划分0x00 普通权限 1、默认情况下，系统为用户分了7个组，并给每个组赋予不同的操作权限，管理员组(Administrators)、高权限用户组(PowerUsers)、普通用户组(Users)、备份操作组(Backup Operat...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-网站后台漏洞第三方获取","uid":"f8af41c2e2288536f49250d641a67ce7","slug":"权限提升-网站后台漏洞第三方获取","date":"2022-06-19T01:32:42.000Z","updated":"2022-06-19T11:53:52.360Z","comments":true,"path":"api/articles/权限提升-网站后台漏洞第三方获取.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 权限分类 1、后台权限：（获得方式：爆破，注入猜解，弱口令等获取的帐号密码配合登录） 一般网站或应用后台只能操作应用的界面内容数据图片等信息，无法操作程序的源代码或服务器上的资源文件的。（如后台功能存在文件操作的话也可以操作文件数据） 2、网站权限：（获...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-TP5框架1","uid":"189405de58d744911bbd6ef55ac89edc","slug":"代码审计-TP5框架1","date":"2022-06-18T01:49:09.000Z","updated":"2022-06-18T15:42:07.123Z","comments":true,"path":"api/articles/代码审计-TP5框架1.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 Metinfo-无框架-变量覆盖-自动审计或搜索0x00打开靶场： 0x01使用seay先进行自动审计： 检测到可能存在变量覆盖漏洞： 0x02打开其配置文件审计相关函数： 可以看到双$$符号。 foreach()函数，每次循环中，当前单元的值被赋给 $...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-PHP框架MVC类上传断点调试挖掘","uid":"702d6f073e84f9179e4d91ac7d1a1d09","slug":"代码审计-PHP框架MVC类上传断点调试挖掘","date":"2022-06-13T02:24:54.000Z","updated":"2022-06-14T12:06:41.086Z","comments":true,"path":"api/articles/代码审计-PHP框架MVC类上传断点调试挖掘.json","keywords":null,"cover":[],"text":"0x00 关键字搜索函数，键字，全局变量等 文件上传的相关函数：move_uploaded_file 等； 文件上传的关键字：在写上传的时候会有注释，如&#x2F;&#x2F;上传； 全局变量$_FILES‘ 应用功能抓包：（任何可能存在上传的应用功能点），前台会员中心，后台新闻...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-CMS靶场","uid":"54d8350a6e513341975c7d9c3662fe93","slug":"代码审计-CMS靶场","date":"2022-06-12T08:33:39.000Z","updated":"2022-06-12T11:18:54.947Z","comments":true,"path":"api/articles/代码审计-CMS靶场.json","keywords":null,"cover":[],"text":"0x00 骑士人才招聘系统-SQL注入挖掘0x00靶场：骑士人才招聘系统PHPCMS，3.4版本； 描述：源码自带过滤机制。 0x01使用seay源代码审计系统分析源码： 0x02分析时需要找全局配置文件，一般全局配置文件就会又过滤机制； 一般全局配置文件则是需要其他问价加载时包...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计--PHP无框架项目SQL注入挖掘技巧","uid":"731c1533414732448019e85116b30fa4","slug":"代码审计-PHP无框架项目SQL注入挖掘技巧","date":"2022-06-11T09:55:23.000Z","updated":"2022-07-23T15:41:11.307Z","comments":true,"path":"api/articles/代码审计-PHP无框架项目SQL注入挖掘技巧.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 使用Fortify进行代码审计使用sql靶场源代码为例，颜色代表漏洞危害等级，也可调试代码，可以为繁琐的手工审计节省出大量时间。 0x02 定点挖掘0x00 关键字通过搜索特定关键字尝试寻找特定漏洞，如“select”“insert”“update”等与...","link":"","photos":[],"count_time":{"symbolsCount":574,"symbolsTime":"1 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-权限控制","uid":"21e0a43668edaae60c8a409447987781","slug":"WAF绕过-权限控制","date":"2022-06-11T02:42:28.000Z","updated":"2022-06-11T04:05:32.404Z","comments":true,"path":"api/articles/WAF绕过-权限控制.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 变量覆盖一句话木马，用eval()函数将字符串转换为PHP代码： &lt;?php @ev删掉这串汉字al($_POST[‘chop删掉这串汉字per’]);?> 用ass删掉这串汉字ert代替eval()： （eval()会被检测） &lt;?php ...","link":"","photos":[],"count_time":{"symbolsCount":959,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-漏洞利用之注入上传跨站等绕过","uid":"33e492c349a108568658a2914e822de5","slug":"WAF绕过-漏洞利用之注入上传跨站等绕过","date":"2022-06-10T14:12:41.000Z","updated":"2022-06-10T15:42:56.054Z","comments":true,"path":"api/articles/WAF绕过-漏洞利用之注入上传跨站等绕过.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 SQL注入使用如sqlmap等工具注入时，为防止CC拦截，修改数据包us头模仿爬虫，或使用代理池 安全狗：参考之前payload Aliyun：基本修改指纹即可 宝塔：匹配关键字，包括“&#x2F;*”，注入语句的每个“&#x2F;*”都改为“%00&#...","link":"","photos":[],"count_time":{"symbolsCount":614,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-漏洞发现之代理池指纹被动探针","uid":"60c32b8c4d5a420db76927924181a57e","slug":"WAF绕过-漏洞发现之代理池指纹被动探针","date":"2022-06-10T10:48:38.000Z","updated":"2022-06-10T12:00:36.685Z","comments":true,"path":"api/articles/WAF绕过-漏洞发现之代理池指纹被动探针.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 漏洞发现触发WAF点-针对xray,awvs等1、扫描速度-(代理池，延迟，白名单等)：速度过快肯定会被拦截 2、工具指纹-(特征修改，伪造模拟真实用户等) 3、漏洞Payload-(数据变异，数据加密，白名单等) （热门的扫描工具（awvs，xray等...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-信息搜集反爬虫延时代理池技术","uid":"7994f7b150cfea785dcbebf986580404","slug":"WAF绕过-信息搜集反爬虫延时代理池技术","date":"2022-06-09T08:30:59.000Z","updated":"2022-06-09T09:52:21.731Z","comments":true,"path":"api/articles/WAF绕过-信息搜集反爬虫延时代理池技术.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 绕过手法1、请求方法：改变数据包的请求方法，如从Head改为更常见的Get 2、模拟用户：修改整个数据包，使它更像一般用户发送的数据 3、延时：两次访问间设置合适的时间间隔，以防触发拦截机制 4、代理池：使用代理访问，避开对单个IP的限制 5、爬虫引擎：...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"漏洞发现-API接口服务类","uid":"3453cd6915cc1680ff9c8ccd16d4f69e","slug":"漏洞发现-API接口服务类","date":"2022-06-08T07:03:31.000Z","updated":"2022-06-08T13:07:39.886Z","comments":true,"path":"api/articles/漏洞发现-API接口服务类.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 端口服务类安全测试根据前期信息收集针对目标端口服务类探针后进行的安全测试；主要涉及攻击方法：口令安全，WEB类漏洞，版本漏洞等，其中产生的危害可大可小。属于端口服务&#x2F;第三方服务类安全测试面。一般在已知应用无思路的情况下选用的安全测试方案。 0x...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/categories/漏洞检测.json"}],"tags":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/tags/漏洞检测.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"漏洞发现-APP应用类","uid":"4b54776e740f7d43a9c5a69811a9ccbc","slug":"漏洞发现-APP应用类","date":"2022-06-07T14:42:42.000Z","updated":"2022-06-08T03:48:10.109Z","comments":true,"path":"api/articles/漏洞发现-APP应用类.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 思路反编译提取 URL 或抓包获取 URL，进行 WEB 应用测试，如不存在或走其他协议的情况下，需采用网络接口抓包进行数据获取，转至其他协议安全测试。 0x02 工具1、Burpsuite 2、Charlesproxy 3、apk一键提取 0x03 案...","link":"","photos":[],"count_time":{"symbolsCount":468,"symbolsTime":"1 mins."},"categories":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/categories/漏洞检测.json"}],"tags":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/tags/漏洞检测.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"漏洞发现-Web应用类","uid":"70588e66e16ac1afefd26a13c036cac3","slug":"漏洞发现-Web应用类","date":"2022-06-07T09:28:00.000Z","updated":"2022-06-07T10:26:54.162Z","comments":true,"path":"api/articles/漏洞发现-Web应用类.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 已知CMS例如常见的 dedecms.discuz,wordpress 等源码结构，这种一般采用非框架类开发，但也有少部分采用的是框架类开发，针对此类源码程序的安全检测，我们要利用公开的漏洞进行测试，如不存在可采用白盒代码审计自行挖掘。 已知CMS可以利...","link":"","photos":[],"count_time":{"symbolsCount":633,"symbolsTime":"1 mins."},"categories":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/categories/漏洞检测.json"}],"tags":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/tags/漏洞检测.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"漏洞发现-操作系统类漏洞","uid":"d10b61f7a1925f3d1f2bb509e6d073e3","slug":"漏洞发现-操作系统类漏洞","date":"2022-06-07T09:20:13.000Z","updated":"2022-06-07T09:21:06.444Z","comments":true,"path":"api/articles/漏洞发现-操作系统类漏洞.json","keywords":null,"cover":[],"text":"0x00脑图 0x01 漏洞探针系统漏洞由于手工检测操作系统漏洞很复杂很麻烦，由此利用漏洞探针工具检测漏洞。 漏扫工具：Goby,Nmap,Nessus Nmap的一些第三方漏洞库： Nmap –script&#x3D;vuln 默认 nse 插件扫描 Nmap vulscan ...","link":"","photos":[],"count_time":{"symbolsCount":424,"symbolsTime":"1 mins."},"categories":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/categories/漏洞检测.json"}],"tags":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/tags/漏洞检测.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"XXE本地靶场","uid":"b0d1a06dcd6e0826834acbe52fab1564","slug":"XXE本地靶场","date":"2022-06-06T00:54:30.000Z","updated":"2022-06-06T02:24:04.412Z","comments":true,"path":"api/articles/XXE本地靶场.json","keywords":null,"cover":[],"text":"0x00 XXE-Lab0x00随便输入用户名和密码抓包观察： 可以看到用户名和密码是使用XML格式进行传输，并且数据包中Content-Type: 字段为application/xml;charset=utf-8带有xml字样，X-Requested-With: 字段为XMLH...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Vulnhub-XXE靶场","uid":"d6b5c98aeeb32013f5e3f6af5fdb7e80","slug":"Vulnhub-XXE靶场","date":"2022-06-05T14:38:38.000Z","updated":"2022-06-05T16:23:18.119Z","comments":true,"path":"api/articles/Vulnhub-XXE靶场.json","keywords":null,"cover":[],"text":"0x00靶机地址：https://download.vulnhub.com/xxe/XXE.zip 攻击机：Ninjitsu OS 0x01打开靶机 0x02查看攻击机ip地址： 使用nmap扫描网段，查找靶机ip： nmap -sS 192.168.216.1&#x2F;24 ...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"XXE和XML-利用检测绕过","uid":"f59b4912b599c61d7ef7202907a014a6","slug":"XXE和XML-利用检测绕过","date":"2022-06-05T09:15:30.000Z","updated":"2022-06-06T01:08:06.472Z","comments":true,"path":"api/articles/XXE和XML-利用检测绕过.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 XML简介###0x00 1、XML指可扩展标记语言，它被设计用来传输和存储数据。（HTML被用来显示数据）2、XML没有预定义的标签，需要自行定义标签3、XML是不作为的，及它不存在任何的行为，只是用来结构化、传输和存储信息4、它仅仅是纯文字5、XML...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"反序列化-JAVA","uid":"765364a990a298eaa5bfb6798653b2a8","slug":"反序列化-JAVA","date":"2022-06-05T01:26:42.000Z","updated":"2022-06-05T03:25:14.974Z","comments":true,"path":"api/articles/反序列化-JAVA.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 Java中的API实现位置：Java.io.ObjectOutputStream Java.io.ObjectInputStream 序列化：ObjectOutputStream 类–&gt;writeObject() ​ 注：该方法对参数指定的obj对...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"反序列化靶场","uid":"12fdb6ecdc9fce56588b7231aac6d69e","slug":"反序列化靶场","date":"2022-06-04T09:57:18.000Z","updated":"2022-06-04T14:54:14.476Z","comments":true,"path":"api/articles/反序列化靶场.json","keywords":null,"cover":[],"text":"0x00 bugku-CTF-点login咋没反应0x00一道PHP反序列化的CTF题目。 0x01打开靶场看到有登录框，并且给提示说点了login没有反应 0x02查看源代码发现有一个admin.css文件，打开查看 0x03可以看到提示try ?28606，试试传入28606...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"反序列化-PHP","uid":"87006ba4a5e8f65e132df547ebdb643d","slug":"反序列化-PHP","date":"2022-06-04T01:51:34.000Z","updated":"2022-06-04T13:29:05.897Z","comments":true,"path":"api/articles/反序列化-PHP.json","keywords":null,"cover":[],"text":"0x00脑图 0x01 原理序列化：将对象转化为字节序列 反序列化：将字节序列转化为对象 0x02 PHP反序列化未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL 注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权-验证码与Token及接口","uid":"e9b18ef1b67c7f0e9290c6534e851593","slug":"逻辑越权-验证码与Token及接口","date":"2022-06-02T08:18:09.000Z","updated":"2022-06-03T11:11:24.010Z","comments":true,"path":"api/articles/逻辑越权-验证码与Token及接口.json","keywords":null,"cover":[],"text":"0x00脑图 0x011、验证码安全 分类: 图片，手机或邮箱，语音，视频，操作等原理: 验证生成或验证过程中的逻辑问题危害: 账户权限泄漏，短信轰炸，遍历，任意用户操作等漏洞: 客户端回显，验证码复用，验证码爆破，绕过等—验证码爆破：没有次数限制，验证码有效时间内不变 —验证码...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权-找回机制与接口爆破","uid":"539bd4c95e28f22aa63a4256033042d5","slug":"逻辑越权-找回机制与接口爆破","date":"2022-06-01T10:04:03.000Z","updated":"2022-06-03T08:48:22.128Z","comments":true,"path":"api/articles/逻辑越权-找回机制与接口爆破.json","keywords":null,"cover":[],"text":"0x001.找回重置机制 客户端回显：验证码在客户端的浏览器或数据包中可以看到 Response状态值：页面通过该值返回输入的验证码的对错，可以修改数据包中的值，有回复的状态值如0&#x2F;1，我们可以更改状态值来实现绕过 验证码爆破：如果验证码范围不大，验证码有效时间足够，没...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权靶场--后台及订单支付类","uid":"329a24a72a2314bc7146a2672d8bedf5","slug":"逻辑越权靶场-后台及订单支付类","date":"2022-06-01T01:40:29.000Z","updated":"2022-06-01T07:22:06.683Z","comments":true,"path":"api/articles/逻辑越权靶场-后台及订单支付类.json","keywords":null,"cover":[],"text":"0x00 后台登陆账号密码爆破测试0x00靶场：ZBlog博客网站后台密码爆破 攻击机：windows10 0x01利用admin，admin抓取登录时的数据包： 可以看到密码是经过加密的，类型应该是md5。 0x02尝试利用BP爆破模块进行密码的暴力破解； 由于密码是经过加密的...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权--登录脆弱及支付篡改","uid":"6ff7edeb448384a80b03b049d4e9dda5","slug":"逻辑越权-登录脆弱及支付篡改","date":"2022-05-31T13:00:46.000Z","updated":"2022-05-31T13:43:44.515Z","comments":true,"path":"api/articles/逻辑越权-登录脆弱及支付篡改.json","keywords":null,"cover":null,"text":"0x00 登录应用功能点安全问题检测功能点，检测，危害，修复方案等 检测：存在登录功能点的地方 危害：不用账号密码直接登录 登陆点越权方法： 1.登录点暴力破解：如果数据包传输的账号密码没有加密或加密方式已知，可以尝试暴力破解2.HTTP&#x2F;HTTPS 传输：https会...","link":"","photos":[],"count_time":{"symbolsCount":441,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权靶场","uid":"1851c5af9327b469d7ad45778d027d01","slug":"逻辑越权靶场","date":"2022-05-30T14:40:09.000Z","updated":"2022-05-30T16:02:11.360Z","comments":true,"path":"api/articles/逻辑越权靶场.json","keywords":null,"cover":[],"text":"0x00靶机：pikachu逻辑越权，墨者靶场-身份认证失效漏洞实战 攻击机：windows10 0x01 水平越权###0x00 首先以普通用户登录： 0x01抓包查看数据包信息： 将username字段中的kobe修改为lucy： 可以看到用户切换成功，实现了水平越权。 0x...","link":"","photos":[],"count_time":{"symbolsCount":920,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"逻辑越权--水平垂直越权","uid":"e12149c3e216e6cbcac496259253a06d","slug":"逻辑越权-水平垂直越权","date":"2022-05-30T08:55:04.000Z","updated":"2022-05-30T10:40:06.234Z","comments":true,"path":"api/articles/逻辑越权-水平垂直越权.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 漏洞产生原因通常情况下，一个 Web 程序功能流程是登录 - 提交请求 - 验证权限 - 数据库查询 - 返回结果。如果验证权限不足，便会导致越权。常见的程序都会认为通过登录后即可验证用户的身份，从而不会做下一步验证，最后导致越权。 隐藏URL 直接对象...","link":"","photos":[],"count_time":{"symbolsCount":847,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"攻防世界：upload","uid":"006aa54f10dc84a237bfb17ee3048459","slug":"攻防世界：upload","date":"2022-05-11T08:43:06.000Z","updated":"2022-05-11T10:54:14.236Z","comments":true,"path":"api/articles/攻防世界：upload.json","keywords":null,"cover":[],"text":"前言攻防世界一道Web进阶题，题目是upload，最后做了半天使用upload的方式一点用没有，看了几篇博主的帖子，发现是SQL注入，文件名的SQL注入。 0x01上传2.jpg文件会返回文件名，上传php文件返回：不正确的拓展名；开始以为有检测，尝试了各种upload的绕过方式...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"攻防世界-web-command_execution","uid":"c8ef155fa65ec1b0a64a3057d6715027","slug":"攻防世界-web-command-execution","date":"2022-05-09T08:49:25.000Z","updated":"2022-05-09T09:05:38.529Z","comments":true,"path":"api/articles/攻防世界-web-command-execution.json","keywords":null,"cover":[],"text":"前言一道攻防世界的命令执行题目。 0x00 根据提示RCE无WAF，直接打开题目。 0x01 ##0x02 老规矩，先看看是何服务器 linux服务器。 0x03先ping 127.0.0.1，有结果 使用linux管道符查看目录 127.0.0.1|ls 当前目录为index....","link":"","photos":[],"count_time":{"symbolsCount":496,"symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"关于她","uid":"2659211fc1b4543131f8cda1813d3bae","slug":"关于她","date":"2022-04-24T03:40:04.000Z","updated":"2022-04-24T04:36:53.587Z","comments":true,"path":"api/articles/关于她.json","keywords":null,"cover":null,"text":"写一篇关于她时隔久远没更博了，种种原因实在没时间。 ​ 想写一篇关于她，之前就想写了，一直不知道该怎么写，直到今天，我昨晚又梦到她了。虽然经常会梦到她，但这次也许感情更加浓烈。关于她，也就随便聊聊，自己想把自己心里压了很久的话写在这里。关于她，我只想用一句网络流行语来形容：我喜欢...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"她","slug":"她","count":1,"path":"api/categories/她.json"}],"tags":[{"name":"她","slug":"她","count":1,"path":"api/tags/她.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件操作-文件下载及读取","uid":"6e204dcc81a1dda57afcdf13b8c27892","slug":"文件操作-文件下载及读取","date":"2022-03-20T12:38:50.000Z","updated":"2022-03-20T14:13:54.806Z","comments":true,"path":"api/articles/文件操作-文件下载及读取.json","keywords":null,"cover":[],"text":"前言脑图： 漏洞原理文件下载（一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。） 任意文件下载漏洞，正常的利用手段是下载服务器文件，如脚本代码，服务器配置或者是系统配置...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"任意文件下载","slug":"任意文件下载","count":1,"path":"api/categories/任意文件下载.json"}],"tags":[{"name":"任意文件下载","slug":"任意文件下载","count":1,"path":"api/tags/任意文件下载.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件操作-文件包含漏洞","uid":"7b77b3ea2f4278aa34c51c9c5ad0efd9","slug":"文件操作-文件包含漏洞","date":"2022-03-20T09:52:07.000Z","updated":"2022-03-20T12:32:34.780Z","comments":true,"path":"api/articles/文件操作-文件包含漏洞.json","keywords":null,"cover":[],"text":"前言脑图： 文件包含服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，这会为开发者节省大量的时间。这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页面需要更新时，只更新一个包含文件就可以了，或者向网站添加一张新页面时，仅仅需要修改...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"文件包含","slug":"文件包含","count":1,"path":"api/categories/文件包含.json"}],"tags":[{"name":"文件包含","slug":"文件包含","count":2,"path":"api/tags/文件包含.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-Crypto-看我回旋踢","uid":"5e40bb5a83b8a3c2081bbb8071845ea4","slug":"BUU-Crypto-看我回旋踢","date":"2022-03-19T14:10:12.000Z","updated":"2022-03-20T11:48:42.767Z","comments":true,"path":"api/articles/BUU-Crypto-看我回旋踢.json","keywords":null,"cover":[],"text":"前言记一次BUU密码学的CTF题目：看我回旋踢。不是很擅长密码学这一个方向，简单记录一下，毕竟计算机最后都不分家嘛。 0x00 启动靶场启动靶场下载压缩包，解压得到一串字符串 0x01synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#...","link":"","photos":[],"count_time":{"symbolsCount":603,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"Crypto","slug":"Crypto","count":1,"path":"api/tags/Crypto.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-UPLOAD联合RCE","uid":"c1f68926e47c7ff28424379bdd26999e","slug":"BUU-UPLOAD联合RCE","date":"2022-03-18T09:32:48.000Z","updated":"2022-03-20T11:49:23.232Z","comments":true,"path":"api/articles/BUU-UPLOAD联合RCE.json","keywords":null,"cover":[],"text":"前言BUU一道文件上传联合RCE的一道题。 0x00 启动靶场启动靶场提示上传文件，随便上传一个1.php文件，写入一句话，发现并没有做限制，可以任意文件上传，但上传之后会将文件名和后缀名修改为xxx.jpg的格式。 看到回显的路径。 试着访问，是空白页面，不知道是否能被执行。 ...","link":"","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"},{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-BURP-X-Real-IP","uid":"eefdee94a2ec4b5d372ab4adce8d3bac","slug":"BUU-BURP-X-Real-IP","date":"2022-03-18T08:10:44.000Z","updated":"2022-03-20T11:48:28.751Z","comments":true,"path":"api/articles/BUU-BURP-X-Real-IP.json","keywords":null,"cover":[],"text":"前言BUU一道BURP的题目，并记录一下X-Forwarded-For和X-Real-IP的区别。 0x00 启动靶场看到只能本地访问，一般看到这句话的时候肯定首先想到的是X-Forwarded-For，但是数据包中加了X-Forwarded-For也没什么作用，翻了几篇帖子看到...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"BUU-SQL注入-寻找注入点","uid":"61025c4bc325a8f722ff6e7c3ae2291b","slug":"BUU-SQL注入-寻找注入点","date":"2022-03-18T02:49:56.000Z","updated":"2022-03-20T11:49:02.076Z","comments":true,"path":"api/articles/BUU-SQL注入-寻找注入点.json","keywords":null,"cover":[],"text":"前言记录一下BUU的一道SQL注入，这道题难点主要在于寻找注入点。 0x00 启动靶场启动靶场后发现只有两个页面，一个是热点页面，一个是登录页面，开始以为登录页面存在注入，测试了很多，万能密码，甚至抓包修改Referer值探测注入点也都没有结果。 0x01 信息搜集登录页面无果后...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"东塔靶场-CTF-命令执行_2","uid":"8ced8e9ea7483c651973016447b0e3bf","slug":"东塔靶场-CTF-命令执行-2","date":"2022-03-16T00:50:33.000Z","updated":"2022-03-16T02:07:48.444Z","comments":true,"path":"api/articles/东塔靶场-CTF-命令执行-2.json","keywords":null,"cover":[],"text":"前言东塔靶场一道关于MD5强类型的题目，感觉有点有趣，记录一下。 0x00打开靶场，提示有趣的md5，并且地址栏中像是被base64加密过 查看源码，最可疑的是这张图片的地址，base64加密 先解码，得到是dota.png这张图片 0x01先将url解码试试 解码前：TmpRM...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"攻防世界-web-backup","uid":"34ee629d2bfd49882af5b4a30f7de5be","slug":"攻防世界-web-backup","date":"2022-03-15T09:19:29.000Z","updated":"2022-03-15T09:27:07.975Z","comments":true,"path":"api/articles/攻防世界-web-backup.json","keywords":null,"cover":[],"text":"前言记录一下攻防世界新手区，web-backup这道题。关于index.php的备份文件。 0x00启动靶场，看到：你知道index.php的备份文件名吗？ 0x01使用搜索引擎 0x02在地址栏输入：index.php.bak，可以看到备份文件下载完成 0x03打开备份文件，拿...","link":"","photos":[],"count_time":{"symbolsCount":193,"symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"php弱类型","uid":"475a4194f2b842990d8398d70f0c7aaf","slug":"php弱类型","date":"2022-03-15T08:32:55.000Z","updated":"2022-07-23T15:40:46.387Z","comments":true,"path":"api/articles/php弱类型.json","keywords":null,"cover":null,"text":"前言在CTF平台做题时，遇到很多php弱类型的题目，也看了很多php弱类型的文章，在这里总结一下。 0x00php中有两种比较的符号 == 与 === 1 &lt;?php 2 $a = $b ; 3 $a===$b ; 4 ?> === 在进行比较的时候，会先判断两种字符串的类...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"墨者学院-命令执行","uid":"63b4d5992a8dc61b2cccec272a36e569","slug":"墨者学院-命令执行","date":"2022-03-13T01:39:21.000Z","updated":"2022-03-20T11:50:42.422Z","comments":true,"path":"api/articles/墨者学院-命令执行.json","keywords":null,"cover":[],"text":"#命令执行注入 0x00启动靶场环境 0x01提示输入ip地址 先测试一下 可以看到成功ping的返回信息。 0x02接下来尝试使用管道符执行ls命令查看目录 这里判断的时候出现弹窗提示ip格式不对，先看下源码是不是前端验证 果然，那这里的话就需要绕过前端验证。 0x03抓包进行...","link":"","photos":[],"count_time":{"symbolsCount":529,"symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RCE代码及命令执行漏洞","uid":"99ef65eed770437be60664bb9539a369","slug":"RCE代码及命令执行漏洞","date":"2022-03-12T07:42:14.000Z","updated":"2022-03-12T08:38:19.341Z","comments":true,"path":"api/articles/RCE代码及命令执行漏洞.json","keywords":null,"cover":[],"text":"前言在 Web 应用中有时候程序员为了考虑灵活性、简洁性，会在代码调用代码或命令执行函数去处理。比如当应用在调用一些能将字符串转化成代码的函数时，没有考虑用户是否能控制这个字符串，将造成代码执行漏洞。同样调用系统命令处理，将造成命令执行漏洞。 脑图： RCE漏洞原理RCE(rem...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSRF靶场","uid":"929e59ca2c7119d6b3905dcf4adc61b6","slug":"CSRF靶场","date":"2022-03-08T03:07:17.000Z","updated":"2022-03-09T03:25:19.499Z","comments":true,"path":"api/articles/CSRF靶场.json","keywords":null,"cover":[],"text":"环境准备1、靶场环境：Pikachu-CSRF 2、攻击机：Win10 CSRF（get）0x00首先进行登录： 0x01抓包构造伪链接： 0x02构造url伪链接，将地址修改为china： pikachu-master&#x2F;vul&#x2F;csrf&#x2F;csrfg...","link":"","photos":[],"count_time":{"symbolsCount":839,"symbolsTime":"1 mins."},"categories":[{"name":"CSRF","slug":"CSRF","count":2,"path":"api/categories/CSRF.json"}],"tags":[{"name":"CSRF","slug":"CSRF","count":2,"path":"api/tags/CSRF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SSRF基础","uid":"019bd9770b9072b146cab74b0206ca70","slug":"SSRF基础","date":"2022-02-28T11:46:22.000Z","updated":"2022-03-01T14:28:56.953Z","comments":true,"path":"api/articles/SSRF基础.json","keywords":null,"cover":[],"text":"SSRF漏洞概述SSRF，全称Server-Side Request Forgery，服务端请求伪造，是一种由攻击者构造形成由服务器发起请求的一个安全漏洞，SSRF的主要攻击目标为外网无法访问的内部系统。 以下为SSRF脑图： SSRF漏洞原理SSRF形成的原因是服务端提供了从其...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"SSRF","slug":"SSRF","count":2,"path":"api/categories/SSRF.json"}],"tags":[{"name":"SSRF","slug":"SSRF","count":2,"path":"api/tags/SSRF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CSRF基础","uid":"62ffee5f16300f5ee280e534fb47e7f9","slug":"CSRF基础","date":"2022-02-27T13:48:11.000Z","updated":"2022-02-27T15:41:09.282Z","comments":true,"path":"api/articles/CSRF基础.json","keywords":null,"cover":[],"text":"前言在跨站的世界中，CSRF同样扮演者及其重要的角色。CSRF全称为Cross Site Request Forgery，即跨站请求伪造。CSRF很容易与XSS混淆，所以，这里需要注意两个关键点：跨站点的请求与请求是伪造的。 跨站点的请求：跨站点的请求是其他站点或者恶意请求可能来...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"CSRF","slug":"CSRF","count":2,"path":"api/categories/CSRF.json"}],"tags":[{"name":"CSRF","slug":"CSRF","count":2,"path":"api/tags/CSRF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CTF文件包含","uid":"eac6c9303fed0a97a442c644f7607a6d","slug":"CTF文件包含","date":"2022-02-24T10:45:14.000Z","updated":"2022-07-23T15:42:12.756Z","comments":true,"path":"api/articles/CTF文件包含.json","keywords":null,"cover":[],"text":"前言在CTF在线平台解题时遇到CTF形式的文件包含漏洞，记录一下解题思路。 CTF文件包含以BUUCTF一道题为例：[ACTF2020 新生赛]Include 1 ###0x00 打开靶机环境提示： ###0x01 点击tips： 0x02可以看到有 ?file&#x3D;fla...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"xss跨站-WAF绕过及安全修复","uid":"41cf39073a339a1c767bb13d5641e6de","slug":"xss跨站-WAF绕过及安全修复","date":"2022-02-24T07:30:44.000Z","updated":"2022-05-30T14:41:43.830Z","comments":true,"path":"api/articles/xss跨站-WAF绕过及安全修复.json","keywords":null,"cover":null,"text":"前言xss跨站之WAF绕过及安全修复的介绍 常规WAF绕过思路标签语法替换：&lt;a&gt;的href，&lt;img&gt;的src等 特殊符号干扰：~@#￥%……&amp;*等 提交方式更改： post，get方式 垃圾数据溢出：添加大量垃圾数据进行干扰 加密解密算法：un...","link":"","photos":[],"count_time":{"symbolsCount":426,"symbolsTime":"1 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"},{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"人生","uid":"44cb2462aeef047cd96dfb6cf67ce343","slug":"人生","date":"2022-02-24T04:28:11.000Z","updated":"2022-02-24T09:19:04.778Z","comments":true,"path":"api/articles/人生.json","keywords":null,"cover":null,"text":"随便说说吧有时候发现很多事情，很多东西其实并不是你想的那样，或许这个世界也不是我们想的那样，有人会把世界想的很好，有人会把世界想的很坏，可偏偏世界不好也不坏。曾经老是听别人说什么命运有一部分是掌握在自己手里的，这句话我不否认，也不肯定。这里不得不说命运中含有运气的成分，假如所有人...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"人生感悟","slug":"人生感悟","count":1,"path":"api/categories/人生感悟.json"}],"tags":[{"name":"人生感悟","slug":"人生感悟","count":1,"path":"api/tags/人生感悟.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"xss过滤的那些事","uid":"42f7b323120f691383c67796cc3bfd08","slug":"xss过滤的那些事","date":"2022-02-22T09:20:10.000Z","updated":"2022-05-30T14:42:00.129Z","comments":true,"path":"api/articles/xss过滤的那些事.json","keywords":null,"cover":null,"text":"前言由于实战当中避免不了拦截xss跨站攻击，由此需要了解过滤xss的方式有哪些，以及去如何绕过。 Http OnlyHttpOnly是包含在http返回头Set-Cookie里面的一个附加的flag，所以它是后端服务器对cookie设置的一个附加的属性，在生成cookie时使用H...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"xss跨站-xss-labs","uid":"b564e09de39e303e8a190e6bd2a14088","slug":"xss跨站-xss-labs","date":"2022-02-21T14:58:27.000Z","updated":"2022-05-30T14:43:32.587Z","comments":true,"path":"api/articles/xss跨站-xss-labs.json","keywords":null,"cover":[],"text":"[TOC] 前言记录一下xss靶场，xss-labs通关过程。 ##Level-1（无过滤） ###0x00 可以看到给的提示是payload长度为4，地址栏中get方式的name&#x3D;test与欢迎用户test相对应，试着改一下name的参数值。 0x01修改为test&...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"},{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"XSS基础","uid":"2ae9b590ca3c1c2667fd185e3a54758c","slug":"XSS基础","date":"2022-02-20T13:42:18.000Z","updated":"2022-05-30T14:42:10.426Z","comments":true,"path":"api/articles/XSS基础.json","keywords":null,"cover":[],"text":"前言XSS跨站脚本攻击： XSS原理恶意攻击者在web页面中会插入一些恶意的script代码。当用户浏览该页面的时候，那么嵌入到web页面中script代码会执行，因此会达到恶意攻击用户的目的。属于前端漏洞。 （若有与对方交互的地方，就可能会有攻击点） XSS分类1、反射型（非持...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-WAF绕过","uid":"07ba4ec78c8c1a3bf9ee409d03b686e2","slug":"文件上传-WAF绕过","date":"2022-02-18T07:45:11.000Z","updated":"2022-02-18T12:25:50.391Z","comments":true,"path":"api/articles/文件上传-WAF绕过.json","keywords":null,"cover":null,"text":"前言由于在真实环境当中，网站会有相应的软件防护，通常发现文件上传漏洞后还要进行WAF绕过，而类似的防护软件有safedog，BT等，所以需要了解防护的规则并且绕过防护。 当然，这里的WAF绕过是广义上的，不单单是指防护软件，类似前后端源码的防护规则也需要进行WAF绕过。 上传参数...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-解析漏洞","uid":"8822ebc3b04f9f9d5f4a65e981067804","slug":"文件上传-解析漏洞","date":"2022-02-17T13:22:37.000Z","updated":"2022-02-17T17:21:38.295Z","comments":true,"path":"api/articles/文件上传-解析漏洞.json","keywords":null,"cover":[],"text":"前言由于中间件会出现解析漏洞，若配合文件上传会出现很大的安全危害。这里以Vulhub靶场进行漏洞复现，在这之前要了解一下中间件，服务器和Web服务器的区别。 中间件，服务器和Web服务器的区别一、服务器的定义： 服务器指的是一个管理资源并为用户提供服务的计算机软件，通常分为文件服...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-upload-labs","uid":"839a0bf2eef6223788002c9f68db568c","slug":"文件上传-upload-labs","date":"2022-02-14T06:12:41.000Z","updated":"2023-01-31T13:41:40.159Z","comments":true,"path":"api/articles/文件上传-upload-labs.json","keywords":null,"cover":[],"text":"Pass-01（前端JS绕过）0x00首先分析一下源码： $_FILES：PHP中的$_FILES 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $_FILES 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。 m...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-Webshell介绍","uid":"ac44a9ac4337ea71f1fa38abe9d1c638","slug":"文件上传-Webshell介绍","date":"2022-02-13T12:48:38.000Z","updated":"2022-02-13T14:55:04.207Z","comments":true,"path":"api/articles/文件上传-Webshell介绍.json","keywords":null,"cover":null,"text":"[TOC] Webshell​ webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。使用方法简单，只需上传一个代码文件，通过网址访问，便可进行很多日常操作，极大地方便了使用者对网站和服务器的管理...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传基础","uid":"d7d77bc82bafbf7e1e25394ce17aed92","slug":"文件上传基础","date":"2022-02-12T15:02:42.000Z","updated":"2022-02-13T16:20:08.511Z","comments":true,"path":"api/articles/文件上传基础.json","keywords":null,"cover":[],"text":"[TOC] 前言相比于SQL注入等其他漏洞，文件上传漏洞风险更大，最直接的情况则是上传一个webshell拿权限。 文件上传分类： 了解到是文件上传漏洞时，要清楚是什么类型的文件上传漏洞，之后进行下一步操作。 ##文件上传漏洞原理： 网站Web应用都有一些文件上传功能，比如文档、...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-绕过WAF","uid":"e80d729249f46c80b287eec83a7a4367","slug":"SQL注入-绕过WAF","date":"2022-02-11T15:37:25.000Z","updated":"2022-02-13T15:45:57.047Z","comments":true,"path":"api/articles/SQL注入-绕过WAF.json","keywords":null,"cover":[],"text":"[TOC] 前言由于网站会部署WAF，例如安全狗，宝塔等，各自有各自的WAF策略规则，因此，绕过的方法也不同。了解其最基本的WAF规则便可进行对其绕过。 WAF绕过姿势1、大小写&#x2F;关键字的替换： id=1 UnIoN/**/SeLeCT 1,user() Hex() b...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-堆叠注入","uid":"a92a2310a2f65e102da5b7c1e7626f1d","slug":"SQL注入-堆叠注入","date":"2022-02-10T09:06:24.000Z","updated":"2022-02-13T15:45:30.445Z","comments":true,"path":"api/articles/SQL注入-堆叠注入.json","keywords":null,"cover":[],"text":"[TOC] 堆叠注入原理在 SQL 中，分号（;）是用来表示一条 sql 语句的结束。试想一下我们在 ; 结束一个 sql 语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而 union injection（联合注入）也是将两条语句合并在一起，两者之间有...","link":"","photos":[],"count_time":{"symbolsCount":287,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-宽字节注入","uid":"b7b3116373fd14d65fd221fa9b494766","slug":"SQL注入-宽字节注入","date":"2022-02-10T07:14:55.000Z","updated":"2022-02-13T15:34:05.258Z","comments":true,"path":"api/articles/SQL注入-宽字节注入.json","keywords":null,"cover":[],"text":"[TOC] 宽字节注入原理原理：mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 注入思路思路一：由于单引...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-HPP","uid":"ed28de52de42846cd0569a9a357ddaf1","slug":"SQL注入-HPP","date":"2022-02-10T05:11:20.000Z","updated":"2022-02-15T12:14:34.027Z","comments":true,"path":"api/articles/SQL注入-HPP.json","keywords":null,"cover":[],"text":"[TOC] ##服务器两层架构 服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入-二次注入","uid":"47679b9d369f170d867be494752fa62e","slug":"POST注入-二次注入","date":"2022-02-09T03:31:17.000Z","updated":"2022-02-13T15:33:50.663Z","comments":true,"path":"api/articles/POST注入-二次注入.json","keywords":null,"cover":[],"text":"[TOC] ##二次注入原理 二次注入，主要分为两步； 第一步：插入恶意数据 ​ 第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数...","link":"","photos":[],"count_time":{"symbolsCount":687,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-关键字过滤的注入","uid":"91c80453ca147ce2ce8eeaf9436ba64b","slug":"SQL注入-关键字过滤的注入","date":"2022-02-08T15:40:16.000Z","updated":"2022-02-13T15:39:14.145Z","comments":true,"path":"api/articles/SQL注入-关键字过滤的注入.json","keywords":null,"cover":[],"text":"[TOC] 关键字过滤的注入Less-23—Less-28a（Less-24除外）都是基于关键字过滤的注入，源码当中将--，#，or，and等关键字都过滤掉了，在这样的基础上进行 SQL注入。 Less-23由源码可以看到，接收到的id值将被函数preg_replace()进行过...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-Oracle等注入","uid":"11c6b3c7b164ff24fb9d530dce97a986","slug":"SQL注入-Oracle等注入","date":"2022-02-07T10:57:10.000Z","updated":"2022-02-13T15:39:28.635Z","comments":true,"path":"api/articles/SQL注入-Oracle等注入.json","keywords":null,"cover":[],"text":"[TOC] ##数据库注入 除Access数据库之外，其他类型数据库注入流程： 什么决定网站注入点的用户权限？ SQL的配置文件用户名 Access注入（特殊）####Access数据结构 ​ 表名 ​ 列名 ​ 数据 注意：1、Access数据库只有一个数据库； ​ 2、 Ac...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入-HTTP头注入","uid":"8d3782033a7b54632cfb455b67ca9836","slug":"POST注入-HTTP头注入","date":"2022-02-05T13:27:35.000Z","updated":"2022-02-13T15:31:36.278Z","comments":true,"path":"api/articles/POST注入-HTTP头注入.json","keywords":null,"cover":[],"text":"[TOC] 0x00原理：HTTP头中的参数带入到数据库被执行，造成了HTTP头注入。 $_SERVER详解$_SERVER['SCRIPT_NAME'] //当前脚本的路径 dirname($_SERVER['SCRIPT_NAME'] //dirname() 返回路径中的目录...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入--基于Password的注入","uid":"9ed0d530657a494b586000f6c049b35e","slug":"POST注入-基于Password的注入","date":"2022-02-05T05:45:34.000Z","updated":"2022-02-13T15:41:34.276Z","comments":true,"path":"api/articles/POST注入-基于Password的注入.json","keywords":null,"cover":[],"text":"[TOC] Less-17说实话，看到的时候挺吃惊的，没见过，试了很多payload，都注不进去，它还嘲讽我： 0x01查了一下资料，又看了一下源码发现username已经不能被注入了，原因是源码将uname字段进行了检查，导致uname不能够构造payload进行注入。 （ch...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-POST注入","uid":"32164fb6c436bfef89c97f001eea26bc","slug":"SQL注入-POST注入","date":"2022-02-05T01:25:13.000Z","updated":"2022-02-13T15:45:17.712Z","comments":true,"path":"api/articles/SQL注入-POST注入.json","keywords":null,"cover":[],"text":"[TOC] 0x00POST注入，就是数据从客户端提交 到服务器端，例如我们在登录过程中，输入用户名和密码，用户名 和密码以表单的形式提交， 提交到服务器后服务器再进行验证。这就是一次 post的过程。 Less-11当在输入框输入正确的用户名和密码后，显示登录成功 0x01接下...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-Less8-Less10","uid":"7e9ef5437654636a3aa94a45e71b7622","slug":"SQL注入-Less8-Less10","date":"2022-02-03T16:35:17.000Z","updated":"2022-02-13T15:42:39.833Z","comments":true,"path":"api/articles/SQL注入-Less8-Less10.json","keywords":null,"cover":[],"text":"[TOC] 0x00记录一下Less-8—Less10盲注遇到的一些问题 0x01首先8-10关最大特点就是没有报错回显，导致开始注入的时候都是利用报错注入，结果统统失败，后来查看源码发现，报错回显被注释掉了，那这几关报错盲注就不能用了，只能用布尔盲注和时间盲注。 0x02其次就...","link":"","photos":[],"count_time":{"symbolsCount":746,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"盲注-SQL靶场","uid":"b9f032fc8c8fc6510bd3ac95f6665bcd","slug":"盲注-SQL靶场","date":"2022-02-02T12:12:53.000Z","updated":"2022-02-13T15:30:25.012Z","comments":true,"path":"api/articles/盲注-SQL靶场.json","keywords":null,"cover":[],"text":"[TOC] 0x00Less-5和Less-6关看了很多文章，总的下来就是布尔盲注，报错注入和时间盲注，通过各种函数进行注入，在这里记录以下。 0x01（floor()报错）首先，开始注入的时候先是按照1-4关的注入方式探测了以下注入点，又看了一下源码，发现源码当中只能输出You...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-盲注","uid":"db9d897023f4869df00e643d24440891","slug":"SQL注入-盲注","date":"2022-02-02T07:08:10.000Z","updated":"2022-02-11T13:18:49.307Z","comments":true,"path":"api/articles/SQL注入-盲注.json","keywords":null,"cover":[],"text":"SQL盲注概述盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。 1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的 盲注来获取信息。2.盲注是不能通过直接显示的途径来获取数据库数据的方法。 盲注的分类1、布尔盲注 2、...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-文件读写操作","uid":"9eb50f7de58edddafde74a5aa271206c","slug":"SQL注入-文件读写操作","date":"2022-02-01T04:55:10.000Z","updated":"2022-02-13T15:45:43.308Z","comments":true,"path":"api/articles/SQL注入-文件读写操作.json","keywords":null,"cover":[],"text":"[TOC] SQL注入文件读写及导出这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。 1、load_file():读取函数： 以下代码实在数据库执行的源码进行文件读取： select load_file(&#3...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入字符型和数字型判断","uid":"13edec6f4d479c2c3e54757e7424c180","slug":"SQL注入字符型和数字型判断","date":"2022-01-31T15:43:00.000Z","updated":"2022-02-13T15:47:04.073Z","comments":true,"path":"api/articles/SQL注入字符型和数字型判断.json","keywords":null,"cover":[],"text":"[TOC] 说明在SQL注入中如何判断字符型注入还是数字型注入很重要，这里自己记录一下。 数字型判定1、and或者or 假设数据库的执行语句是：select * from table where id&#x3D;$id 这里我以自己本地的sql靶场为例。 此时执行语句为： htt...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-字符&数字型","uid":"35084a956f4a822fbd12f304f8c336a2","slug":"Less1-Less4","date":"2022-01-30T15:59:34.000Z","updated":"2022-12-24T04:22:16.654Z","comments":true,"path":"api/articles/Less1-Less4.json","keywords":null,"cover":[],"text":"[TOC] ###Less-1（字符型注入） 0x00首先注入： ?id&#x3D;1 正常返回结果 由于要判断注入点，如图： 添加 ‘ 报错，证明有注入点，字符型，id&#x3D;1’报错是由于源码当中接收值的时候本身自己就是id&#x3D;’’的闭合形式，但由于我们自己强行在...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"简要SQL注入","uid":"7636cfd8370edb30f65feb72ed748040","slug":"简要SQL注入","date":"2022-01-30T13:05:54.000Z","updated":"2022-02-13T15:48:59.624Z","comments":true,"path":"api/articles/简要SQL注入.json","keywords":null,"cover":[],"text":"[TOC] 前言SQL 注入漏洞是重点部分，其中 SQL 注入 又非常复杂，区分各种数据库类型，提交方法，数据类型等注入等，此类漏洞是 WEB 安全中严重的安全漏洞，学习如何利用，挖掘，修复。 SQL注入图解 手工注入原理手工注入：构造不同的sql语句，用户输入的数据拼接到原本的...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WEB漏洞知识点","uid":"cadd35667758fe128c74aec131ce6e19","slug":"WEB漏洞知识点","date":"2022-01-30T07:21:56.000Z","updated":"2022-02-13T15:47:15.060Z","comments":true,"path":"api/articles/WEB漏洞知识点.json","keywords":null,"cover":[],"text":"[TOC] ##前言 WEB层面涉及的漏洞关系到渗透过程中的方方面面，漏洞的危害等级以及影响的范围等，要明白各个漏洞的形成原理，并且要明白如何去发现，如何去利用。 常见漏洞原理 SQL注入：简称注入攻击、SQL注入，被广泛用于非法获取网站控制权，是发生在应用程序的数据库层上的安全...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"架构，搭建，WAF等","uid":"e1bdafc064990b71004087aa4da077ab","slug":"架构，搭建，WAF等","date":"2022-01-28T11:21:46.000Z","updated":"2022-02-13T15:48:41.525Z","comments":true,"path":"api/articles/架构，搭建，WAF等.json","keywords":null,"cover":[],"text":"[TOC] 前言在安全测试中，信息收集是非常重要的一个环节，此环节的信息将影响 到后续的成功几率，掌握信息的多少将决定发现漏洞机会大小，换言之决定着是否能完成目标的测试任务。渗透测试的思路 就是从信息收集这里开始。 所谓信息搜集，其实就是为了扩大攻击面，信息搜集的越多，攻击的范围...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CDN绕过技术","uid":"83206ee7fe571f3999f994cc9873ecbb","slug":"CDN绕过技术","date":"2022-01-28T02:50:43.000Z","updated":"2022-02-15T12:16:41.739Z","comments":true,"path":"api/articles/CDN绕过技术.json","keywords":null,"cover":[],"text":"[TOC] CDN绕过CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"加密编码算法","uid":"522a77ecd65e851625388b054b8fcee7","slug":"加密编码算法","date":"2022-01-27T13:21:21.000Z","updated":"2022-02-13T15:48:25.740Z","comments":true,"path":"api/articles/加密编码算法.json","keywords":null,"cover":[],"text":"[TOC] 前言在渗透测试中，常见的密码等敏感信息会采用加密处理，其中作为安全测试人员必须要了解常见的加密方式，才能为后续的安全测试做好准备。 ###常见加密编码等算法 MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES 等 MD5解密不...","link":"","photos":[],"count_time":{"symbolsCount":855,"symbolsTime":"1 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"系统及数据库","uid":"20534c188994e1c78d0460ada7283d87","slug":"系统及数据库","date":"2022-01-26T11:09:57.000Z","updated":"2022-02-13T14:54:33.363Z","comments":true,"path":"api/articles/系统及数据库.json","keywords":null,"cover":[],"text":"[TOC] 前言除去搭建平台中间件，网站源码外，容易受到攻击的还有操作系统，数据库等，第三方软件平台等，其中此类攻击也能直接影响到WEB或 服务器的安全，导致网站或服务器权限的获取。 操作系统层面识别操作系统常见方法： 如过对方有网站，可以通过网站识别；如果没网站，就通过一些工具...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WEB源码拓展","uid":"d5313f2d727d7eb1e40fe747a518af13","slug":"WEB源码拓展","date":"2022-01-25T14:01:45.000Z","updated":"2022-02-13T15:47:31.225Z","comments":true,"path":"api/articles/WEB源码拓展.json","keywords":null,"cover":[],"text":"[TOC] ##前言 ​ WEB 源码在安全测试中是非常重要的信息来源，可以用来代码审 计漏洞也可以用来做信息突破口，其中 WEB 源码有很多技术需要简明分析。 比如：获取某 ASP 源码后可以采用默认数据库下载为突破，获取某其他脚本 源码漏洞可以进行代码审计挖掘或分析其业务逻辑...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"搭建安全拓展","uid":"4a072225e90c93d078c9522dadc7362a","slug":"搭建安全拓展","date":"2022-01-24T13:36:09.000Z","updated":"2022-02-13T15:47:55.861Z","comments":true,"path":"api/articles/搭建安全拓展.json","keywords":null,"cover":null,"text":"[TOC] 知识点常见搭建平台脚本启用 域名 IP 目录解析安全问题 常见文件后缀解析对应安全 常见安全测试中的安全防护 WEB 后门与用户及文件权限 1.ASP,PHP,ASPX,JSP,PY,JAVAWEB 等环境 2.WEB 源码中敏感文件 后台路径，数据库配置文件，备份文...","link":"","photos":[],"count_time":{"symbolsCount":378,"symbolsTime":"1 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"墨者学院-投票系统程序设计缺陷分析","uid":"383f41268e6540fac61ee779bce8168d","slug":"墨者学院-投票系统程序设计缺陷分析","date":"2022-01-24T05:39:13.000Z","updated":"2022-03-20T11:50:56.550Z","comments":true,"path":"api/articles/墨者学院-投票系统程序设计缺陷分析.json","keywords":null,"cover":[],"text":"[TOC] 0x00启动靶场进入靶场的投票页面： 页面提示每个IP每天只限投一次票 0x01先抓个包看看： 为ggg投完票后显示id&#x3D;7，且返回结果0； 再给ggg投票抓包看结果： 结果返回-1，并提示投票机会用完 0x02根据提示信息： 应该是利用X-Forwarde...","link":"","photos":[],"count_time":{"symbolsCount":765,"symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"墨者学院-HTTP动作练习","uid":"abc9d3adbc1e88211294230cb4be2455","slug":"墨者学院-HTTP动作练习","date":"2022-01-24T04:51:02.000Z","updated":"2022-03-20T11:49:55.458Z","comments":true,"path":"api/articles/墨者学院-HTTP动作练习.json","keywords":null,"cover":[],"text":"[TOC] 0x00首先启动靶场 返回结果是由于请求的URL太长，给的提示也是url这么长，GET合适么？说明请求的方式是GET 0x01先抓个包验证一下是不是GET方式 由包来看确实是GET方式，并且内容很多 0x02由于HTTP中GET请求方式和POST请求方式两者有区别，并...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"墨者学院-浏览器信息伪造","uid":"39baee024bf244e39dfc48c40929c4eb","slug":"墨者学院-浏览器信息伪造","date":"2022-01-24T03:16:41.000Z","updated":"2022-03-20T11:50:32.136Z","comments":true,"path":"api/articles/墨者学院-浏览器信息伪造.json","keywords":null,"cover":[],"text":"[TOC] 0x00启动靶场后显示 0x01点击”这是微信最好的状态：……”后 提示使用苹果手机的2G网络进行访问 0x02不管什么东西，先抓个包看看 正是刚才提示的页面数据包 0x03由于提示使用苹果手机访问，先利用BurpSuit修改iPone访问的包，由于还得是2G网络， ...","link":"","photos":[],"count_time":{"symbolsCount":281,"symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"墨者学院-来源页伪造","uid":"495216adb2265f60982c64eb2dfe8dfd","slug":"墨者学院-来源页伪造","date":"2022-01-24T02:45:11.000Z","updated":"2022-03-20T11:50:18.249Z","comments":true,"path":"api/articles/墨者学院-来源页伪造.json","keywords":null,"cover":[],"text":"[TOC] 0x00首先启动靶场 0x01进入靶场后表示只能使用google浏览器访问 0x02首先想到不可能每次都使用Google访问，解题提示使用referer构造google访问的请求数据包 利用Burpsuite进项伪造 二话不说先抓个包 接下来伪造Google访问数据包...","link":"","photos":[],"count_time":{"symbolsCount":244,"symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"数据包拓展","uid":"2fe6b220dcca97cedb2f7f37b2f387f3","slug":"数据包拓展","date":"2022-01-23T10:36:42.000Z","updated":"2022-02-13T15:50:10.958Z","comments":true,"path":"api/articles/数据包拓展.json","keywords":null,"cover":null,"text":"[TOC] 代理当从浏览器访问时，使用代理(Proxy)可以抓取请求数据包(Request)进行分析，或者从Web Server返回数据包(Response)进行分析；BurpSuit其实就很典型，可以作为代理服务器，实现上述作用。 Http和Httpshttp包抓到后一般都是明...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"基础入门-概念名词","uid":"ab68de4c111fbe65e54d3c2aa4caf914","slug":"基础入门-概念名词","date":"2022-01-22T10:29:49.000Z","updated":"2022-02-13T15:48:13.151Z","comments":true,"path":"api/articles/基础入门-概念名词.json","keywords":null,"cover":[],"text":"[TOC] 域名一、域名定义：就好比个人的名字，网站基本都有域名，网站地址名称。通俗点其实就是URL。 百度官方解释： 域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":27,"tags":192,"word_count":"439k","post_count":133}