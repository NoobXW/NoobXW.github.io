{"title":"墨者学院-HTTP动作练习","uid":"abc9d3adbc1e88211294230cb4be2455","slug":"墨者学院-HTTP动作练习","date":"2022-01-24T04:51:02.000Z","updated":"2022-03-20T11:49:55.458Z","comments":true,"path":"api/articles/墨者学院-HTTP动作练习.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>首先启动靶场</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124125408694.png\" alt=\"image-20220124125408694\"></p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124125427719.png\" alt=\"image-20220124125427719\"></p>\n<p>返回结果是由于请求的URL太长，给的提示也是url这么长，GET合适么？说明请求的方式是GET</p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p>先抓个包验证一下是不是GET方式</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124125713127.png\" alt=\"image-20220124125713127\"></p>\n<p>由包来看确实是GET方式，并且内容很多</p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>由于HTTP中GET请求方式和POST请求方式两者有区别，并且提示使用POST方式提交</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124125917492.png\" alt=\"image-20220124125917492\"></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>那就改成POST请求方式提交内容，在BP里改成POST方式，如图：</p>\n<p>右键点击Change request method</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124130055977.png\" alt=\"image-20220124130055977\"></p>\n<p>改完之后的包：</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124130113880.png\" alt=\"image-20220124130113880\"></p>\n<p>这里最重要的就是GET请求有长度限制，而POST请求没有长度限制。</p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>提交之后得到KEY</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124130304850.png\" alt=\"image-20220124130304850\"></p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-HTTP%E5%8A%A8%E4%BD%9C%E7%BB%83%E4%B9%A0.htm/image-20220124130515150.png\" alt=\"image-20220124130515150\"></p>\n<p>完成靶场。</p>\n<p>##0x06</p>\n<p>GET和POST两种请求方式的区别：</p>\n<p><strong>GET：</strong></p>\n<p>使用 GET 方法时，查询字符串（名称或键值对）是在 GET 请求的 URL 中发送的：</p>\n<ul>\n<li>GET 请求可被缓存</li>\n<li>GET 请求保留在浏览器历史记录中</li>\n<li>GET 请求的URL可被收藏为书签</li>\n<li>GET 请求不应在处理敏感数据时使用</li>\n<li>GET 请求有长度限制</li>\n<li>GET 请求只应当用于获取数据</li>\n</ul>\n<p>GET 方法是默认的从浏览器向 Web 服务器传递信息的请求方法，它会产生一个很长的字符串，出现在浏览器的地址栏中。<strong>GET 方法有大小限制：请求字符串中最多只能有 1024 个字符</strong>。</p>\n<p><strong>POST：</strong></p>\n<p>使用POST方法时，查询字符串（名称或键值对）是在POST请求的HTTP消息主体重发送的：使用 doGet()方法处理这种类型的请求。</p>\n<ul>\n<li>POST 请求不会被缓存</li>\n<li>POST 请求不会保留在浏览器历史记录中</li>\n<li>POST请求的URL不能被收藏为书签</li>\n<li><strong>POST 请求没有长度要求</strong></li>\n</ul>\n<p>HTTP的方法中POST向后台传输数据比较可靠，POST 方法打包信息的方式与 GET 方法基本相同，但是 POST 方法不是把信息作为 URL 中 ?  字符后的文本字符串进行发送，而是把这些信息作为一个单独的消息进行发送。Servlet 使用 doPost() 方法处理这种类型的请求。</p>\n<ul>\n<li><p>在浏览器进行回退操作时，GET 请求是无害的，而 POST 请求则会重新请求一次</p>\n</li>\n<li><p>GET 请求参数是连接在 URL 后面的,而POST请求参数是存放在消息主体（Requestbody）内</p>\n</li>\n<li><p>GET 请求因为浏览器对 url 长度有限制（不同浏览器长度限制不一样）对传参数量有限制，而 post 请求因为参数存放 Requestbody 内所以参数数量没有限制 </p>\n</li>\n<li><p>因为 GET 请求参数暴露在URL上,所以安全方面 POST 比 GET 更加安全</p>\n</li>\n<li><p>GET 请求浏览器会主动缓存（Cache），POST 并不会，除非主动设置</p>\n</li>\n<li><p>GET 请求参数会保存在浏览器历史记录内，POST 请求并不会</p>\n</li>\n<li><p>GET 请求只能进行 URL 编码，而 POST 请求可以支持多种编码方式</p>\n</li>\n<li><p>GET 请求产生1个 Tcp 数据包，POST 请求产生2个 Tcp 数据包</p>\n</li>\n<li><p>浏览器在发送 GET 请求时会将请求头（Header）和数据（Data）一起发送给服务器，服务器返回200状态码，而在发送 POST 请求时，会先将 Header 发送给服务器，服务器返回100，之后再将 Data 发送给服务器，服务器返回200</p>\n<p>（文本来源于w3cschool）</p>\n</li>\n</ul>\n","text":"[TOC] 0x00首先启动靶场 返回结果是由于请求的URL太长，给的提示也是url这么长，GET合适么？说明请求的方式是GET 0x01先抓个包验证一下是不是GET方式 由包来看确实是GET方式，并且内容很多 0x02由于HTTP中GET请求方式和POST请求方式两者有区别，并...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"墨者学院-投票系统程序设计缺陷分析","uid":"383f41268e6540fac61ee779bce8168d","slug":"墨者学院-投票系统程序设计缺陷分析","date":"2022-01-24T05:39:13.000Z","updated":"2022-03-20T11:50:56.550Z","comments":true,"path":"api/articles/墨者学院-投票系统程序设计缺陷分析.json","keywords":null,"cover":[],"text":"[TOC] 0x00启动靶场进入靶场的投票页面： 页面提示每个IP每天只限投一次票 0x01先抓个包看看： 为ggg投完票后显示id&#x3D;7，且返回结果0； 再给ggg投票抓包看结果： 结果返回-1，并提示投票机会用完 0x02根据提示信息： 应该是利用X-Forwarde...","link":"","photos":[],"count_time":{"symbolsCount":765,"symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"墨者学院-浏览器信息伪造","uid":"39baee024bf244e39dfc48c40929c4eb","slug":"墨者学院-浏览器信息伪造","date":"2022-01-24T03:16:41.000Z","updated":"2022-03-20T11:50:32.136Z","comments":true,"path":"api/articles/墨者学院-浏览器信息伪造.json","keywords":null,"cover":[],"text":"[TOC] 0x00启动靶场后显示 0x01点击”这是微信最好的状态：……”后 提示使用苹果手机的2G网络进行访问 0x02不管什么东西，先抓个包看看 正是刚才提示的页面数据包 0x03由于提示使用苹果手机访问，先利用BurpSuit修改iPone访问的包，由于还得是2G网络， ...","link":"","photos":[],"count_time":{"symbolsCount":281,"symbolsTime":"1 mins."},"categories":[{"name":"靶场","slug":"靶场","count":4,"path":"api/categories/靶场.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}