{"title":"文件上传-WAF绕过","uid":"07ba4ec78c8c1a3bf9ee409d03b686e2","slug":"文件上传-WAF绕过","date":"2022-02-18T07:45:11.000Z","updated":"2022-02-18T12:25:50.391Z","comments":true,"path":"api/articles/文件上传-WAF绕过.json","keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>由于在真实环境当中，网站会有相应的软件防护，通常发现文件上传漏洞后还要进行WAF绕过，而类似的防护软件有safedog，BT等，所以需要了解防护的规则并且绕过防护。</p>\n<p>当然，这里的WAF绕过是广义上的，不单单是指防护软件，类似前后端源码的防护规则也需要进行WAF绕过。</p>\n<h2 id=\"上传参数名解析\"><a href=\"#上传参数名解析\" class=\"headerlink\" title=\"上传参数名解析\"></a>上传参数名解析</h2><p>Content-Disposition：一般可更改 </p>\n<p>name：表单参数值，不能更改（一般右键源码可以看到）</p>\n<p>filename：文件名，可以更改 </p>\n<p>Content-Type：文件 MIME，视情况更改</p>\n<h2 id=\"常见绕过方法\"><a href=\"#常见绕过方法\" class=\"headerlink\" title=\"常见绕过方法\"></a>常见绕过方法</h2><p>1、数据溢出-防匹配：</p>\n<p><strong>原理：</strong>有些主机WAF软件为了不影响web服务器的性能，会对校验的用户数据设置大小上限，比如1M。此种情况可以构造一个大文件，前面1M的内容为垃圾内容，后面才是真正的木马内容，便可以绕过WAF对文件内容的校验；</p>\n<p><strong>注：</strong>要在<code>form-data;</code>和<code>neme=&quot;upload_file&quot;</code>;字段中间添加大量垃圾数据，垃圾数据最后一定要添加<code>;</code>，为了让检测时候误认为是数据包的字段；或者添加在<code>name</code>和<code>filename</code>字段中间也可以。</p>\n<p>2、符号变异-防匹配（<code>&#39;</code> <code>&quot;</code> <code>;</code>）：</p>\n<p><strong>原理：</strong>安全狗只匹配<code>&#39;</code>，<code>&quot;</code>之间的内容，就是单写一个<code>&#39;</code>或<code>&quot;</code>会绕过安全狗的检测，取最后一个<code>&#39;</code>或<code>&quot;</code>之前的内容安全狗才提取。大多都是多多测试，然后过狗；而<code>;</code>在语言当中是语句的结束，所以也可以绕过。</p>\n<p>3、数据截断-防匹配(%00 ; 换行) ：</p>\n<p>（%00截断在安全狗4.0不能绕过，旧版可以）</p>\n<p>文件后缀回车绕过：若上传x.php文件，抓包进行后缀名会后，</p>\n<p>安全狗检测时的原型是：x.p\\nh\\np，则实现绕过。</p>\n<p>4、重复数据-防匹配(参数多次)：</p>\n<p>重复<code>filename=&quot;&quot;;</code>字段等。</p>\n<p>5、Fuzz大法</p>\n<p>参考文章：</p>\n<p><a href=\"http://www.cl4y.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0bypass%E5%AE%89%E5%85%A8%E7%8B%974-0/\">http://www.cl4y.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0bypass%E5%AE%89%E5%85%A8%E7%8B%974-0/</a></p>\n<p>Payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">filename&#x3D;&quot;Content-Type: image&#x2F;jpeg;x.php&quot;;\n\nfilename&#x3D;&quot;Content-Disposition: from-data; name&#x3D;&quot;upload_file&quot;x.php&quot;;\n\nfilename&#x3D;&quot;xxx&#x2F;x.jpg&quot;\n\nfilename&#x3D;\n&quot;\nx\n.\np\nh\np\n&quot;\n\n总之，各种绕过安全狗的姿势需要多尝试，由于安全狗版本问题，可能有些payload已经被拦截。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"前言由于在真实环境当中，网站会有相应的软件防护，通常发现文件上传漏洞后还要进行WAF绕过，而类似的防护软件有safedog，BT等，所以需要了解防护的规则并且绕过防护。 当然，这里的WAF绕过是广义上的，不单单是指防护软件，类似前后端源码的防护规则也需要进行WAF绕过。 上传参数...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%BC%A0%E5%8F%82%E6%95%B0%E5%90%8D%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">上传参数名解析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">常见绕过方法</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"XSS基础","uid":"2ae9b590ca3c1c2667fd185e3a54758c","slug":"XSS基础","date":"2022-02-20T13:42:18.000Z","updated":"2022-05-30T14:42:10.426Z","comments":true,"path":"api/articles/XSS基础.json","keywords":null,"cover":[],"text":"前言XSS跨站脚本攻击： XSS原理恶意攻击者在web页面中会插入一些恶意的script代码。当用户浏览该页面的时候，那么嵌入到web页面中script代码会执行，因此会达到恶意攻击用户的目的。属于前端漏洞。 （若有与对方交互的地方，就可能会有攻击点） XSS分类1、反射型（非持...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"文件上传-解析漏洞","uid":"8822ebc3b04f9f9d5f4a65e981067804","slug":"文件上传-解析漏洞","date":"2022-02-17T13:22:37.000Z","updated":"2022-02-17T17:21:38.295Z","comments":true,"path":"api/articles/文件上传-解析漏洞.json","keywords":null,"cover":[],"text":"前言由于中间件会出现解析漏洞，若配合文件上传会出现很大的安全危害。这里以Vulhub靶场进行漏洞复现，在这之前要了解一下中间件，服务器和Web服务器的区别。 中间件，服务器和Web服务器的区别一、服务器的定义： 服务器指的是一个管理资源并为用户提供服务的计算机软件，通常分为文件服...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}