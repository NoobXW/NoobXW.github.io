{"title":"文件上传基础","uid":"d7d77bc82bafbf7e1e25394ce17aed92","slug":"文件上传基础","date":"2022-02-12T15:02:42.000Z","updated":"2022-02-13T16:20:08.511Z","comments":true,"path":"api/articles/文件上传基础.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>相比于SQL注入等其他漏洞，文件上传漏洞风险更大，最直接的情况则是上传一个webshell拿权限。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80.htm/image-20220212230901606.png\" alt=\"image-20220212230901606\"></p>\n<p>文件上传分类：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%9F%BA%E7%A1%80.htm/image-20220212230917046.png\" alt=\"image-20220212230917046\"></p>\n<p>了解到是文件上传漏洞时，要清楚是什么类型的文件上传漏洞，之后进行下一步操作。</p>\n<p>##文件上传漏洞原理：</p>\n<p>网站Web应用都有一些文件上传功能，比如文档、图片、头像、视频上传，当上传功能的</p>\n<p>实现代码没有严格校验上传文件的后缀和文件类型，此时攻击者就可以上传一个webshell</p>\n<p>到一个Web可访问的目录上，并将恶意文件传递给如PHP解释器去执行，之后就可以在服</p>\n<p>务器上执行恶意代码，进行数据库执行、服务器文件管理，服务器命令执行等恶意操作。</p>\n<p>还有一部分是攻击者通过Web服务器的解析漏洞来突破Web应用程序的防护。</p>\n<h2 id=\"漏洞危害\"><a href=\"#漏洞危害\" class=\"headerlink\" title=\"漏洞危害\"></a>漏洞危害</h2><p>1、获取网站权限，控制网站</p>\n<p>2、获取后台账号密码</p>\n<p>3、服务器提权</p>\n<p>4、获取内网权限等</p>\n<h2 id=\"漏洞如何查找及\"><a href=\"#漏洞如何查找及\" class=\"headerlink\" title=\"漏洞如何查找及\"></a>漏洞如何查找及</h2><p>1、黑盒测试：未知网站源码，未知网站情况，扫描敏感文件测试文件上传漏洞</p>\n<p>2、白盒测试：分析源代码查找文件上传功能等</p>\n<p>3、网站中上传头像或者会员中心的上传功能可测试是否有文件上传漏洞</p>\n<p>##前端验证（原理）</p>\n<p>文件上传若是采用前端验证，通过修改前端代码（JS代码）<strong>注释掉或删除掉</strong>（推荐）验证部分可实现上传，或者在<strong>浏览器中禁用JS</strong>（不建议）进行绕过。</p>\n<p><strong>过程</strong>：</p>\n<p>1、将源代码复制到本地删除验证代码再上传</p>\n<p><strong>原理：</strong>由于前端验证就是在本地运行，<strong>但需要在源代码中添加指向上传的地址：<code>action</code>，表示提交给谁（在浏览器中查看原来的请求地址插入到复制的代码中）</strong>，这样就能是实现前端的绕过；</p>\n<p>2、浏览器禁用JS：可能会有其他JS代码控制上传功能，若是禁用JS可能会影响上传操作，因此不推荐使用。</p>\n<p>3、<strong>BP抓包（不怎么靠谱）</strong>：由于网页可能是由<code>JS+PHP</code>代码一起进行上传的功能，这种情况是可能会抓到包；但如果网页都是由<code>JS</code>代码实现提交功能则抓不到数据包，就上传不了服务器。<strong>因为BP是要上传到服务器使服务器进行解析文件，但是<code>JS/HTML</code>等的前端代码是在本地端运行的，根本抓不到数据包。</strong></p>\n<p><strong>（所谓前端验证就是本地验证）</strong></p>\n<p>##文件上传常见验证</p>\n<p> <strong>后缀名，类型，文件头等</strong> </p>\n<p>1、后缀名：</p>\n<p>（1）黑名单（不允许上传的格式后缀）：asp，php，jsp，aspx，war</p>\n<p>​          黑名单缺陷：若限制后缀名不全，可以使用其他后缀名进行绕过，例如：php5，Phtml等</p>\n<p>（2）白名单（可允许上传的格式后缀）：jpg，png，zip，rar，gif，…</p>\n<p>2、文件类型：MIME 信息，通过类型猜测后缀名，可通过BP抓包伪造</p>\n<p>3、文件头：内容头信息</p>\n<h2 id=\"文件上传漏洞绕过方法\"><a href=\"#文件上传漏洞绕过方法\" class=\"headerlink\" title=\"文件上传漏洞绕过方法\"></a>文件上传漏洞绕过方法</h2><p>利用burp抓包改后缀名进行绕过；</p>\n<p>利用00截断上传webshell；</p>\n<p>构造图片马绕过；</p>\n<p>绕过服务器扩展名检测上传；</p>\n<p>竞争条件上传绕过。</p>\n<p>##.htaccess文件上传漏洞原理</p>\n<p><strong>什么是.htaccess</strong>：</p>\n<p>.htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置，通过.htaccess文件可以实现网页301重定向、自定义404页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>\n<p><strong>需要的代码如下：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;FilesMatch &quot;cimer&quot;&gt;\nSethandler application&#x2F;x-httpd-php\n&lt;&#x2F;FilesMatch &gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>原理：</strong></p>\n<p>若当前目录存在<code>.htaccess</code>后缀名的文件，目录中存在<strong>文件名</strong>中含有<code>cimer</code>，就把<code>application/x-httpd-php</code>当成<code>MIME</code>去执行，此<code>MIME</code>为<code>php</code>格式，此时这个文件就会被当作php文件执行。这时可用菜刀或蚁剑进行连接。</p>\n<p><strong>实战意义：</strong></p>\n<p>1、如果存在可以上传 .htaccess 文件，就可以直接利用此规则解析；</p>\n<p>2、如果存在修改文件权限，就直接修改解析规则；</p>\n","text":"[TOC] 前言相比于SQL注入等其他漏洞，文件上传漏洞风险更大，最直接的情况则是上传一个webshell拿权限。 文件上传分类： 了解到是文件上传漏洞时，要清楚是什么类型的文件上传漏洞，之后进行下一步操作。 ##文件上传漏洞原理： 网站Web应用都有一些文件上传功能，比如文档、...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8D%B1%E5%AE%B3\"><span class=\"toc-text\">漏洞危害</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A6%82%E4%BD%95%E6%9F%A5%E6%89%BE%E5%8F%8A\"><span class=\"toc-text\">漏洞如何查找及</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">文件上传漏洞绕过方法</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"文件上传-Webshell介绍","uid":"ac44a9ac4337ea71f1fa38abe9d1c638","slug":"文件上传-Webshell介绍","date":"2022-02-13T12:48:38.000Z","updated":"2022-02-13T14:55:04.207Z","comments":true,"path":"api/articles/文件上传-Webshell介绍.json","keywords":null,"cover":null,"text":"[TOC] Webshell​ webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。使用方法简单，只需上传一个代码文件，通过网址访问，便可进行很多日常操作，极大地方便了使用者对网站和服务器的管理...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入-绕过WAF","uid":"e80d729249f46c80b287eec83a7a4367","slug":"SQL注入-绕过WAF","date":"2022-02-11T15:37:25.000Z","updated":"2022-02-13T15:45:57.047Z","comments":true,"path":"api/articles/SQL注入-绕过WAF.json","keywords":null,"cover":[],"text":"[TOC] 前言由于网站会部署WAF，例如安全狗，宝塔等，各自有各自的WAF策略规则，因此，绕过的方法也不同。了解其最基本的WAF规则便可进行对其绕过。 WAF绕过姿势1、大小写&#x2F;关键字的替换： id=1 UnIoN/**/SeLeCT 1,user() Hex() b...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}