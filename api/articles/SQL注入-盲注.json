{"title":"SQL注入-盲注","uid":"db9d897023f4869df00e643d24440891","slug":"SQL注入-盲注","date":"2022-02-02T07:08:10.000Z","updated":"2022-02-11T13:18:49.307Z","comments":true,"path":"api/articles/SQL注入-盲注.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"SQL盲注概述\"><a href=\"#SQL盲注概述\" class=\"headerlink\" title=\"SQL盲注概述\"></a>SQL盲注概述</h2><p><strong>盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。</strong></p>\n<p>1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的          盲注来获取信息。<br>2.盲注是不能通过直接显示的途径来获取数据库数据的方法。</p>\n<h2 id=\"盲注的分类\"><a href=\"#盲注的分类\" class=\"headerlink\" title=\"盲注的分类\"></a>盲注的分类</h2><p>1、布尔盲注</p>\n<p>2、时间盲注</p>\n<p>3、报错型盲注</p>\n<h2 id=\"SQL盲注常用的函数\"><a href=\"#SQL盲注常用的函数\" class=\"headerlink\" title=\"SQL盲注常用的函数\"></a>SQL盲注常用的函数</h2><p>1、length()：返回字符串的长度</p>\n<p>2、substr(string,start,length)：</p>\n<ul>\n<li>substr中的pos从1开始计数</li>\n<li>substr中的len把当前位置当作第一个</li>\n</ul>\n<p>（第一个参数string为要处理的字符串，start为开始位置，length为截取的长度）</p>\n<p>如图：截取字符串’abcde’，从第二个位置开始，截取长度为1的子串，为b。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202152925950.png\" alt=\"image-20220202152925950\"></p>\n<p><strong>举例：</strong></p>\n<p>(1) substr(DATABASE(),1,1)&gt;’a’,查看数据库名第一位，substr(DATABASE(),2,1)查看数据库名第二位，依次查看各位字符。</p>\n<p>(2) substr((SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE T table_schema&#x3D;0xxxxxxx LIMIT 0,1),1,1)&gt;’a’此处string参数可以为sql语句，可自行构造sql语句进行注入。</p>\n<p>3、mid():用法与substr()完全相同。</p>\n<p><strong>举例：</strong></p>\n<p>（1）MID(DATABASE(),1,1)&gt;’a’,查看数据库名第一位，MID(DATABASE(),2,1)查看数据库名第二位，依次查看各位字符。</p>\n<p>（2）MID((SELECT table_name FROM INFORMATION_SCHEMA.TABLES WHERE T table_schema&#x3D;0xxxxxxx LIMIT 0,1),1,1)&gt;’a’此处column_name参数可以为sql语句，可自行构造sql语句进行注入。</p>\n<p>4、ascii()：查询ascii码中对应的值：</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202153644458.png\" alt=\"image-20220202153644458\"></p>\n<p>5、count()：统计记录的数量：</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202154416535.png\" alt=\"image-20220202154416535\"></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202154614895.png\" alt=\"image-20220202154614895\"></p>\n<p>6、if(condition,a,b)：如果condition为true,返回a,否则返回b</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202154906058.png\" alt=\"image-20220202154906058\"></p>\n<p>7、sleep()：延迟几秒</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202155029469.png\" alt=\"image-20220202155029469\"></p>\n<p>8、left()：得到字符串左部指定个数的字符</p>\n<p>left(string,n)：string为要截取的字符串，n为长度</p>\n<p><strong>举例：</strong></p>\n<p>(1) left(database(),1)&gt;’a’,查看数据库名第一位，left(database(),2)&gt;’ab’,查看数据库名前二位。</p>\n<p>(2) 同样的string可以为自行构造的sql语句。</p>\n<p>9、ORD()：返回第一个字符的ASCII码，经常与上面的函数进行组合使用。</p>\n<p><strong>例如：</strong></p>\n<p>ORD(MID(DATABASE(),1,1))&gt;114 意为检测database()的第一位ASCII码是否大于114，也即是‘r’</p>\n<p>10、regexp 正则注入：</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202160832282.png\" alt=\"image-20220202160832282\"></p>\n<p>当正确的时候显示结果为 1，不正确的时候显示结果为0。</p>\n<p><strong>示例介绍：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> I select * from users where id&#x3D;1 and 1&#x3D;(if((user() regexp &#39;^r&#39;),1,0)); \n\nII select * from users where id&#x3D;1 and 1&#x3D;(user() regexp&#39;^ri&#39;); 通过 if 语句的条件判断，返回一些条件句，比如 if 等构造一个判断。根据返回结果是否等 于 0 或者 1 进行判断。 \n\nIII select * from users where id&#x3D;1 and 1&#x3D;(select 1 from information_schema.tables where table_schema&#x3D;&#39;security&#39; and table_name regexp &#39;^us[a-z]&#39; limit 0,1); 这里利用 select 构造了一个判断语句。我们只需要更换 regexp 表达式即可 &#39;^u[a-z]&#39; -&gt; &#39;^us[a-z]&#39; -&gt; &#39;^use[a-z]&#39; -&gt; &#39;^user[a-z]&#39; -&gt; FALSE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>正则注入介绍：<a href=\"http://www.cnblogs.com/lcamry/articles/5717442.html\">http://www.cnblogs.com/lcamry/articles/5717442.html</a></p>\n<p>11、like匹配注入：和上述的正则类似，mysql 在匹配的时候我们可以用 ike 进行匹配。</p>\n<p>​        用法：select user() like ‘ro%’;结果正确返回1，错误返回0。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202161357929.png\" alt=\"image-20220202161357929\"></p>\n<p>12、floor()，其功能是“向下取整”，或者说“向下舍入”、“向零取舍”，即取不大于x的最大整数。其主要用于报错盲注中的函数。</p>\n<p>13、rand函数：可以产生一个0–1之间的随机数；配合floor()构造 payload。当rand()有了参数之后，他会对所查询的每条数据产生一个随机数，但是从时间角度看每次给的随机数值是一样的，所以这个随机数是可以预测的，也叫伪随机数。如图：</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202163408808.png\" alt=\"image-20220202163408808\"></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202163503270.png\" alt=\"image-20220202163503270\"></p>\n<p>*<em>14、floor()配合rand()使用：floor(rand(1)<em>2)；</em></em></p>\n<p><strong>rand()返回的是0到1之间的随机数，乘2是为了让他返回0到2之间的随机数，组合floor()的取整，这里返回的值只能是0和1；</strong></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202163820155.png\" alt=\"image-20220202163820155\"></p>\n<p>15、groud by：对数据进行分组。配合rand()和floor()使用。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E7%9B%B2%E6%B3%A8.htm/image-20220202165654327.png\" alt=\"image-20220202165654327\"></p>\n<p>16、<strong>updatexml() 函数</strong>：改变文档中符合条件的节点的值。<br>        Updatexml(xml_documnet,XPath_string,new_value)；<br>        第一个参数：XML_document是string格式，为XML文档对象的名称<br>        第二个参数：XPath_string(Xpath格式的字符串)<br>        第三个参数：new_value，string格式，替换查找到的符合条件的数据超过长度可以配合      substr()。</p>\n<p>17、<strong>extractvalue()函数：</strong>配合updatexml() 进行时间盲注。</p>\n<p>extractvalue (XML_document, XPath_string); </p>\n<p>第一个参数：XML_document是String格式，为XML文档对象的名称，<br>第二个参数：XPath_string (<a href=\"https://so.csdn.net/so/search?q=Xpath&spm=1001.2101.3001.7020\">Xpath</a>格式的字符串).<br>作用：从目标XML中返回包含所查询值的字符串</p>\n<hr>\n<p>##基于布尔SQL盲注—-构造逻辑判断</p>\n<p>布尔盲注主要基于返回的结果来来进行注入；</p>\n<p>通常利用left()，ascii()，ORD()，regexp，like等数据库关键字根据返回的逻辑值去判断数据库或者其他字段的名字。</p>\n<h2 id=\"基于报错的SQL盲注—-构造payload-让信息通过错误提示回显出来\"><a href=\"#基于报错的SQL盲注—-构造payload-让信息通过错误提示回显出来\" class=\"headerlink\" title=\"基于报错的SQL盲注—-构造payload 让信息通过错误提示回显出来\"></a>基于报错的SQL盲注—-构造payload 让信息通过错误提示回显出来</h2><p>通常利用concat()，floor()，rand()函数构造payload注入，爆出数据库名字或其他关键字段。</p>\n<h2 id=\"基于时间的-SQL-盲注———-延时注入\"><a href=\"#基于时间的-SQL-盲注———-延时注入\" class=\"headerlink\" title=\"基于时间的 SQL 盲注———-延时注入\"></a>基于时间的 SQL 盲注———-延时注入</h2><p>原理：某些查询不需要返回结果的，仅判断查询语句是否正确执行即可，可以使用sleep来进行时间盲注，取页面执行时间(结束时间-开始时间)来判断sleep函数是否正常执行，所以其是否正常执行可以看到一个布尔值，正常为True 报错False。<strong>本质是利用插入的sql语句执行造成时间延迟</strong></p>\n","text":"SQL盲注概述盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。 1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的 盲注来获取信息。2.盲注是不能通过直接显示的途径来获取数据库数据的方法。 盲注的分类1、布尔盲注 2、...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E7%9B%B2%E6%B3%A8%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">SQL盲注概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B2%E6%B3%A8%E7%9A%84%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">盲注的分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E7%9B%B2%E6%B3%A8%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">SQL盲注常用的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E6%8A%A5%E9%94%99%E7%9A%84SQL%E7%9B%B2%E6%B3%A8%E2%80%94-%E6%9E%84%E9%80%A0payload-%E8%AE%A9%E4%BF%A1%E6%81%AF%E9%80%9A%E8%BF%87%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA%E5%9B%9E%E6%98%BE%E5%87%BA%E6%9D%A5\"><span class=\"toc-text\">基于报错的SQL盲注—-构造payload 让信息通过错误提示回显出来</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84-SQL-%E7%9B%B2%E6%B3%A8%E2%80%94%E2%80%94%E2%80%94-%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">基于时间的 SQL 盲注———-延时注入</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"盲注-SQL靶场","uid":"b9f032fc8c8fc6510bd3ac95f6665bcd","slug":"盲注-SQL靶场","date":"2022-02-02T12:12:53.000Z","updated":"2022-02-13T15:30:25.012Z","comments":true,"path":"api/articles/盲注-SQL靶场.json","keywords":null,"cover":[],"text":"[TOC] 0x00Less-5和Less-6关看了很多文章，总的下来就是布尔盲注，报错注入和时间盲注，通过各种函数进行注入，在这里记录以下。 0x01（floor()报错）首先，开始注入的时候先是按照1-4关的注入方式探测了以下注入点，又看了一下源码，发现源码当中只能输出You...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入-文件读写操作","uid":"9eb50f7de58edddafde74a5aa271206c","slug":"SQL注入-文件读写操作","date":"2022-02-01T04:55:10.000Z","updated":"2022-02-13T15:45:43.308Z","comments":true,"path":"api/articles/SQL注入-文件读写操作.json","keywords":null,"cover":[],"text":"[TOC] SQL注入文件读写及导出这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。 1、load_file():读取函数： 以下代码实在数据库执行的源码进行文件读取： select load_file(&#3...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}