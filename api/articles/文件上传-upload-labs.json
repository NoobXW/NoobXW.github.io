{"title":"文件上传-upload-labs","uid":"839a0bf2eef6223788002c9f68db568c","slug":"文件上传-upload-labs","date":"2022-02-14T06:12:41.000Z","updated":"2023-01-31T13:41:40.159Z","comments":true,"path":"api/articles/文件上传-upload-labs.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Pass-01（前端JS绕过）\"><a href=\"#Pass-01（前端JS绕过）\" class=\"headerlink\" title=\"Pass-01（前端JS绕过）\"></a>Pass-01（前端JS绕过）</h1><h3 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>首先分析一下源码：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214141754993.png\" alt=\"image-20220214141754993\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214142036372.png\" alt=\"image-20220214142036372\"></p>\n<p><code>$_FILES</code>：PHP中的<code>$_FILES</code> 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 <code>$_FILES</code> 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。</p>\n<p><code>move_uploaded_file()</code> 函数：把上传的文件移动到新位置。</p>\n<p>通过源码可以看到这是前端验证，一般前端验证都是纸老虎。</p>\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>这关有三种方式：浏览器禁用JS，抓包，本地修改源码。</p>\n<p>####禁用JS</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214144628824.png\" alt=\"image-20220214144628824\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214145044601.png\" alt=\"image-20220214145044601\"></p>\n<p>可以看到禁用JS后1.php文件已上传，但<strong>实战中这种方式并不推荐</strong>，实战中其他的JS文件可能会有其他功能，禁用JS会导致其他功能的失败，达不到想要的效果。</p>\n<p>访问上传的文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214150424977.png\" alt=\"image-20220214150424977\"></p>\n<p>####抓包</p>\n<p>修改文件后缀：</p>\n<p>修改前：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214151040800.png\" alt=\"image-20220214151040800\"></p>\n<p>修改后进行放包：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214151109932.png\" alt=\"image-20220214151109932\"></p>\n<p>可以看到文件已上传4.php：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214151321338.png\" alt=\"image-20220214151321338\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214151234108.png\" alt=\"image-20220214151234108\"></p>\n<p>访问4.php文件，jpg格式被解析成php格式执行，之后执行了恶意语句：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214151626302.png\" alt=\"image-20220214151626302\"></p>\n<h4 id=\"本地修改源码\"><a href=\"#本地修改源码\" class=\"headerlink\" title=\"本地修改源码\"></a>本地修改源码</h4><p>右键查看源代码删除JS代码修改文件后缀名为html：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214152332406.png\" alt=\"image-20220214152332406\"></p>\n<p>由于上传文件是要上传给服务器，但此时复制出来的源码没有上传路径，此时就要打开浏览器：右键-&gt;检查-&gt;网络-&gt;上传正常的图片-&gt;找到POST请求的上传路径复制下来-&gt;填到<code>action</code>字段后面：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214152827556.png\" alt=\"image-20220214152827556\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214152931931.png\" alt=\"image-20220214152931931\"></p>\n<p>接下来上传文件即可：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214153125343.png\" alt=\"image-20220214153125343\"></p>\n<p>5.php文件已被上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214153141232.png\" alt=\"image-20220214153141232\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214153456644.png\" alt=\"image-20220214153456644\"></p>\n<h1 id=\"Pass-02（MME绕过）\"><a href=\"#Pass-02（MME绕过）\" class=\"headerlink\" title=\"Pass-02（MME绕过）\"></a>Pass-02（MME绕过）</h1><p>源码分析：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214154048267.png\" alt=\"image-20220214154048267\"></p>\n<p>由于源码中有<code>type</code>字段，可见这关是常见验证中的文件类型验证，也就是验证MIME信息，因此，思路就是抓包将<code>Content-Type</code>修改为允许上传的类型（image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif）三选一。</p>\n<h3 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>将<code>application/octet-stream</code>字段修改为可允许通过的类型：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214154700738.png\" alt=\"image-20220214154700738\"></p>\n<p>###0x01</p>\n<p>这里选择jpg类型：image&#x2F;jpeg</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214155027552.png\" alt=\"image-20220214155027552\"></p>\n<p>（这里记得将文件名修改一下，因为服务器不允许相同文件名存在）</p>\n<p>###0x02</p>\n<p>文件已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214155154137.png\" alt=\"image-20220214155154137\"></p>\n<h1 id=\"Pass-03（上传特殊解析后缀绕过）\"><a href=\"#Pass-03（上传特殊解析后缀绕过）\" class=\"headerlink\" title=\"Pass-03（上传特殊解析后缀绕过）\"></a>Pass-03（上传特殊解析后缀绕过）</h1><h3 id=\"0x00-2\"><a href=\"#0x00-2\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>看源码，黑名单验证：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214155726191.png\" alt=\"image-20220214155726191\"></p>\n<p>先了解下函数：</p>\n<p>$deny_ext：不允许通过的文件后缀</p>\n<p>trim()函数： 函数移除字符串两侧的空白字符或其他预定义字符。</p>\n<p>deldot()函数：删除文件名末尾的点</p>\n<p><code>::$DATA</code> ：在window的时候如果文件名+<code>&quot;::$DATA&quot;</code>会把<code>::$DATA</code>之后的数据当成文件流处理,不会检测后缀名，且保持<code>::$DATA</code>之前的文件名，他的目的就是不检查后缀名。</p>\n<p>例如:<code>&quot;phpinfo.php::$DATA&quot;</code>Windows会自动去掉末尾的<code>::$DATA</code>变成<code>&quot;phpinfo.php&quot;</code></p>\n<p>整个源码：将上传的文件先用trim()函数去掉文件名和后缀名两侧的空格（这是由于抓到数据包之后文件的名字和后缀名可添加空格进行执行），同样deldot()函数也是同理。</p>\n<p>利用黑名单缺陷：<strong>黑名单验证若是黑名单定义不完整的话是可以实现绕过的，用.phtml，.php，.php5，.pht进行绕过。</strong></p>\n<h3 id=\"0x01-1\"><a href=\"#0x01-1\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>这里将6.php修改为6.php5：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214163208715.png\" alt=\"image-20220214163208715\"></p>\n<p>可以看到文件已上传：（这里上传上去文件名会改变）</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215003319602.png\" alt=\"image-20220215003319602\"></p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215003854950.png\" alt=\"image-20220215003854950\"></p>\n<p>这里如果要访问6.php5文件的话必须修改Apache配置文件，将一下注释符去掉：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n\n\n\n\n<h1 id=\"Pass-04（上传-htaccess）\"><a href=\"#Pass-04（上传-htaccess）\" class=\"headerlink\" title=\"Pass-04（上传.htaccess）\"></a>Pass-04（上传.htaccess）</h1><h3 id=\"0x00-3\"><a href=\"#0x00-3\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214165628833.png\" alt=\"image-20220214165628833\"></p>\n<p>这关和上一关最大的区别 就是黑名单添加的更多了。这种情况，尝试上传一个<code>.htaccess</code>配置文件。创建.htaccess文件内容写：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;FilesMatch &quot;2&quot;&gt;\nSethandler application&#x2F;x-httpd-php\n&lt;&#x2F;FilesMatch &gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>此时，访问2.jpg文件即可。</p>\n<p>可以看到上传成功：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214170552577.png\" alt=\"image-20220214170552577\"></p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>.htaccess文件不能起名字，它就是.htaccess文件，如果将它改为4.htaccess或者其他的什么名字是不可以的，无法解析。在实战中有可能上传上去这个文件会被自动重命名，被重命名了就不可以了。</p>\n<p>#Pass-05（点和空格绕过）</p>\n<h3 id=\"0x00-4\"><a href=\"#0x00-4\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析，这关将<code>.htaccess</code>后缀名拉入了黑名单，而且源码中对于删除末尾的点和收尾去空的操作只进行了一次过滤。<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214223114234.png\" alt=\"image-20220214223114234\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214223528242.png\" alt=\"image-20220214223528242\"></p>\n<p><strong>思路：</strong>因此将数据包中的<code>.php</code>改成<code>.php. .</code>，由于它会先检查文件名末尾的点，然后再去空，但只检查一次，还是会留下一个<code>.</code>形成<code>.php.</code>这时候就进行了绕过。</p>\n<p>（但如果这里使用循环的话，这个方法是不可行的）</p>\n<h3 id=\"0x01-2\"><a href=\"#0x01-2\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>抓包，将<code>6.php</code>改为<code>9.php. .</code>:<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214224343252.png\" alt=\"image-20220214224343252\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214235003901.png\" alt=\"image-20220214235003901\"></p>\n<p>###0x02</p>\n<p>可以看到9.php文件已经被上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214235034287.png\" alt=\"image-20220214235034287\"></p>\n<p>###0x03</p>\n<p>访问9.php：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214235517954.png\" alt=\"image-20220214235517954\"></p>\n<p>#Pass-06（大小写绕过）</p>\n<h3 id=\"0x00-5\"><a href=\"#0x00-5\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220214235653409.png\" alt=\"image-20220214235653409\"></p>\n<p>源码中将大小写转换一行去掉了，也就是说没有进行大小写转换。</p>\n<p><strong>思路：</strong>那这里可以使用大写或者大小写混合进行绕过。</p>\n<h3 id=\"0x01-3\"><a href=\"#0x01-3\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>上传1.php，修改为大小写混合：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215000032391.png\" alt=\"image-20220215000032391\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215000228486.png\" alt=\"image-20220215000228486\"></p>\n<p>###0x02</p>\n<p>可以看到已上传，这里文件名会被自动修改：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215000208080.png\" alt=\"image-20220215000208080\"></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>访问1.php：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215004739422.png\" alt=\"image-20220215004739422\"></p>\n<h1 id=\"Pass-07（空格绕过）\"><a href=\"#Pass-07（空格绕过）\" class=\"headerlink\" title=\"Pass-07（空格绕过）\"></a>Pass-07（空格绕过）</h1><p>源码可以看到，去空一行没有了，那这关抓包在后缀名后面添加空格即可。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215001921553.png\" alt=\"image-20220215001921553\"></p>\n<h3 id=\"0x00-6\"><a href=\"#0x00-6\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>上传6.php文件，后缀名加空格：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215004927112.png\" alt=\"image-20220215004927112\"></p>\n<p>###0x01</p>\n<p>文件已上传：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005038895.png\" alt=\"image-20220215005038895\"></p>\n<h3 id=\"0x02-1\"><a href=\"#0x02-1\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005250961.png\" alt=\"image-20220215005250961\"></p>\n<h1 id=\"Pass-08（点绕过）\"><a href=\"#Pass-08（点绕过）\" class=\"headerlink\" title=\"Pass-08（点绕过）\"></a>Pass-08（点绕过）</h1><p>源码将删除末尾的点一行去掉了，这关思路就是<strong>抓包加点</strong>：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005448407.png\" alt=\"image-20220215005448407\"></p>\n<h3 id=\"0x00-7\"><a href=\"#0x00-7\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>改包：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005709872.png\" alt=\"image-20220215005709872\"></p>\n<h3 id=\"0x01-4\"><a href=\"#0x01-4\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>文件已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005646852.png\" alt=\"image-20220215005646852\"></p>\n<h3 id=\"0x02-2\"><a href=\"#0x02-2\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215005813075.png\" alt=\"image-20220215005813075\"></p>\n<h1 id=\"Pass-09（-DATA绕过）\"><a href=\"#Pass-09（-DATA绕过）\" class=\"headerlink\" title=\"Pass-09（::$DATA绕过）\"></a>Pass-09（::$DATA绕过）</h1><h3 id=\"0x00-8\"><a href=\"#0x00-8\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码将<code>字符串::$DATA</code>一行去掉，这里直接加上<code>字符串::$DATA</code>上传。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215010428901.png\" alt=\"image-20220215010428901\"></p>\n<h3 id=\"0x01-5\"><a href=\"#0x01-5\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>抓包改包：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215010709048.png\" alt=\"image-20220215010709048\"></p>\n<h3 id=\"0x02-3\"><a href=\"#0x02-3\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215010801698.png\" alt=\"image-20220215010801698\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215010831109.png\" alt=\"image-20220215010831109\"></p>\n<h1 id=\"Pass-10\"><a href=\"#Pass-10\" class=\"headerlink\" title=\"Pass-10\"></a>Pass-10</h1><h3 id=\"0x00-9\"><a href=\"#0x00-9\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>和第5关相同</p>\n<h1 id=\"Pass-11（双写绕过）\"><a href=\"#Pass-11（双写绕过）\" class=\"headerlink\" title=\"Pass-11（双写绕过）\"></a>Pass-11（双写绕过）</h1><h3 id=\"0x00-10\"><a href=\"#0x00-10\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>看到源码把那几行过滤的代码都去掉了，就试着随便上传了一下：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215011433956.png\" alt=\"image-20220215011433956\"></p>\n<p>可以看到，直接把后缀名过滤了：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215011549187.png\" alt=\"image-20220215011549187\"></p>\n<p>那这里应该就是不允许使用.php后缀的文件，直接双写绕过。</p>\n<h3 id=\"0x01-6\"><a href=\"#0x01-6\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>抓包改包：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215011713862.png\" alt=\"image-20220215011713862\"></p>\n<h3 id=\"0x02-4\"><a href=\"#0x02-4\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>绕过成功：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215011739154.png\" alt=\"image-20220215011739154\"></p>\n<h3 id=\"0x03-1\"><a href=\"#0x03-1\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215011854229.png\" alt=\"image-20220215011854229\"></p>\n<h2 id=\"Pass-02–Pass-11总结\"><a href=\"#Pass-02–Pass-11总结\" class=\"headerlink\" title=\"Pass-02–Pass-11总结\"></a>Pass-02–Pass-11总结</h2><p>以上这几关都是黑名单绕过，而且过滤语句没有涉及循环，都是验证一次，理解每一关的思路，了解每一关方法是重点。</p>\n<h1 id=\"Pass-12（-00截断）\"><a href=\"#Pass-12（-00截断）\" class=\"headerlink\" title=\"Pass-12（%00截断）\"></a>Pass-12（%00截断）</h1><h3 id=\"0x00-11\"><a href=\"#0x00-11\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>白名单验证：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215012011212.png\" alt=\"image-20220215012011212\"></p>\n<p>涉及函数：<br>PHP strrpos() 函数：查找字符串在另一字符串中最后一次出现的位置。</p>\n<p>这里就是：查找<strong>文件名后缀</strong>在字符串中最后一次出现的位置</p>\n<p>源码中可以看到文件路径是可以控制的，那这里通过<code>%00进行截断</code>上传文件。由于是<code>get方式</code>进行提交，所以直接填<code>%00</code>即可，因为<code>get方式</code>会自动编码，而<code>post方式</code>需要手动转换。</p>\n<p><strong>注意：%00只能用于php版本低于5.3的</strong></p>\n<h3 id=\"0x01-7\"><a href=\"#0x01-7\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>%00截断：<br>在<strong>url中%00表示ascll码中的0</strong> ，而ascii中0作为特殊字符保留，表示字符串结束，所以当url中出现%00时就会认为读取已结束。</p>\n<p>###0x02</p>\n<p>源码中post方式提交的路径是图片目录，这里直接提交<code>10.php%00</code>，可以看到上传的文件10.php。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215163828205.png\" alt=\"image-20220215163828205\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215163206878.png\" alt=\"image-20220215163206878\"></p>\n<p><strong>原因：这是由于文件名拼接目录名之后再进行php后缀的验证，而此时10.php文件后存在%00进行截断，就不会拼接后面的4.jpg文件，就认为是10.php文件，就完成了绕过。</strong></p>\n<h3 id=\"0x03-2\"><a href=\"#0x03-2\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215165244220.png\" alt=\"image-20220215165244220\"></p>\n<h1 id=\"Pass-13（POST-00截断）\"><a href=\"#Pass-13（POST-00截断）\" class=\"headerlink\" title=\"Pass-13（POST%00截断）\"></a>Pass-13（POST%00截断）</h1><h3 id=\"0x00-12\"><a href=\"#0x00-12\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>这关提交方式是post，那这里<code>%00</code>就需要手动编码。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215170108170.png\" alt=\"image-20220215170108170\"></p>\n<h3 id=\"0x01-8\"><a href=\"#0x01-8\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>手动编码：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215170758285.png\" alt=\"image-20220215170758285\"></p>\n<h3 id=\"0x02-5\"><a href=\"#0x02-5\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>可以看到2.php文件已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215170915245.png\" alt=\"image-20220215170915245\"></p>\n<h3 id=\"0x03-3\"><a href=\"#0x03-3\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>访问文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215171124398.png\" alt=\"image-20220215171124398\"></p>\n<h1 id=\"Pass-14（图片马绕过）\"><a href=\"#Pass-14（图片马绕过）\" class=\"headerlink\" title=\"Pass-14（图片马绕过）\"></a>Pass-14（图片马绕过）</h1><h3 id=\"0x00-13\"><a href=\"#0x00-13\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215171312458.png\" alt=\"image-20220215171312458\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215172941999.png\" alt=\"image-20220215172941999\"></p>\n<p><strong>getimagesize() 函数</strong>：将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。函数成功返回的就是一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。</p>\n<p>根据源码和提示可知，这里应该是通过检查文件的头部信息去验证（读取判断上传文件的前两个字节）是否是<code>jpg，png</code>或<code>gif</code>格式的图片，页面也提示上传图片码。那这里的思路就是文件包含漏洞进行上传。</p>\n<p>补充知识：</p>\n<p>1.Png图片文件包括8字节：89 50 4E 47 0D 0A 1A 0A。即为 .PNG。<br>2.Jpg图片文件包括2字节：FF D8。<br>3.Gif图片文件包括6字节：47 49 46 38 39|37 61 。即为 GIF89(7)a。<br>4.Bmp图片文件包括2字节：42 4D。即为 BM。</p>\n<h3 id=\"0x01-9\"><a href=\"#0x01-9\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>将2.jpg图片以notepad++打开写入一句话上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215174727383.png\" alt=\"image-20220215174727383\"></p>\n<h3 id=\"0x02-6\"><a href=\"#0x02-6\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>然后需要在upload目录下新建include.php文件进行读取文件：<br>内容填写：（如果不定义include.php文件不能访问上传的文件）</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'page'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>之后访问一下地址：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;localhost&#x2F;upload&#x2F;include.php?page&#x3D;6620220215173309.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215174617909.png\" alt=\"image-20220215174617909\"></p>\n<h1 id=\"Pass-15（突破getimagesize）\"><a href=\"#Pass-15（突破getimagesize）\" class=\"headerlink\" title=\"Pass-15（突破getimagesize）\"></a>Pass-15（突破getimagesize）</h1><h3 id=\"0x00-14\"><a href=\"#0x00-14\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215180129754.png\" alt=\"image-20220215180129754\"></p>\n<p><strong>image_type_to_extension()函数</strong>：（根据指定的图像类型返回对应的后缀名）会对目标文件的16进制去进行一个读取，去读取头几个字符串是不是符合图片的要求。</p>\n<p><strong>getimagesize()函数</strong>：取得图像大小。这个函数只接收图像格式信息，若是其他格式则函数返回为<strong>空</strong>，<strong>这样就直接限制了上传文件的类型。</strong></p>\n<h3 id=\"0x01-10\"><a href=\"#0x01-10\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>上传图片马：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215180616334.png\" alt=\"image-20220215180616334\"></p>\n<h3 id=\"0x02-7\"><a href=\"#0x02-7\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215180539273.png\" alt=\"image-20220215180539273\"></p>\n<h1 id=\"Pass-16（突破exif-imagetype）\"><a href=\"#Pass-16（突破exif-imagetype）\" class=\"headerlink\" title=\"Pass-16（突破exif_imagetype）\"></a>Pass-16（突破exif_imagetype）</h1><h3 id=\"0x00-15\"><a href=\"#0x00-15\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215221647985.png\" alt=\"image-20220215221647985\"></p>\n<p><strong>exif_imagetype()</strong> 函数：读取一个图像的第一个字节并检查其签名。   只接受图片信息，表示只能上传图片。</p>\n<p>了解函数功能后，这关基本和14，15关没什么区别。</p>\n<h3 id=\"0x01-11\"><a href=\"#0x01-11\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>第一张jpg图片，已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215222020168.png\" alt=\"image-20220215222020168\"></p>\n<h3 id=\"0x02-8\"><a href=\"#0x02-8\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>访问文件：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215223215494.png\" alt=\"image-20220215223215494\"></p>\n<h1 id=\"Pass-17（二次渲染）\"><a href=\"#Pass-17（二次渲染）\" class=\"headerlink\" title=\"Pass-17（二次渲染）\"></a>Pass-17（二次渲染）</h1><h3 id=\"0x00-16\"><a href=\"#0x00-16\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215223532933.png\" alt=\"image-20220215223532933\"></p>\n<p>三段关于jpg，png，gif的源码；</p>\n<p><code>imagecreatefromjpeg</code> — 由文件或 URL 创建一个新图象。</p>\n<p>看到这个函数，其实这关就是使用二次渲染的过滤。</p>\n<h3 id=\"0x01-12\"><a href=\"#0x01-12\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>先尝试上传图片马，上传成功，14361.jpg。<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215224106051.png\" alt=\"image-20220215224106051\"></p>\n<h3 id=\"0x02-9\"><a href=\"#0x02-9\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>尝试连接：</p>\n<p>可以看到访问上传的图片只是图片格式：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215224440634.png\" alt=\"image-20220215224440634\"></p>\n<p>而原来的图片内容中是有php代码的：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215224341765.png\" alt=\"image-20220215224341765\"></p>\n<p>使用notepad++打开上传的文件，果然，没有php代码：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215224415138.png\" alt=\"image-20220215224415138\"></p>\n<p>这里应该就是上述函数过滤后的结果，将上传的php代码进行了删除。</p>\n<h3 id=\"0x03-4\"><a href=\"#0x03-4\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p><strong>二次渲染绕过原理：</strong></p>\n<p>绕过二次渲染，只需要找到渲染前后没有变化的位置，然后将php代码写进去上传文件，最后可以成功触发php代码。</p>\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>可以看到这两部分内容不同：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215230603500.png\" alt=\"image-20220215230603500\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215230625814.png\" alt=\"image-20220215230625814\"></p>\n<p><strong>绕过方法</strong>：具体实现二次渲染绕过需要写脚本对两张图片进行对比，找到没有被修改的部分插入php代码即可。</p>\n<h1 id=\"Pass-18（条件竞争）\"><a href=\"#Pass-18（条件竞争）\" class=\"headerlink\" title=\"Pass-18（条件竞争）\"></a>Pass-18（条件竞争）</h1><h3 id=\"0x00-17\"><a href=\"#0x00-17\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215232830235.png\" alt=\"image-20220215232830235\"></p>\n<p><strong>unlink() 函数</strong>：删除文件。</p>\n<p>**move_uploaded_file(file,newloc)**：把上传的文件移动到新位置。</p>\n<p>它先将图片上传到服务器，之后，如果临时文件移动到$upload_file，并且文件后缀在jpg，png，gif之间的话，进行重命名，若不在的三者之间就删除文件。</p>\n<h3 id=\"0x01-13\"><a href=\"#0x01-13\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>由于源码当中没有进行二次渲染，所以这里可以上传图片马。</p>\n<p>但作者的本意并非如此，这里主要是考察的是条件竞争；也就是上传的php文件在被删除之前访问就会成功上传文件。通过后门连接，文件就不会被删除。</p>\n<h3 id=\"0x02-10\"><a href=\"#0x02-10\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>先上传一个php文件，抓包，将数据包发送至intruder下，点击clear清除所有标记：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215235007296.png\" alt=\"image-20220215235007296\"></p>\n<p>设置为如图：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215235041889.png\" alt=\"image-20220215235041889\"></p>\n<p>第一个参数修改为20，开始攻击：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220215235417795.png\" alt=\"image-20220215235417795\"></p>\n<p>放包，使用其他浏览器一直访问3.php地址；</p>\n<p>疯狂访问，总有那么一瞬间就访问到了：（这里纯手工访问，电脑都快起飞了，最好是跑脚本，方便快捷）</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216000135839.png\" alt=\"image-20220216000135839\"></p>\n<h1 id=\"Pass-19（条件竞争）\"><a href=\"#Pass-19（条件竞争）\" class=\"headerlink\" title=\"Pass-19（条件竞争）\"></a>Pass-19（条件竞争）</h1><h3 id=\"0x00-18\"><a href=\"#0x00-18\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>根据提示，这关需要代码审计，直接查看源码。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216101655012.png\" alt=\"image-20220216101655012\"></p>\n<p>源码中定义了很多可接受的后缀名：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216111110688.png\" alt=\"image-20220216111110688\"></p>\n<p>在index.php中调用了函数Myupload()：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216111502575.png\" alt=\"image-20220216111502575\"></p>\n<p>之后它会检查文件的拓展名，文件的大小，移动的目录，修改文件名等操作，由源码可以知道做了白名单过滤，这里也利用burp上传图片马，由于条件竞争，程序会出现来不及<strong>rename</strong>的问题，从而上传成功。</p>\n<h3 id=\"0x01-14\"><a href=\"#0x01-14\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>burp设置模块和18关相同。</p>\n<h3 id=\"0x02-11\"><a href=\"#0x02-11\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>可以看到，在另外一个浏览器访问4.jpg文件，（这里以文件包含的地址访问，必须添加include.php），总会有一瞬间服务器来不及<strong>rename</strong>，以4.php文件上传，这时只要访问即可。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216165414760.png\" alt=\"image-20220216165414760\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216165441178.png\" alt=\"image-20220216165441178\"></p>\n<h1 id=\"Pass-20（-x2F-绕过）\"><a href=\"#Pass-20（-x2F-绕过）\" class=\"headerlink\" title=\"Pass-20（&#x2F;.绕过）\"></a>Pass-20（&#x2F;.绕过）</h1><h3 id=\"0x00-19\"><a href=\"#0x00-19\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216165857927.png\" alt=\"image-20220216165857927\"></p>\n<p>pathinfo() 函数：以数组的形式返回关于文件路径的信息。</p>\n<p>从源码可以看到文件名路径由post方式提交，应该可以使用00截断绕过；</p>\n<h3 id=\"0x01-15\"><a href=\"#0x01-15\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>抓包，修改文件名添加%00：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216171049840.png\" alt=\"image-20220216171049840\"></p>\n<h3 id=\"0x02-12\"><a href=\"#0x02-12\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>可以看到，3.php已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216171204861.png\" alt=\"image-20220216171204861\"></p>\n<h3 id=\"0x03-5\"><a href=\"#0x03-5\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>访问文件，连接成功：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216173340667.png\" alt=\"image-20220216173340667\"></p>\n<h3 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>但这关本意并不是考察00截断，由于源码中含有<code>move_uploaded_file()</code>函数，它的特性是会忽略掉文件末尾的<code>/.</code>，所以这里利用这个思路进行绕过。</p>\n<h3 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>抓包修改数据：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216173859014.png\" alt=\"image-20220216173859014\"></p>\n<h3 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h3><p>可以看到upload-4.php文件已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216174003144.png\" alt=\"image-20220216174003144\"></p>\n<h3 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h3><p>连接文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216174133311.png\" alt=\"image-20220216174133311\"></p>\n<h1 id=\"Pass-21（数组绕过）\"><a href=\"#Pass-21（数组绕过）\" class=\"headerlink\" title=\"Pass-21（数组绕过）\"></a>Pass-21（数组绕过）</h1><h3 id=\"0x00-20\"><a href=\"#0x00-20\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>源码分析：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$is_upload &#x3D; false;\n$msg &#x3D; null;\nif(!empty($_FILES[&#39;upload_file&#39;]))&#123;\n    &#x2F;&#x2F;检查MIME\n    $allow_type &#x3D; array(&#39;image&#x2F;jpeg&#39;,&#39;image&#x2F;png&#39;,&#39;image&#x2F;gif&#39;);\n    if(!in_array($_FILES[&#39;upload_file&#39;][&#39;type&#39;],$allow_type))&#123;\n        $msg &#x3D; &quot;禁止上传该类型文件!&quot;;\n    &#125;else&#123;\n        &#x2F;&#x2F;检查文件名\n        $file &#x3D; empty($_POST[&#39;save_name&#39;]) ? $_FILES[&#39;upload_file&#39;][&#39;name&#39;] : $_POST[&#39;save_name&#39;];\n        if (!is_array($file)) &#123;\n            $file &#x3D; explode(&#39;.&#39;, strtolower($file));\n        &#125;\n\n        $ext &#x3D; end($file);\n        $allow_suffix &#x3D; array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);\n        if (!in_array($ext, $allow_suffix)) &#123;\n            $msg &#x3D; &quot;禁止上传该后缀文件!&quot;;\n        &#125;else&#123;\n            $file_name &#x3D; reset($file) . &#39;.&#39; . $file[count($file) - 1];\n            $temp_file &#x3D; $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];\n            $img_path &#x3D; UPLOAD_PATH . &#39;&#x2F;&#39; .$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) &#123;\n                $msg &#x3D; &quot;文件上传成功！&quot;;\n                $is_upload &#x3D; true;\n            &#125; else &#123;\n                $msg &#x3D; &quot;文件上传失败！&quot;;\n            &#125;\n        &#125;\n    &#125;\n&#125;else&#123;\n    $msg &#x3D; &quot;请选择要上传的文件！&quot;;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>explode()函数</strong>：把字符串打散为数组：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216175644626.png\" alt=\"image-20220216175644626\"></p>\n<p><strong>strtolower()函数</strong>：将所有字符串转换为小写。</p>\n<p><strong>end() 函数</strong>：将内部指针指向数组中的最后一个元素，并输出。</p>\n<p><strong>reset() 函数</strong>：把数组的内部指针指向第一个元素，并返回这个元素的值。</p>\n<p>这段代码大概意思就是：上传的文件先检查MIME，若是白名单类型则将整个文件的名字后缀通过explode()函数以<code>.</code>为标志分割为数组，之后end()函数检查最后一个数组是否为白名单类型，若是，则上传文件。</p>\n<p>具体效果如下：</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">传空<span class=\"token operator\">/</span>字符串\n 则取上传文件名\n 如果上传conn19<span class=\"token operator\">.</span>php<span class=\"token operator\">.</span>jpg，会遇到explode分割为数组<span class=\"token punctuation\">:</span>\n <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>conn19<span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>php <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>jpg\n <span class=\"token variable\">$ext</span><span class=\"token operator\">=</span>jpg可以过白名单\n 但是reset<span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>conn19<span class=\"token operator\">.</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>jpg就是图片了\n 所以这里应该用到save_name，而且要传数组（传字符串就和空一样效果）\n\n\n 传数组\n save_name<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>conn19<span class=\"token operator\">.</span>php\n save_name<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>jpg\n <span class=\"token variable\">$ext</span><span class=\"token operator\">=</span>jpg过白名单\n reset<span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>conn19<span class=\"token operator\">.</span>php <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>null<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>参考文章：</p>\n<p><a href=\"https://www.cnblogs.com/SnowSec/p/14258452.html\">https://www.cnblogs.com/SnowSec/p/14258452.html</a></p>\n<h3 id=\"0x01-16\"><a href=\"#0x01-16\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>由于源码先要检查MIME，这里就要先修改MIME：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216185145165.png\" alt=\"image-20220216185145165\"></p>\n<h3 id=\"0x02-13\"><a href=\"#0x02-13\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>这里需要修改保存文件的<strong>第三个数组为jpg</strong>进行绕过白名单验证：</p>\n<p><strong>注意：</strong>save_name[2]需要手动添加。</p>\n<p>这是因为抓到的数据包中没有上传到服务器，当上传到服务器时，explode()函数只拆分upload-20为Array[0]，php为Array[1]，但此时我们呢手动添加Array[2]，而源码中end()函数正好取的是最后一个数组的元素，由于最后一个数组的元素被我们手动添加为jpg，则绕过了白名单验证。</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216185232404.png\" alt=\"image-20220216185232404\"></p>\n<h3 id=\"0x03-6\"><a href=\"#0x03-6\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>可以看到文件已上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216185309204.png\" alt=\"image-20220216185309204\"></p>\n<h3 id=\"0x04-2\"><a href=\"#0x04-2\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>访问文件：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216185428434.png\" alt=\"image-20220216185428434\"></p>\n<h3 id=\"0x05-1\"><a href=\"#0x05-1\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>这关可以使用图片马进行进行上传：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216175146929.png\" alt=\"image-20220216175146929\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216175226871.png\" alt=\"image-20220216175226871\"></p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216175330126.png\" alt=\"image-20220216175330126\"></p>\n<h1 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h1><p>文件上传方法：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216192118158.png\" alt=\"image-20220216192118158\"></p>\n<p>文件上传过程：</p>\n<p><img src=\"/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-upload-labs.htm/image-20220216192143228.png\" alt=\"image-20220216192143228\"></p>\n<p>由此可以看出，白名单要比黑名单安全很多。但是在实战中是没有代码的，绕过的话需要需要一个一个测试。最重要的还是明白上传的思路和方法，还有就是代码审计很重要，看得懂代码就已经成功一半了。</p>\n","text":"Pass-01（前端JS绕过）0x00首先分析一下源码： $_FILES：PHP中的$_FILES 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $_FILES 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。 m...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-01%EF%BC%88%E5%89%8D%E7%AB%AFJS%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-01（前端JS绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">本地修改源码</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-02%EF%BC%88MME%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-02（MME绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-03%EF%BC%88%E4%B8%8A%E4%BC%A0%E7%89%B9%E6%AE%8A%E8%A7%A3%E6%9E%90%E5%90%8E%E7%BC%80%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-03（上传特殊解析后缀绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-2\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-1\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-04%EF%BC%88%E4%B8%8A%E4%BC%A0-htaccess%EF%BC%89\"><span class=\"toc-text\">Pass-04（上传.htaccess）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-3\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-4\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-2\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-5\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-3\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-07%EF%BC%88%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-07（空格绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-6\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-1\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-08%EF%BC%88%E7%82%B9%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-08（点绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-7\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-4\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-2\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-09%EF%BC%88-DATA%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-09（::$DATA绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-8\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-5\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-3\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-10\"><span class=\"toc-text\">Pass-10</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-9\"><span class=\"toc-text\">0x00</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-11%EF%BC%88%E5%8F%8C%E5%86%99%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-11（双写绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-10\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-6\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-4\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-1\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Pass-02%E2%80%93Pass-11%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">Pass-02–Pass-11总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-12%EF%BC%88-00%E6%88%AA%E6%96%AD%EF%BC%89\"><span class=\"toc-text\">Pass-12（%00截断）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-11\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-7\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-2\"><span class=\"toc-text\">0x03</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-13%EF%BC%88POST-00%E6%88%AA%E6%96%AD%EF%BC%89\"><span class=\"toc-text\">Pass-13（POST%00截断）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-12\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-8\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-5\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-3\"><span class=\"toc-text\">0x03</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-14%EF%BC%88%E5%9B%BE%E7%89%87%E9%A9%AC%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-14（图片马绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-13\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-9\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-6\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-15%EF%BC%88%E7%AA%81%E7%A0%B4getimagesize%EF%BC%89\"><span class=\"toc-text\">Pass-15（突破getimagesize）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-14\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-10\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-7\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-16%EF%BC%88%E7%AA%81%E7%A0%B4exif-imagetype%EF%BC%89\"><span class=\"toc-text\">Pass-16（突破exif_imagetype）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-15\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-11\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-8\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-17%EF%BC%88%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93%EF%BC%89\"><span class=\"toc-text\">Pass-17（二次渲染）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-16\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-12\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-9\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-4\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-18%EF%BC%88%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%EF%BC%89\"><span class=\"toc-text\">Pass-18（条件竞争）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-17\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-13\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-10\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-19%EF%BC%88%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%EF%BC%89\"><span class=\"toc-text\">Pass-19（条件竞争）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-18\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-14\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-11\"><span class=\"toc-text\">0x02</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-20%EF%BC%88-x2F-%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-20（&#x2F;.绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-19\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-15\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-12\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-5\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x07\"><span class=\"toc-text\">0x07</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pass-21%EF%BC%88%E6%95%B0%E7%BB%84%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Pass-21（数组绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-20\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-16\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-13\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-6\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-2\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05-1\"><span class=\"toc-text\">0x05</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Summary\"><span class=\"toc-text\">Summary</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"文件上传-解析漏洞","uid":"8822ebc3b04f9f9d5f4a65e981067804","slug":"文件上传-解析漏洞","date":"2022-02-17T13:22:37.000Z","updated":"2022-02-17T17:21:38.295Z","comments":true,"path":"api/articles/文件上传-解析漏洞.json","keywords":null,"cover":[],"text":"前言由于中间件会出现解析漏洞，若配合文件上传会出现很大的安全危害。这里以Vulhub靶场进行漏洞复现，在这之前要了解一下中间件，服务器和Web服务器的区别。 中间件，服务器和Web服务器的区别一、服务器的定义： 服务器指的是一个管理资源并为用户提供服务的计算机软件，通常分为文件服...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"文件上传-Webshell介绍","uid":"ac44a9ac4337ea71f1fa38abe9d1c638","slug":"文件上传-Webshell介绍","date":"2022-02-13T12:48:38.000Z","updated":"2022-02-13T14:55:04.207Z","comments":true,"path":"api/articles/文件上传-Webshell介绍.json","keywords":null,"cover":null,"text":"[TOC] Webshell​ webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。使用方法简单，只需上传一个代码文件，通过网址访问，便可进行很多日常操作，极大地方便了使用者对网站和服务器的管理...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}