{"title":"墨者学院-命令执行","uid":"63b4d5992a8dc61b2cccec272a36e569","slug":"墨者学院-命令执行","date":"2022-03-13T01:39:21.000Z","updated":"2022-03-20T11:50:42.422Z","comments":true,"path":"api/articles/墨者学院-命令执行.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>#命令执行注入</p>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>启动靶场环境</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313094027047.png\" alt=\"image-20220313094027047\"></p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p>提示输入ip地址</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313094214029.png\" alt=\"image-20220313094214029\"></p>\n<p>先测试一下</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313094257314.png\" alt=\"image-20220313094257314\"></p>\n<p>可以看到成功ping的返回信息。</p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>接下来尝试使用管道符执行ls命令查看目录</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313100436220.png\" alt=\"image-20220313100436220\"></p>\n<p>这里判断的时候出现弹窗提示ip格式不对，先看下源码是不是前端验证</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313094615030.png\" alt=\"image-20220313094615030\"></p>\n<p>果然，那这里的话就需要绕过前端验证。</p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>抓包进行绕过</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313100600741.png\" alt=\"image-20220313100600741\"></p>\n<p>目录中有key文件</p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>使用cat命令打开key文件</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313100912420.png\" alt=\"image-20220313100912420\"></p>\n<p>无回显，因该是有过滤</p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>添加<code>&lt;</code>绕过过滤，成功得到key</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313100958826.png\" alt=\"image-20220313100958826\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p>提交key，完成</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313101132802.png\" alt=\"image-20220313101132802\"></p>\n<h1 id=\"PHP代码分析溯源-第4题\"><a href=\"#PHP代码分析溯源-第4题\" class=\"headerlink\" title=\"PHP代码分析溯源(第4题)\"></a>PHP代码分析溯源(第4题)</h1><h2 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>启动靶场</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313101314099.png\" alt=\"image-20220313101314099\"></p>\n<h2 id=\"0x01-1\"><a href=\"#0x01-1\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p>提示key在根目录，而且还有一段base64加密的php代码，先试着解密查看内容</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313101401929.png\" alt=\"image-20220313101401929\"></p>\n<h2 id=\"0x02-1\"><a href=\"#0x02-1\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>解密出来是REQUEST请求，a是参数，也是可控变量，那这里利用a做文章</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313101922929.png\" alt=\"image-20220313101922929\"></p>\n<h2 id=\"0x03-1\"><a href=\"#0x03-1\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;124.70.71.251:42767&#x2F;f.php?a&#x3D;ls<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>得到目录，有key存在</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313102142552.png\" alt=\"image-20220313102142552\"></p>\n<h2 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;124.70.71.251:42767&#x2F;f.php?a&#x3D;cat%20key_5986251809730.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看源码得到key</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313102605832.png\" alt=\"image-20220313102605832\"></p>\n<h2 id=\"0x05-1\"><a href=\"#0x05-1\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>提交key，完成</p>\n<p><img src=\"/post/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C.htm/image-20220313102721754.png\" alt=\"image-20220313102721754\"></p>\n","text":"#命令执行注入 0x00启动靶场环境 0x01提示输入ip地址 先测试一下 可以看到成功ping的返回信息。 0x02接下来尝试使用管道符执行ls命令查看目录 这里判断的时候出现弹窗提示ip格式不对，先看下源码是不是前端验证 果然，那这里的话就需要绕过前端验证。 0x03抓包进行...","link":"","photos":[],"count_time":{"symbolsCount":529,"symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PHP%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90%E6%BA%AF%E6%BA%90-%E7%AC%AC4%E9%A2%98\"><span class=\"toc-text\">PHP代码分析溯源(第4题)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-1\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-1\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-1\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05-1\"><span class=\"toc-text\">0x05</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"php弱类型","uid":"475a4194f2b842990d8398d70f0c7aaf","slug":"php弱类型","date":"2022-03-15T08:32:55.000Z","updated":"2022-07-23T15:40:46.387Z","comments":true,"path":"api/articles/php弱类型.json","keywords":null,"cover":null,"text":"前言在CTF平台做题时，遇到很多php弱类型的题目，也看了很多php弱类型的文章，在这里总结一下。 0x00php中有两种比较的符号 == 与 === 1 &lt;?php 2 $a = $b ; 3 $a===$b ; 4 ?> === 在进行比较的时候，会先判断两种字符串的类...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"CTF","slug":"CTF","count":10,"path":"api/categories/CTF.json"}],"tags":[{"name":"CTF","slug":"CTF","count":19,"path":"api/tags/CTF.json"},{"name":"PHP","slug":"PHP","count":5,"path":"api/tags/PHP.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"RCE代码及命令执行漏洞","uid":"99ef65eed770437be60664bb9539a369","slug":"RCE代码及命令执行漏洞","date":"2022-03-12T07:42:14.000Z","updated":"2022-03-12T08:38:19.341Z","comments":true,"path":"api/articles/RCE代码及命令执行漏洞.json","keywords":null,"cover":[],"text":"前言在 Web 应用中有时候程序员为了考虑灵活性、简洁性，会在代码调用代码或命令执行函数去处理。比如当应用在调用一些能将字符串转化成代码的函数时，没有考虑用户是否能控制这个字符串，将造成代码执行漏洞。同样调用系统命令处理，将造成命令执行漏洞。 脑图： RCE漏洞原理RCE(rem...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}