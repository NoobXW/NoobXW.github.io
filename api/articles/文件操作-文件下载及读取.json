{"title":"文件操作-文件下载及读取","uid":"6e204dcc81a1dda57afcdf13b8c27892","slug":"文件操作-文件下载及读取","date":"2022-03-20T12:38:50.000Z","updated":"2022-03-20T14:13:54.806Z","comments":true,"path":"api/articles/文件操作-文件下载及读取.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>脑图：<br><img src=\"/post/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%8F%8A%E8%AF%BB%E5%8F%96.htm/image-20220320205322924.png\" alt=\"image-20220320205322924\"></p>\n<h2 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>文件下载（一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。）</p>\n<p>任意文件下载漏洞，正常的利用手段是下载服务器文件，如脚本代码，服务器配置或者是系统配置等等。但是有的时候我们可能根本不知道网站所处的环境，以及网站的路径，这时候我们只能利用.&#x2F; ..&#x2F;来逐层猜测路径，让漏洞利用变得繁琐。<br>此时如果 攻击者提交的不是一个程序预期的的文件名，而是一个精心构造的路径(如..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd),则很有可能会直接将该指定的文件下载下来。 从而导致后台敏感信息(密码文件、源代码等)被下载。<br>所以，在设计文件下载功能时，如果下载的目标文件是由前端传进来的，则一定要对传进来的文件进行安全考虑。 </p>\n<p><strong>如下代码一个正常的网站，存在一个下载文件的功能，同时还会从浏览器接收文件名字，将存在任意文件下载漏洞。</strong></p>\n<pre class=\"line-numbers language-php+HTML\" data-language=\"php+HTML\"><code class=\"language-php+HTML\">&lt;?php\n  $filename &#x3D; $_GET[&#39;filename&#39;];\n  echo &#39;&lt;h1&gt;讲开始下载文件！&lt;&#x2F;h1&gt;&lt;br &#x2F;&gt;&lt;br &#x2F;&gt;&#39;;\n  echo **file_get_contents**($filename); &#x2F;&#x2F;**无过滤导致*****\\*漏洞函数\\**** **file_get_contents 函数把整个文件读入一个字符串中并输出**\n\n  header(&#39;Content-Type: imgage&#x2F;jpeg&#39;);\n  header(&#39;Content-Disposition: attachment; filename&#x3D;&#39;.$filename);\n  header(&#39;Content-Lengh: &#39;.filesize($filename));\n?&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"漏洞发现\"><a href=\"#漏洞发现\" class=\"headerlink\" title=\"漏洞发现\"></a>漏洞发现</h2><p>如何发现（网站URL中存在下载参数，并且未进行过滤..&#x2F;..&#x2F;..&#x2F;字符，且输出了文件内容）<br>1、Google search<br>利用inurl:”readfile.php?file&#x3D;”</p>\n<p>2、从链接上看，形如：<br>  • download.php?path&#x3D;<br>  • download.php?file&#x3D;<br>  • down.php?file&#x3D;<br>  • data.php?file&#x3D;<br>  • readfile.php?file&#x3D;<br>  • read.php?filename&#x3D;</p>\n<p>3、从参数名看，形如：<br>  • &amp;RealPath&#x3D;<br>  • &amp;FilePath&#x3D;<br>  • &amp;ﬁlepath&#x3D;<br>  • &amp;Filepath&#x3D;<br>  • &amp;Path&#x3D;<br>  • &amp;path&#x3D;<br>  • &amp;inputFile&#x3D;<br>  • &amp;Inputfile&#x3D;<br>  • &amp;url&#x3D;<br>  • &amp;urls&#x3D;<br>  • &amp;Lang&#x3D;<br>  • &amp;dis&#x3D;<br>  • &amp;data&#x3D;<br>  • &amp;Data&#x3D;<br>  • &amp;readﬁle&#x3D;<br>  • &amp;ﬁlep&#x3D;<br>  • &amp;src&#x3D;<br>  • &amp;menu&#x3D;<br>  • META-INF<br>  • WEB-INF</p>\n<p>4、index.php?f&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</p>\n<p> index.php?f&#x3D;..&#x2F;index.php</p>\n<p> index.php?f&#x3D;ﬁle:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</p>\n<p> readfile.php?file&#x3D;&#x2F;etc&#x2F;passwd</p>\n<p> readfile.php?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</p>\n<p> readfile.php?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd%00（00截断）</p>\n<p>5、使用扫描工具扫描敏感文件，如：</p>\n<p>​      御剑，7kb等等</p>\n<p>6、利用下载好的文件代码去分析路径和包含文件获取敏感文件等</p>\n<p>7、真实网站需要找到下载功能点，分析是什么脚本及下载路径选择对应下载文件</p>\n<p>（<strong>注：当参数f的参数值为php文件时，若是文件被解析则是文件包含漏洞，</strong></p>\n<p>  <strong>若显示源码或提示下载则是文件查看与下载漏洞</strong>）</p>\n<h2 id=\"漏洞绕过\"><a href=\"#漏洞绕过\" class=\"headerlink\" title=\"漏洞绕过\"></a>漏洞绕过</h2><p>1.若过滤字符或字母可尝试编码绕过</p>\n<p>2.利用 ..&#x2F;..&#x2F;</p>\n<p>但是有些代码会进行过滤(具体要根据代码进行测试)，会把 ..&#x2F; 置空<br>利用….&#x2F;&#x2F; 代替 ..&#x2F;<br>利用..&#x2F;&#x2F; 代替 &#x2F;</p>\n<p>具体怎么绕过还是得看代码是怎么写的<br>3.</p>\n<p>注意<br>①.注意 <strong>..&#x2F;</strong> 的数量，他代表查询目录父目录的数量<br>②.当我们遇到一个任意文件下载漏洞时首先要注意下载的权限问题。因为权限决定我们能下载的文件范围。<br>③.有些网站（主要是针对系统）并不会在URL里显示给你看，这时候你需要抓包，从数据包里修改路径，达到任意文件读取。</p>\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><p>**利用:**（信息收集信息&gt;猜路径 &gt;&gt;下载配置文件&#x2F;代码文件 &gt;&gt; 利用服务器软件漏洞&gt; shell&gt; 提权）<br>1.任意文件下载漏洞的利用主要是为了信息收集，我们通过对服务器配置文件的下载，获取到大量的配置信息、源码，从而根据获取的信息来进一步挖掘服务器漏洞从而入侵。</p>\n<p>2.下载常规的配置文件，例如: ssh,weblogic,ftp,mysql等相关配置<br>下载各种.log文件，从中寻找一些后台地址，文件上传点之类的地方，如果运气好的话会获得一些前辈们的后门。<br>下载web业务文件进行白盒审计，利用漏洞进一步攻入服务器</p>\n<p>3.Windows：（windows的这些路径不一定都存在）</p>\n<p>  C:\\boot.ini &#x2F;&#x2F;查看系统版本</p>\n<p>  C:\\Windows\\System32\\inetsrv\\MetaBase.xml     &#x2F;&#x2F;IIS配置文件</p>\n<p>  C:\\Windows\\repair\\sam                     &#x2F;&#x2F;存储系统初次安装的密码</p>\n<p>  C:\\Program Files\\mysql\\my.ini                &#x2F;&#x2F;Mysql配置</p>\n<p>  C:\\Program Files\\mysql\\data\\mysql\\user.MYD   &#x2F;&#x2F;Mysql root</p>\n<p>  C:\\Windows\\php.ini        &#x2F;&#x2F;php配置信息</p>\n<p>  C:\\Windows\\my.ini        &#x2F;&#x2F;Mysql配置信息</p>\n<p>  C:\\Windows\\win.ini        &#x2F;&#x2F;Windows系统的一个基本系统配置文件</p>\n<p>Linux：</p>\n<p>  &#x2F;root&#x2F;.ssh&#x2F;authorized_keys</p>\n<p>  &#x2F;root&#x2F;.ssh&#x2F;id_rsa</p>\n<p>  &#x2F;root&#x2F;.ssh&#x2F;id_ras.keystore</p>\n<p>  &#x2F;root&#x2F;.ssh&#x2F;known_hosts        &#x2F;&#x2F;记录每个访问计算机用户的公钥</p>\n<p>  &#x2F;etc&#x2F;passwd</p>\n<p>  &#x2F;etc&#x2F;shadow</p>\n<p>  &#x2F;usr&#x2F;local&#x2F;app&#x2F;php5&#x2F;lib&#x2F;php.ini         &#x2F;&#x2F;PHP配置文件</p>\n<p>  &#x2F;etc&#x2F;my.cnf          &#x2F;&#x2F;mysql配置文件</p>\n<p>  &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf        &#x2F;&#x2F;apache配置文件</p>\n<p>  &#x2F;root&#x2F;.bash_history        &#x2F;&#x2F;用户历史命令记录文件</p>\n<p>  &#x2F;root&#x2F;.mysql_history        &#x2F;&#x2F;mysql历史命令记录文件</p>\n<p>  &#x2F;proc&#x2F;mounts          &#x2F;&#x2F;记录系统挂载设备</p>\n<p>  &#x2F;porc&#x2F;config.gz         &#x2F;&#x2F;内核配置文件</p>\n<p>  &#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db      &#x2F;&#x2F;全文件路径</p>\n<p>  &#x2F;porc&#x2F;self&#x2F;cmdline        &#x2F;&#x2F;当前进程的cmdline参数</p>\n<h2 id=\"漏洞防护\"><a href=\"#漏洞防护\" class=\"headerlink\" title=\"漏洞防护\"></a>漏洞防护</h2><ul>\n<li>过滤<code>.</code>(点)，使用户在url中不能回溯上级目录</li>\n<li>正则严格判断用户输入参数的格式</li>\n<li><code>php.ini</code>配置<code>open_basedir</code>限定文件访问范围</li>\n</ul>\n<p>转载原文：<br><a href=\"https://www.cnblogs.com/zzhoo/p/12613815.html\">https://www.cnblogs.com/zzhoo/p/12613815.html</a></p>\n<p><strong>Javaweb实现文件下载：</strong></p>\n<p><a href=\"https://blog.csdn.net/Cheng_May/article/details/78600833\">https://blog.csdn.net/Cheng_May/article/details/78600833</a></p>\n<p><strong>小米路由器远程任意文件下载：</strong><br><a href=\"https://www.seebug.org/vuldb/ssvid-98122\">https://www.seebug.org/vuldb/ssvid-98122</a></p>\n","text":"前言脑图： 漏洞原理文件下载（一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。） 任意文件下载漏洞，正常的利用手段是下载服务器文件，如脚本代码，服务器配置或者是系统配置...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"任意文件下载","slug":"任意文件下载","count":1,"path":"api/categories/任意文件下载.json"}],"tags":[{"name":"任意文件下载","slug":"任意文件下载","count":1,"path":"api/tags/任意文件下载.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">漏洞原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0\"><span class=\"toc-text\">漏洞发现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">漏洞绕过</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">漏洞利用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E9%98%B2%E6%8A%A4\"><span class=\"toc-text\">漏洞防护</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"关于她","uid":"2659211fc1b4543131f8cda1813d3bae","slug":"关于她","date":"2022-04-24T03:40:04.000Z","updated":"2022-04-24T04:36:53.587Z","comments":true,"path":"api/articles/关于她.json","keywords":null,"cover":null,"text":"写一篇关于她时隔久远没更博了，种种原因实在没时间。 ​ 想写一篇关于她，之前就想写了，一直不知道该怎么写，直到今天，我昨晚又梦到她了。虽然经常会梦到她，但这次也许感情更加浓烈。关于她，也就随便聊聊，自己想把自己心里压了很久的话写在这里。关于她，我只想用一句网络流行语来形容：我喜欢...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"她","slug":"她","count":1,"path":"api/categories/她.json"}],"tags":[{"name":"她","slug":"她","count":1,"path":"api/tags/她.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"文件操作-文件包含漏洞","uid":"7b77b3ea2f4278aa34c51c9c5ad0efd9","slug":"文件操作-文件包含漏洞","date":"2022-03-20T09:52:07.000Z","updated":"2022-03-20T12:32:34.780Z","comments":true,"path":"api/articles/文件操作-文件包含漏洞.json","keywords":null,"cover":[],"text":"前言脑图： 文件包含服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，这会为开发者节省大量的时间。这意味着可以创建供所有网页引用的标准页眉或菜单文件。当页面需要更新时，只更新一个包含文件就可以了，或者向网站添加一张新页面时，仅仅需要修改...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"文件包含","slug":"文件包含","count":1,"path":"api/categories/文件包含.json"}],"tags":[{"name":"文件包含","slug":"文件包含","count":2,"path":"api/tags/文件包含.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}