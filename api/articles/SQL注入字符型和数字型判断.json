{"title":"SQL注入字符型和数字型判断","uid":"13edec6f4d479c2c3e54757e7424c180","slug":"SQL注入字符型和数字型判断","date":"2022-01-31T15:43:00.000Z","updated":"2022-02-13T15:47:04.073Z","comments":true,"path":"api/articles/SQL注入字符型和数字型判断.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2><p>在SQL注入中如何判断字符型注入还是数字型注入很重要，这里自己记录一下。</p>\n<h2 id=\"数字型判定\"><a href=\"#数字型判定\" class=\"headerlink\" title=\"数字型判定\"></a>数字型判定</h2><p>1、<strong>and或者or</strong></p>\n<p>假设数据库的执行语句是：select * from table where id&#x3D;$id</p>\n<p>这里我以自己本地的sql靶场为例。</p>\n<p>此时执行语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-2&#x2F;?id&#x3D;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回正常页面</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220131235010309.png\" alt=\"image-20220131235010309\"></p>\n<p>若执行语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-2&#x2F;?id&#x3D;1 and 1&#x3D;2#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面异常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220131235143197.png\" alt=\"image-20220131235143197\"></p>\n<p>这是因为这时数据库执行的语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;1 and 1&#x3D;2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>语句正确，逻辑错误。</p>\n<hr>\n<p>若执行语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-2&#x2F;?id&#x3D;1 or 1&#x3D;2#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>返回页面正常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220131235620782.png\" alt=\"image-20220131235620782\"></p>\n<p>这时数据库执行的语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;1 or 1&#x3D;2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>语句正确，逻辑正确，页面返回正常。</p>\n<p><strong>因此，可以使用and或or来判断字段是否是数字型，但因为字段型的and和or返回的结果都为正常页面，我们就不好通过or来进行比较，一般习惯于用and 1&#x3D;2,如果是数字型，返回错误，但如果是字符型，返回正确，这样两者之间就有了不同，有了比较。</strong></p>\n<p>2、<strong>单引号判断</strong></p>\n<p>假如此时语句为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-2&#x2F;?id&#x3D;1&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这时数据库执行的语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;1’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>单引号不匹配</strong>，语句正确，页面返回错误。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201000053200.png\" alt=\"image-20220201000053200\"></p>\n<h2 id=\"字符型判定\"><a href=\"#字符型判定\" class=\"headerlink\" title=\"字符型判定\"></a>字符型判定</h2><p>1、<strong>and或or</strong></p>\n<p>假设数据库的执行语句是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;’$id’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行以下语句时：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>数据库执行的是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;‘1’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面返回正常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201000539553.png\" alt=\"image-20220201000539553\"></p>\n<p>若执行and语句时：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1 and 1&#x3D;2#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这时数据库执行的语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;‘1 and 1&#x3D;2’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面返回正常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201000811749.png\" alt=\"image-20220201000811749\"></p>\n<hr>\n<p>若执行or时：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;3 or 1&#x3D;2#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这时数据库执行的语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;‘3 or 1&#x3D;2’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面返回正常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201001024957.png\" alt=\"image-20220201001024957\"></p>\n<p>对于字符型注入，不管是and或者or，执行结果都是一样的，都会返回id&#x3D;1的页面，这是由于数据库中id的类型是数值型，比如int型，而<strong>MySQL数据库在执行语句时是会自动进行类型转换的</strong>，输入的字符<strong>3 or 1&#x3D;2</strong>会在执行时被自动转换成int型的3，所以最终的执行语句还是<strong>select * from table where id&#x3D;‘3’</strong>，这是数据库的特性问题，后面的字符可以是<strong>任意的</strong>，不会影响查询，我们在3后面加上任意字符，比如3ctf，最后都会被转换为3来进行语句执行。</p>\n<p>如图：<br><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201002020011.png\" alt=\"image-20220201002020011\"></p>\n<p>此时的执行语句是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;4ctf #<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到此时返回页面的变化。</p>\n<p><strong>如果id本身就是varchar类型的，那么数据库查询的时候就会进行精准的匹配，这样子’4ctf’等类似的数据由于数据库里没有匹配项,查询结果为空。</strong></p>\n<p>所以，如果字段是字符型的，那么我们使用<strong>and或者or</strong>来测试时页面返回都是正常的</p>\n<p>2、<strong>单引号判断</strong></p>\n<p>当执行一下语句时：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>SQL语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;‘1’’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>单引号不匹配，语句错误，页面错误</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201002452436.png\" alt=\"image-20220201002452436\"></p>\n<p>注释多余的 ‘ 后：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;1&#39; --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行的SQL语句就是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select * from table where id&#x3D;‘1’ --+’<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>语句正确，页面正常</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%92%8C%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E6%96%AD.htm/image-20220201002733573.png\" alt=\"image-20220201002733573\"></p>\n<p>这里与数字型判断不同的是，<strong>数字型判定尽管加上注释符，执行的SQL语句是select * from table where id&#x3D;1’ –+’ 因为单引号还是不匹配，语句还是错误的，页面还是返回错误。</strong></p>\n","text":"[TOC] 说明在SQL注入中如何判断字符型注入还是数字型注入很重要，这里自己记录一下。 数字型判定1、and或者or 假设数据库的执行语句是：select * from table where id&#x3D;$id 这里我以自己本地的sql靶场为例。 此时执行语句为： htt...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">说明</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E5%9E%8B%E5%88%A4%E5%AE%9A\"><span class=\"toc-text\">数字型判定</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E5%9E%8B%E5%88%A4%E5%AE%9A\"><span class=\"toc-text\">字符型判定</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-文件读写操作","uid":"9eb50f7de58edddafde74a5aa271206c","slug":"SQL注入-文件读写操作","date":"2022-02-01T04:55:10.000Z","updated":"2022-02-13T15:45:43.308Z","comments":true,"path":"api/articles/SQL注入-文件读写操作.json","keywords":null,"cover":[],"text":"[TOC] SQL注入文件读写及导出这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。 1、load_file():读取函数： 以下代码实在数据库执行的源码进行文件读取： select load_file(&#3...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入-字符&数字型","uid":"35084a956f4a822fbd12f304f8c336a2","slug":"Less1-Less4","date":"2022-01-30T15:59:34.000Z","updated":"2022-12-24T04:22:16.654Z","comments":true,"path":"api/articles/Less1-Less4.json","keywords":null,"cover":[],"text":"[TOC] ###Less-1（字符型注入） 0x00首先注入： ?id&#x3D;1 正常返回结果 由于要判断注入点，如图： 添加 ‘ 报错，证明有注入点，字符型，id&#x3D;1’报错是由于源码当中接收值的时候本身自己就是id&#x3D;’’的闭合形式，但由于我们自己强行在...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}