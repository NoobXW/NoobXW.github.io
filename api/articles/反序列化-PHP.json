{"title":"反序列化-PHP","uid":"87006ba4a5e8f65e132df547ebdb643d","slug":"反序列化-PHP","date":"2022-06-04T01:51:34.000Z","updated":"2022-06-04T13:29:05.897Z","comments":true,"path":"api/articles/反序列化-PHP.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>脑图</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.png\" alt=\"PHP反序列化\"></p>\n<h2 id=\"0x01-原理\"><a href=\"#0x01-原理\" class=\"headerlink\" title=\"0x01 原理\"></a>0x01 原理</h2><p>序列化：将对象转化为字节序列</p>\n<p>反序列化：将字节序列转化为对象</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604102214070.png\" alt=\"image-20220604102214070\"></p>\n<h2 id=\"0x02-PHP反序列化\"><a href=\"#0x02-PHP反序列化\" class=\"headerlink\" title=\"0x02 PHP反序列化\"></a>0x02 PHP反序列化</h2><p>未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL 注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当进行反序列化的时候就有可能会触发对象中的一些魔术方法。</p>\n<p>PHP序列化与反序列化函数：</p>\n<p><code>serialize()</code>     &#x2F;&#x2F;将一个对象转换成一个字符串</p>\n<p><code>unserialize()</code>   &#x2F;&#x2F;将字符串还原成一个对象</p>\n<h2 id=\"0x03-触发漏洞\"><a href=\"#0x03-触发漏洞\" class=\"headerlink\" title=\"0x03 触发漏洞\"></a>0x03 触发漏洞</h2><p>触发：unserialize 函数的变量可控，文件中存在可利用的类，类中有魔术方法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">__construct()&#x2F;&#x2F;创建对象时触发\n\n__destruct() &#x2F;&#x2F;对象被销毁时触发\n\n__call() &#x2F;&#x2F;在对象上下文中调用不可访问的方法时触发\n\n__callStatic() &#x2F;&#x2F;在静态上下文中调用不可访问的方法时触发\n\n__get() &#x2F;&#x2F;用于从不可访问的属性读取数据\n\n__set() &#x2F;&#x2F;用于将数据写入不可访问的属性\n\n__isset() &#x2F;&#x2F;在不可访问的属性上调用 isset()或 empty()触发\n\n__unset() &#x2F;&#x2F;在不可访问的属性上使用 unset()时触发\n\n__invoke() &#x2F;&#x2F;当脚本尝试将对象调用为函数时触发<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>参考：<a href=\"https://www.cnblogs.com/20175211lyz/p/11403397.html\">https://www.cnblogs.com/20175211lyz/p/11403397.html</a></p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>反序列化格式：将对象转化为字符串后的各属性图解</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604105725888.png\" alt=\"image-20220604105725888\"></p>\n<h2 id=\"0x05-PHP反序列化-无类问题-本地\"><a href=\"#0x05-PHP反序列化-无类问题-本地\" class=\"headerlink\" title=\"0x05 PHP反序列化-无类问题-本地\"></a>0x05 PHP反序列化-无类问题-本地</h2><h3 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>写一个php序列化的脚本测试</p>\n<p>代码如下：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$KEY</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'muyu123'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>利用<a href=\"https://www.dooccn.com/php/%E5%9C%A8%E7%BA%BF%E5%B9%B3%E5%8F%B0%E8%BE%93%E5%87%BA%E5%85%B6%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E5%90%8E%E7%9A%84%E5%86%85%E5%AE%B9\">https://www.dooccn.com/php/在线平台输出其序列化之后的内容</a></p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604110520882.png\" alt=\"image-20220604110520882\"></p>\n<p>可以看到输出序列化为：s字符型，长度为7个字符，变量名为muyu123。</p>\n<p>这个例子由于没有<code>class</code>，由此是无类的情况。</p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>相反，进行反序列化输出，修改代码为：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$KEY</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'s:7:\"muyu123\";'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>输出结果</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604111006687.png\" alt=\"image-20220604111006687\"></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>对这部分代码块进行代码审计：</p>\n<p>包含一个flag.php文件，有一个KEY，以GET方式接收一个字符串，若接受的字符串反序列化之后&#x3D;KEY值，则输出flag.php文件。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$KEY</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"muyu123\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$KEY</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$flag</span></span>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>当KEY值不是字符串的时候，不会显示长度。</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604113325085.png\" alt=\"image-20220604113325085\"></p>\n<h2 id=\"0x06-PHP反序列化有类问题\"><a href=\"#0x06-PHP反序列化有类问题\" class=\"headerlink\" title=\"0x06 PHP反序列化有类问题\"></a>0x06 PHP反序列化有类问题</h2><p>有类（class）代码代码块</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ABC</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'调用了构造函数&lt;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'调用了析构函数&lt;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'调用了苏醒函数&lt;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'创建对象a&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ABC</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'序列化&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a_ser</span><span class=\"token operator\">=</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'反序列化&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a_unser</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a_ser</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'对象快要死了！'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行结果为：（只要有过Java和C++的功底都能理解）</p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604185514622.png\" alt=\"image-20220604185514622\"></p>\n<p><img src=\"/post/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-PHP.htm/image-20220604195104646.png\" alt=\"image-20220604195104646\"></p>\n","text":"0x00脑图 0x01 原理序列化：将对象转化为字节序列 反序列化：将字节序列转化为对象 0x02 PHP反序列化未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL 注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">0x01 原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">0x02 PHP反序列化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E8%A7%A6%E5%8F%91%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">0x03 触发漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E6%97%A0%E7%B1%BB%E9%97%AE%E9%A2%98-%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">0x05 PHP反序列化-无类问题-本地</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06-PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%9C%89%E7%B1%BB%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">0x06 PHP反序列化有类问题</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"反序列化靶场","uid":"12fdb6ecdc9fce56588b7231aac6d69e","slug":"反序列化靶场","date":"2022-06-04T09:57:18.000Z","updated":"2022-06-04T14:54:14.476Z","comments":true,"path":"api/articles/反序列化靶场.json","keywords":null,"cover":[],"text":"0x00 bugku-CTF-点login咋没反应0x00一道PHP反序列化的CTF题目。 0x01打开靶场看到有登录框，并且给提示说点了login没有反应 0x02查看源代码发现有一个admin.css文件，打开查看 0x03可以看到提示try ?28606，试试传入28606...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"逻辑越权-验证码与Token及接口","uid":"e9b18ef1b67c7f0e9290c6534e851593","slug":"逻辑越权-验证码与Token及接口","date":"2022-06-02T08:18:09.000Z","updated":"2022-06-03T11:11:24.010Z","comments":true,"path":"api/articles/逻辑越权-验证码与Token及接口.json","keywords":null,"cover":[],"text":"0x00脑图 0x011、验证码安全 分类: 图片，手机或邮箱，语音，视频，操作等原理: 验证生成或验证过程中的逻辑问题危害: 账户权限泄漏，短信轰炸，遍历，任意用户操作等漏洞: 客户端回显，验证码复用，验证码爆破，绕过等—验证码爆破：没有次数限制，验证码有效时间内不变 —验证码...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}