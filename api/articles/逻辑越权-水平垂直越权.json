{"title":"逻辑越权--水平垂直越权","uid":"e12149c3e216e6cbcac496259253a06d","slug":"逻辑越权-水平垂直越权","date":"2022-05-30T08:55:04.000Z","updated":"2022-05-30T10:40:06.234Z","comments":true,"path":"api/articles/逻辑越权-水平垂直越权.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>脑图：</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83.htm/image-20220530170653644.png\" alt=\"image-20220530170653644\"></p>\n<h2 id=\"0x01-漏洞产生原因\"><a href=\"#0x01-漏洞产生原因\" class=\"headerlink\" title=\"0x01 漏洞产生原因\"></a>0x01 漏洞产生原因</h2><p>通常情况下，一个 Web 程序功能流程是登录 - 提交请求 - 验证权限 - 数据库查询 - 返回结果。如果验证权限不足，便会导致越权。常见的程序都会认为通过登录后即可验证用户的身份，从而不会做下一步验证，最后导致越权。</p>\n<ul>\n<li><p>隐藏URL</p>\n</li>\n<li><p>直接对象引用</p>\n</li>\n<li><p>多阶段功能</p>\n</li>\n<li><p>静态文件</p>\n</li>\n<li><p>平台配置错误</p>\n</li>\n</ul>\n<h2 id=\"0x02-分类\"><a href=\"#0x02-分类\" class=\"headerlink\" title=\"0x02 分类\"></a>0x02 分类</h2><p>1、<strong>水平越权</strong></p>\n<p><strong>水平越权是指攻击者尝试访问与他具有相同权限的用户资源。</strong><br>比如，用户A和用户B属于同一角色，拥有相同的权限等级，他们能获取自己的私有数据（数据A和数据B），但如果系统只验证了能访问数据的角色，而没有对数据做细分或者校验，导致用户A能访问到用户B的数据（数据B），那么用户A访问数据B的行为就叫做水平越权访问。<br>以下是常出现的水平越权的几种场景：</p>\n<p>基于用户身份ID<br>在使用某个功能时，通过用户提交的身份ID（用户ID、账号、手机号、证件号等用户唯一标识）来访问或操作对应的数据。<br>基于对象ID<br>在使用某个功能时，通过用户提交的对象ID（如订单号、记录号）来访问或操作对应的数据。<br>基于文件名<br>在使用某个功能时，通过文件名直接访问文件，最常见于用户上传文件的场景。</p>\n<p>2、<strong>垂直越权</strong></p>\n<p><strong>垂直越权是指低权限用户尝试访问高权限用户的资源。</strong><br>由于后台应用没有做权限控制，或仅仅在菜单、按钮上做了权限控制，导致恶意用户只要猜测其他管理页面的URL或者敏感的参数信息，就可以访问或控制其他角色拥有的数据或页面，达到权限提升的目的。<br>主要有以下两种场景：</p>\n<p>未认证账号，访问无需认证后能访问该功能<br>不具备某个功能权限的账户，认证后能成功访问该功能</p>\n<p><strong>垂直越权条件：</strong></p>\n<p>需要获取管理员的数据包：</p>\n<p>例：添加用户</p>\n<p>需要管理员添加用户的数据包</p>\n<p>如何获取数据包：</p>\n<p>a.普通用户前端有操作界面可以抓取数据包</p>\n<p>b.通过网站源码本地搭建自己去模拟抓取数据包</p>\n<p>c.盲猜</p>\n<p>3、<strong>未授权访问</strong></p>\n<p>通过删除请求中的认证信息后重放该请求，依旧可以访问或者完成操作。(有些操作要管理员才行) </p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>图解：</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83.htm/image-20220530172600077.png\" alt=\"image-20220530172600077\"></p>\n","text":"0x00脑图： 0x01 漏洞产生原因通常情况下，一个 Web 程序功能流程是登录 - 提交请求 - 验证权限 - 数据库查询 - 返回结果。如果验证权限不足，便会导致越权。常见的程序都会认为通过登录后即可验证用户的身份，从而不会做下一步验证，最后导致越权。 隐藏URL 直接对象...","link":"","photos":[],"count_time":{"symbolsCount":847,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E6%BC%8F%E6%B4%9E%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">0x01 漏洞产生原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">0x02 分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"逻辑越权靶场","uid":"1851c5af9327b469d7ad45778d027d01","slug":"逻辑越权靶场","date":"2022-05-30T14:40:09.000Z","updated":"2022-05-30T16:02:11.360Z","comments":true,"path":"api/articles/逻辑越权靶场.json","keywords":null,"cover":[],"text":"0x00靶机：pikachu逻辑越权，墨者靶场-身份认证失效漏洞实战 攻击机：windows10 0x01 水平越权###0x00 首先以普通用户登录： 0x01抓包查看数据包信息： 将username字段中的kobe修改为lucy： 可以看到用户切换成功，实现了水平越权。 0x...","link":"","photos":[],"count_time":{"symbolsCount":920,"symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"攻防世界：upload","uid":"006aa54f10dc84a237bfb17ee3048459","slug":"攻防世界：upload","date":"2022-05-11T08:43:06.000Z","updated":"2022-05-11T10:54:14.236Z","comments":true,"path":"api/articles/攻防世界：upload.json","keywords":null,"cover":[],"text":"前言攻防世界一道Web进阶题，题目是upload，最后做了半天使用upload的方式一点用没有，看了几篇博主的帖子，发现是SQL注入，文件名的SQL注入。 0x01上传2.jpg文件会返回文件名，上传php文件返回：不正确的拓展名；开始以为有检测，尝试了各种upload的绕过方式...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}