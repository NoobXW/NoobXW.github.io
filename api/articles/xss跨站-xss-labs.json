{"title":"xss跨站-xss-labs","uid":"b564e09de39e303e8a190e6bd2a14088","slug":"xss跨站-xss-labs","date":"2022-02-21T14:58:27.000Z","updated":"2022-05-30T14:43:32.587Z","comments":true,"path":"api/articles/xss跨站-xss-labs.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>记录一下xss靶场，xss-labs通关过程。</p>\n<p>##Level-1（无过滤）</p>\n<p>###0x00</p>\n<p>可以看到给的提示是payload长度为4，地址栏中get方式的name&#x3D;test与欢迎用户test相对应，试着改一下name的参数值。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220221230054368.png\" alt=\"image-20220221230054368\"></p>\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>修改为test&#x3D;ease访问，可以看到参数值变为了ease：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220221230320497.png\" alt=\"image-20220221230320497\"></p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>插入以下语句执行：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到，通关完成：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220221230621283.png\" alt=\"image-20220221230621283\"></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>源码分析：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223203512972.png\" alt=\"image-20220223203512972\"></p>\n<p>可以看到get接收name参数值，之后输出name参数值，这里没有进行任何的过滤，直接插入跨站语句即可。</p>\n<p>##Level-2（闭合标签）</p>\n<h3 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p> 第二关有了输入框，尝试xss语句看看效果，原样输出：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223204602632.png\" alt=\"image-20220223204602632\"></p>\n<h3 id=\"0x01-1\"><a href=\"#0x01-1\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>分析下代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223205308671.png\" alt=\"image-20220223205308671\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223205604474.png\" alt=\"image-20220223205604474\"></p>\n<p>可以看到其中<code>&lt;</code>和<code>&gt;</code>都被编码成了html字符实体，<code>value</code>字段中插入的<code>xss语句</code>加了双引号，由于在代码中，双引号中的内容被当作字符串去输出，那这里的思路就是去闭合前后双引号绕过过滤。</p>\n<p><strong>htmlspecialchars()</strong> 函数：把预定义的字符 <code>&quot;&lt;&quot; （小于）和 &quot;&gt;&quot; （大于）</code>转换为 HTML 实体。</p>\n<h3 id=\"0x02-1\"><a href=\"#0x02-1\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>插入以下xss语句：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token string\">\">&lt;script>alert(/xss/)&lt;/script>&lt;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223205027837.png\" alt=\"image-20220223205027837\"></p>\n<p>可以看到，绕过成功。</p>\n<h2 id=\"Level-3（单引号闭合-htmlspecialchar-函数）\"><a href=\"#Level-3（单引号闭合-htmlspecialchar-函数）\" class=\"headerlink\" title=\"Level-3（单引号闭合+htmlspecialchar()函数）\"></a>Level-3（单引号闭合+htmlspecialchar()函数）</h2><h3 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223210254667.png\" alt=\"image-20220223210254667\"></p>\n<h3 id=\"0x01-2\"><a href=\"#0x01-2\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>尝试注入：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223210326112.png\" alt=\"image-20220223210326112\"></p>\n<h3 id=\"0x02-2\"><a href=\"#0x02-2\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token string\">\">&lt;script>alert(/xss/)&lt;/script>&lt;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看源码，这次是单引号，将双引号改为单引号注入尝试。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223210434299.png\" alt=\"image-20220223210434299\"></p>\n<p>这里<code>value</code>字段也被编码为了html实体，源码中应该在<code>value</code>字段处也使用了<code>htmlspecialchars()</code>函数。</p>\n<h3 id=\"0x03-1\"><a href=\"#0x03-1\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>注入以下语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;&gt;&lt;script&gt;alert(&#x2F;xss&#x2F;)&lt;&#x2F;script&gt;&lt;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>原样输出：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223210703668.png\" alt=\"image-20220223210703668\"></p>\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>查看源代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223210741765.png\" alt=\"image-20220223210741765\"></p>\n<p>这里还是使用了<code>htmlspecialchars()</code>函数，而且还是两次。</p>\n<h3 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>构造标签事件进行过滤，返回值实在input标签中，尝试构造onclick事件触发xss。点击输入框后，触发onclick事件，响应onclick中的javascript代码。</p>\n<p>payload:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;onclick&#x3D;&#39;alert(&#x2F;xss&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行结果后的源码，如图：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223212446455.png\" alt=\"image-20220223212446455\"></p>\n<p><code>onclick</code>前单引号为了闭合<code>value</code>字段的单引号，<code>=</code>后面的单引号为了使原有的后单引号将语句闭合。</p>\n<p><strong>或者</strong>：</p>\n<p>构造事件onmouseover，事件成功执行javascript:伪协议：</p>\n<p><strong>onmouseover 事件</strong>：会在鼠标指针移动到指定的元素上时发生。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;onmouseover&#x3D;&#39;javascript:alert(&#x2F;xss&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>将鼠标指针移动到输入框时，触发onmouseover 事件，进而<strong>触发xss语句</strong>。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223213840193.png\" alt=\"image-20220223213840193\"></p>\n<h3 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h3><p>点击输入框，过关：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223212718299.png\" alt=\"image-20220223212718299\"></p>\n<h2 id=\"Level-4（双引号闭合-添加事件）\"><a href=\"#Level-4（双引号闭合-添加事件）\" class=\"headerlink\" title=\"Level-4（双引号闭合+添加事件）\"></a>Level-4（双引号闭合+添加事件）</h2><h3 id=\"0x00-2\"><a href=\"#0x00-2\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223212821307.png\" alt=\"image-20220223212821307\"></p>\n<h3 id=\"0x01-3\"><a href=\"#0x01-3\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>尝试注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>看源码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223212940369.png\" alt=\"image-20220223212940369\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223213013160.png\" alt=\"image-20220223213013160\"></p>\n<p>可以看到，源码中将<code>&lt;</code>和<code>&gt;</code>过滤掉了。</p>\n<h3 id=\"0x02-3\"><a href=\"#0x02-3\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>查看后端源码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223213443286.png\" alt=\"image-20220223213443286\"></p>\n<p>源码将<code>&lt;</code>和<code>&gt;</code>都替换为空。</p>\n<h3 id=\"0x03-2\"><a href=\"#0x03-2\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>尝试使用<code>&#39;onclick=&#39;alert(/xss/)</code>注入，原样输出：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223214243971.png\" alt=\"image-20220223214243971\"></p>\n<h3 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>查看源码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223214349139.png\" alt=\"image-20220223214349139\"></p>\n<p>双引号闭合；</p>\n<p>改为双引号继续注入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击输入框：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223214604593.png\" alt=\"image-20220223214604593\"></p>\n<h2 id=\"Level-5（-javascript伪协议）\"><a href=\"#Level-5（-javascript伪协议）\" class=\"headerlink\" title=\"Level-5（ javascript伪协议）\"></a>Level-5（ javascript伪协议）</h2><p>###0x00</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223214833255.png\" alt=\"image-20220223214833255\"></p>\n<h3 id=\"0x01-4\"><a href=\"#0x01-4\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>尝试注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223215057564.png\" alt=\"image-20220223215057564\"></p>\n<p>查看源码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223215024469.png\" alt=\"image-20220223215024469\"></p>\n<p>这里将<code>script</code>进行了转化。</p>\n<h3 id=\"0x02-4\"><a href=\"#0x02-4\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>查看后端源码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223215249518.png\" alt=\"image-20220223215249518\"></p>\n<p>将<code>&lt;script</code>替换为了<code>&lt;scr_ipt</code>导致浏览器无法解析JS代码；还将<code>on</code>替换为了<code>o_n</code>，这意味着构造标签事件就不能用了。</p>\n<h3 id=\"0x03-3\"><a href=\"#0x03-3\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>试着改变大小写是否能绕过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;Onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击输入框后无反应，绕过失败。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223220126030.png\" alt=\"image-20220223220126030\"></p>\n<p>由于源码中将输入的参数值都进行了小写转换，导致绕过失败。</p>\n<h3 id=\"0x04-2\"><a href=\"#0x04-2\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>既然无法通过<code>&lt;script&gt;</code>标签或触发事件来执行js代码的话，那么可以换一个标</p>\n<p>签来执行js代码。</p>\n<p>构造以下payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;&gt;&lt;a href&#x3D;&#39;javascript:alert(1)&#39;&gt;&lt;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击<code>&lt;&quot;&quot;&gt;</code>，过关：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223220613689.png\" alt=\"image-20220223220613689\"></p>\n<h2 id=\"Level-6（大小写混合绕过）\"><a href=\"#Level-6（大小写混合绕过）\" class=\"headerlink\" title=\"Level-6（大小写混合绕过）\"></a>Level-6（大小写混合绕过）</h2><h3 id=\"0x00-3\"><a href=\"#0x00-3\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223220911051.png\" alt=\"image-20220223220911051\"></p>\n<h3 id=\"0x01-5\"><a href=\"#0x01-5\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>尝试注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里还是对<code>script</code>进行了处理：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223221104984.png\" alt=\"image-20220223221104984\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223221051582.png\" alt=\"image-20220223221051582\"></p>\n<h3 id=\"0x02-5\"><a href=\"#0x02-5\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>查看后端代码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223221243867.png\" alt=\"image-20220223221243867\"></p>\n<p>可以看到，这里过滤了<code>src</code>，<code>data</code>和<code>href</code>等标签。</p>\n<p>源码中<code>src</code>主要是<code>&lt;img&gt;</code>标签的属性：</p>\n<p>正常的引用图 片就是将待引用图片的地址赋值给src属性。但是在js中如果src属性的值不正常或者无法 访问到时就可以触发一个<code>onerror</code>事件来执行js代码。</p>\n<p><code>&lt;img&gt;</code>标签代码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;img src&#x3D;111 onerror&#x3D;alert(&#39;xss&#39;)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h3 id=\"0x03-4\"><a href=\"#0x03-4\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>源码中只是将标签进行了转化，转换的是小写字符，那这里试试大小写混合是否能绕过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;&gt;&lt;a HrEf&#x3D;javascript:alert(&#x2F;xss&#x2F;)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击<code>&quot;&gt;</code>，可以看到绕过成功：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223222324576.png\" alt=\"image-20220223222324576\"></p>\n<h2 id=\"Level-7（双写绕过）\"><a href=\"#Level-7（双写绕过）\" class=\"headerlink\" title=\"Level-7（双写绕过）\"></a>Level-7（双写绕过）</h2><h3 id=\"0x00-4\"><a href=\"#0x00-4\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>尝试注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里直接将<code>script</code>替换为空：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223222915968.png\" alt=\"image-20220223222915968\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223222902480.png\" alt=\"image-20220223222902480\"></p>\n<h3 id=\"0x01-6\"><a href=\"#0x01-6\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>尝试：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;&gt;&lt;a HrEf&#x3D;javascript:alert(&#x2F;xss&#x2F;)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>herf被过滤，大小写混合失败，应该是对大写字母进行了强制转换。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223223336761.png\" alt=\"image-20220223223336761\"></p>\n<h3 id=\"0x02-6\"><a href=\"#0x02-6\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>查看源码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223223513738.png\" alt=\"image-20220223223513738\"></p>\n<p>强制转化为小写字母，过滤了<code>script</code>等标签。</p>\n<h3 id=\"0x03-5\"><a href=\"#0x03-5\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>由于对<code>script</code>等标签只过滤了一次，双写<code>herf</code>和<code>script</code>进行绕过尝试：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;&gt;&lt;a hrhrefef&#x3D;javasscriptcript:alert(&#x2F;xss&#x2F;)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击<code>&quot;&gt;</code>进行绕过：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223224256542.png\" alt=\"image-20220223224256542\"></p>\n<h2 id=\"Level-8（编码绕过）\"><a href=\"#Level-8（编码绕过）\" class=\"headerlink\" title=\"Level-8（编码绕过）\"></a>Level-8（编码绕过）</h2><h3 id=\"0x00-5\"><a href=\"#0x00-5\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223224406222.png\" alt=\"image-20220223224406222\"></p>\n<h3 id=\"0x01-7\"><a href=\"#0x01-7\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>点击友情链接后：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223224742388.png\" alt=\"image-20220223224742388\"></p>\n<h3 id=\"0x02-7\"><a href=\"#0x02-7\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>查看源码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223224821203.png\" alt=\"image-20220223224821203\"></p>\n<p>发现<code>script</code>被替换了，导致访问不了。</p>\n<p>查看后端代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223225010067.png\" alt=\"image-20220223225010067\"></p>\n<p>强制转换了小写，过滤了<code>script</code>等标签，还将<code>&quot;</code>替换为<code>&amp;quot</code>。</p>\n<h3 id=\"0x03-6\"><a href=\"#0x03-6\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>尝试编码绕过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">编码前：\njavascript:alert(&#x2F;xss&#x2F;)\n\n编码后：\n&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#47;&amp;#120;&amp;#115;&amp;#115;&amp;#47;&amp;#41;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>点击<code>友情链接</code>：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223230847318.png\" alt=\"image-20220223230847318\"></p>\n<h2 id=\"Level-9（检测关键字）\"><a href=\"#Level-9（检测关键字）\" class=\"headerlink\" title=\"Level-9（检测关键字）\"></a>Level-9（检测关键字）</h2><h3 id=\"0x00-6\"><a href=\"#0x00-6\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>尝试注入：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>源码显示链接不合法，这里可以猜测后端代码对链接进行了检查。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223231257625.png\" alt=\"image-20220223231257625\"></p>\n<h3 id=\"0x01-8\"><a href=\"#0x01-8\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>查看源代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223231530383.png\" alt=\"image-20220223231530383\"></p>\n<p><strong>strpos() 函数</strong>：查找字符串在另一字符串中第一次出现的位置。</p>\n<p>源码中过滤完各种关键字后会对链接使用<code>strpos()</code>函数检查是否含有<code>http://</code>字段，若没有则输出链接不合法。那这里的思路就是：在注入的语句中加入<code>http://</code>字段即可。</p>\n<h3 id=\"0x02-8\"><a href=\"#0x02-8\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>这里使用<code>编码+//http://baidu.com</code>进行绕过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#47;&amp;#120;&amp;#115;&amp;#115;&amp;#47;&amp;#41;&#x2F;&#x2F;http:&#x2F;&#x2F;baidu.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223232734645.png\" alt=\"image-20220223232734645\"></p>\n<p>payload解析：</p>\n<p>由于需要触发JS代码，编码后需要加入<code>//</code>注释符注释掉后面的链接地址，若不加<code>//</code>则会导致触发JS代码失败，而源码中的<code>strpod()</code>函数只是检查字符串中是否带有<code>http://</code>字段。</p>\n<h2 id=\"Level-10（隐藏信息）\"><a href=\"#Level-10（隐藏信息）\" class=\"headerlink\" title=\"Level-10（隐藏信息）\"></a>Level-10（隐藏信息）</h2><h3 id=\"0x00-7\"><a href=\"#0x00-7\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223233518335.png\" alt=\"image-20220223233518335\"></p>\n<p>可以看到这里与上面几关不同的是：没有输入框。</p>\n<h3 id=\"0x01-9\"><a href=\"#0x01-9\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>右键查看源代码得知，有三个隐藏的表单：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223233938586.png\" alt=\"image-20220223233938586\"></p>\n<h3 id=\"0x02-9\"><a href=\"#0x02-9\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>首先测试以下看看效果：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xss</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223234131443.png\" alt=\"image-20220223234131443\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223234439823.png\" alt=\"image-20220223234439823\"></p>\n<p>只是接收的参数值改变了。</p>\n<p>但这里有三个<code>&lt;input&gt;标</code>签的话，也就意味着是三个参数。</p>\n<p>试试修改<code>type</code>类型试试。</p>\n<h3 id=\"0x03-7\"><a href=\"#0x03-7\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>这里随便将三个hidden字段中的其中一个改为text即可，都可出现输入框：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223234641082.png\" alt=\"image-20220223234641082\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223234705362.png\" alt=\"image-20220223234705362\"></p>\n<h3 id=\"0x04-3\"><a href=\"#0x04-3\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>由于没有提交表单的按钮，这里只能通过构造标签事件来进行触发JS代码：</p>\n<p>payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">type&#x3D;&quot;text&quot; onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223235457699.png\" alt=\"image-20220223235457699\"></p>\n<p>点击输入框：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223235449192.png\" alt=\"image-20220223235449192\"></p>\n<h3 id=\"0x05-1\"><a href=\"#0x05-1\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>分析下后端代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220223235651965.png\" alt=\"image-20220223235651965\"></p>\n<p>可以看到是第三个字段<code>t_sort</code>接收参数值，之后将<code>&lt;</code>和<code>&gt;</code>替换为<code>空</code>，然后在<code>value</code>字段处接收处理过后的参数值输出。</p>\n<h2 id=\"Level-11（Referer）\"><a href=\"#Level-11（Referer）\" class=\"headerlink\" title=\"Level-11（Referer）\"></a>Level-11（Referer）</h2><h3 id=\"0x00-8\"><a href=\"#0x00-8\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224105752344.png\" alt=\"image-20220224105752344\"></p>\n<h3 id=\"0x01-10\"><a href=\"#0x01-10\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>查看源码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224105817042.png\" alt=\"image-20220224105817042\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224105844674.png\" alt=\"image-20220224105844674\"></p>\n<p>同样，和第10关大致相同，但这里出现了请求来源的函数；</p>\n<p><code>$_SERVER[&#39;HTTP_REFERER&#39;]</code>：链接到当前页面的前一页面的 URL 地址。</p>\n<p>这里应该是通过修改请求来源达到插入xss语句。</p>\n<h3 id=\"0x02-10\"><a href=\"#0x02-10\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>使用第10关的方式同样也过关了，但这关的本意应该不是在这里。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224110352001.png\" alt=\"image-20220224110352001\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224110339373.png\" alt=\"image-20220224110339373\"></p>\n<h3 id=\"0x03-8\"><a href=\"#0x03-8\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>抓个包，修改请求来源进行插入xss语句：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224110844783.png\" alt=\"image-20220224110844783\"></p>\n<h3 id=\"0x04-4\"><a href=\"#0x04-4\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>value接收到参数值后将<code>&lt;</code>和<code>&gt;</code>进行了替换为<code>空</code>：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224111147386.png\" alt=\"image-20220224111147386\"></p>\n<h3 id=\"0x05-2\"><a href=\"#0x05-2\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>构造事件标签进行绕过：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Referer: &quot;onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot; type&#x3D;&quot;text&quot;&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224112434015.png\" alt=\"image-20220224112434015\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224112219377.png\" alt=\"image-20220224112219377\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224112202515.png\" alt=\"image-20220224112202515\"></p>\n<h2 id=\"Level-12（User-agent）\"><a href=\"#Level-12（User-agent）\" class=\"headerlink\" title=\"Level-12（User-agent）\"></a>Level-12（User-agent）</h2><h3 id=\"0x00-9\"><a href=\"#0x00-9\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224112551614.png\" alt=\"image-20220224112551614\"></p>\n<h3 id=\"0x01-11\"><a href=\"#0x01-11\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>源代码这里可以看到有<code>User-Agent</code>字段，后端代码应该有获取这个字段的函数。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224112539875.png\" alt=\"image-20220224112539875\"></p>\n<p>那这里的思路和第11关差不多。</p>\n<h3 id=\"0x02-11\"><a href=\"#0x02-11\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>抓包修改<code>User-Agent</code>的值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent: &quot;onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot; type&#x3D;&quot;text&quot;&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114037609.png\" alt=\"image-20220224114037609\"></p>\n<h3 id=\"0x03-9\"><a href=\"#0x03-9\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>点击输入框：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114105012.png\" alt=\"image-20220224114105012\"></p>\n<h2 id=\"Level-13（Cookie）\"><a href=\"#Level-13（Cookie）\" class=\"headerlink\" title=\"Level-13（Cookie）\"></a>Level-13（Cookie）</h2><h3 id=\"0x00-10\"><a href=\"#0x00-10\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114218153.png\" alt=\"image-20220224114218153\"></p>\n<p>###0x01</p>\n<p>查看源码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114205898.png\" alt=\"image-20220224114205898\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114305388.png\" alt=\"image-20220224114305388\"></p>\n<p>后端源码中获取的是<code>cookie</code>值，在<code>t_cook</code>处进行输出；原理和前两关一样。</p>\n<h3 id=\"0x02-12\"><a href=\"#0x02-12\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>抓包修改<code>cookie</code>值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Cookie: user&#x3D;&quot;onclick&#x3D;&quot;alert(&#x2F;xss&#x2F;)&quot; type&#x3D;&quot;text&quot;&#x2F;&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114826582.png\" alt=\"image-20220224114826582\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114855684.png\" alt=\"image-20220224114855684\"></p>\n<h3 id=\"0x03-10\"><a href=\"#0x03-10\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>点击输入框：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220224114918848.png\" alt=\"image-20220224114918848\"></p>\n<h2 id=\"Level-14\"><a href=\"#Level-14\" class=\"headerlink\" title=\"Level-14\"></a>Level-14</h2><h3 id=\"0x00-11\"><a href=\"#0x00-11\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>本关因iframe调用的文件地址失效，无法进行测试。要考的应该是通过修改iframe调用的文件来实现xss注入。</p>\n<h2 id=\"Level-15（ng-include）\"><a href=\"#Level-15（ng-include）\" class=\"headerlink\" title=\"Level-15（ng-include）\"></a>Level-15（ng-include）</h2><h3 id=\"0x00-12\"><a href=\"#0x00-12\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226180941907.png\" alt=\"image-20220226180941907\"></p>\n<h3 id=\"0x01-12\"><a href=\"#0x01-12\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>查看下源码，发现有JS文件和一个<code>ng-include:</code>字符串：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226181109598.png\" alt=\"image-20220226181109598\"></p>\n<p>后端源码中参数是通过get方式获取src进行传递：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226181403441.png\" alt=\"image-20220226181403441\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">AngularJS： 是一个 **JavaScript 框架**。它可通过 &#96;&lt;script&gt;&#96; 标签添加到 HTML 页面。\n\nAngularJS指令 是以 **ng** 作为前缀的 HTML 属性。\n\nAngularJS ng-include 指令：用于包含外部的 HTML 文件；包含的内容将作为指定元素的子节点；ng-include属性的值可以是一个表达式，返回一个文件名。\n默认情况下，包含的文件需要包含在同一个域名下。\n值得注意的是：\n    ng-include,如果单纯指定地址，必须要加引号\n\n    ng-include,加载外部html，script标签中的内容不执行\n\n    ng-include,加载外部html中含有style标签样式可以识别<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>具体用法参考：</p>\n<p><a href=\"https://www.runoob.com/angularjs/angularjs-reference.html\">https://www.runoob.com/angularjs/angularjs-reference.html</a></p>\n<p>通俗点来说：<code>ng-include</code>其作用相当于php的include函数。那这关的思路就是通过传入包含xss漏洞的文件进行触发xss。</p>\n<h3 id=\"0x02-13\"><a href=\"#0x02-13\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>那这里利用这两点： </p>\n<p>1、ng-include,如果单纯指定地址，必须要加引号</p>\n<p>2、包含外部的 HTML 文件</p>\n<p>进行攻击；既然可以包含外部的html文件，将前面几关的其中一个文件包含进来进行触发xss漏洞。</p>\n<p>构造payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#39;level1.php?name&#x3D;&lt;a href&#x3D;&quot;javascript:alert(&#x2F;xss&#x2F;)&quot;&gt;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226183606798.png\" alt=\"image-20220226183606798\"></p>\n<h3 id=\"0x03-11\"><a href=\"#0x03-11\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>点击<code>payload的长度:34</code>：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226183712065.png\" alt=\"image-20220226183712065\"></p>\n<h2 id=\"Level-16（空格实体转义）\"><a href=\"#Level-16（空格实体转义）\" class=\"headerlink\" title=\"Level-16（空格实体转义）\"></a>Level-16（空格实体转义）</h2><h3 id=\"0x00-13\"><a href=\"#0x00-13\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226183853226.png\" alt=\"image-20220226183853226\"></p>\n<h3 id=\"0x01-13\"><a href=\"#0x01-13\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>先修改下参数值看看，参数值改变：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226183919093.png\" alt=\"image-20220226183919093\"></p>\n<h3 id=\"0x02-14\"><a href=\"#0x02-14\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>看下源码：<br><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226184025078.png\" alt=\"image-20220226184025078\"></p>\n<p>可以看到将<code>script，/，空格</code>进行了过滤，其中空格进行了两次过滤。</p>\n<h3 id=\"0x03-12\"><a href=\"#0x03-12\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>使用事件型注入+替换空格进行尝试：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;img%0Asrc&#x3D;?%0Aonerror&#x3D;alert(&#39;xss&#39;)&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>由于在html里，回车（%0A）是可以代替空格的</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226185747219.png\" alt=\"image-20220226185747219\"></p>\n<h3 id=\"0x04-5\"><a href=\"#0x04-5\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>为什么不使用这个payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a href&#x3D;onclick&#x3D;&quot;alert(1)&quot;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<h1 id=\"Level-17（参数拼接）\"><a href=\"#Level-17（参数拼接）\" class=\"headerlink\" title=\"Level-17（参数拼接）\"></a>Level-17（参数拼接）</h1><h3 id=\"0x00-14\"><a href=\"#0x00-14\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>可以看到地址栏参数有些略微不同，应该是由arg01和arg02这两个字段传参：</p>\n<p>（这里由于不支持swf文件格式，文件无法显示）</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226192406157.png\" alt=\"image-20220226192406157\"></p>\n<h3 id=\"0x01-14\"><a href=\"#0x01-14\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>先随便传个参试试：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226191816389.png\" alt=\"image-20220226191816389\"></p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226191749683.png\" alt=\"image-20220226191749683\"></p>\n<p>源代码中接收参数的src发生了变化，这里<code>xsf01.swf</code>需要值得注意。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226192720196.png\" alt=\"image-20220226192720196\"></p>\n<p><strong>swf</strong>：swf文件通常也被称为Flash文件。SWF格式文件广泛用于创建吸引人的应用程序，它们包含丰富的视频、声音、图形和动画。</p>\n<h3 id=\"0x02-15\"><a href=\"#0x02-15\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>这里根据源码使用<code>事件型</code>进行注入：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">onclick&#x3D;&quot;alert(&#39;xss&#39;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226193655774.png\" alt=\"image-20220226193655774\"></p>\n<p>源码中成功插入xss语句，由于插件原因，不能够进行点击执行。</p>\n<h2 id=\"Level-18（参数拼接）\"><a href=\"#Level-18（参数拼接）\" class=\"headerlink\" title=\"Level-18（参数拼接）\"></a>Level-18（参数拼接）</h2><h3 id=\"0x00-15\"><a href=\"#0x00-15\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>与第17关一样，环境有问题，思路也一样。</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226195342043.png\" alt=\"image-20220226195342043\"></p>\n<h3 id=\"0x01-15\"><a href=\"#0x01-15\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>patload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">onmouse&#x3D;alert(&#x2F;xss&#x2F;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226195545905.png\" alt=\"image-20220226195545905\"></p>\n<h2 id=\"Level-19-20（Flash-XSS）\"><a href=\"#Level-19-20（Flash-XSS）\" class=\"headerlink\" title=\"Level-19-20（Flash XSS）\"></a>Level-19-20（Flash XSS）</h2><h3 id=\"0x00-16\"><a href=\"#0x00-16\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>基于Flash的xss漏洞。</p>\n<p>19关查看源码得知这里src的值使用双引号进行了包含</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226195807293.png\" alt=\"image-20220226195807293\"></p>\n<h3 id=\"0x01-16\"><a href=\"#0x01-16\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>后端代码：</p>\n<p><img src=\"/post/xss%E8%B7%A8%E7%AB%99-xss-labs.htm/image-20220226200202047.png\" alt=\"image-20220226200202047\"></p>\n<p>一般思路有双引号肯定要进行闭合，最后触发js代码，但这里有<code>htmlspecialchars()</code>函数进行过滤，显然闭合是行不通的。</p>\n<p>flash xss先告一段落，有时间再深入研究。</p>\n<h3 id=\"Flash产生的xss问题主要有两种方式：\"><a href=\"#Flash产生的xss问题主要有两种方式：\" class=\"headerlink\" title=\"Flash产生的xss问题主要有两种方式：\"></a>Flash产生的xss问题主要有两种方式：</h3><p>1、加载第三方资源</p>\n<p>2、与javascript通信引发XSS。</p>\n<p>常见的可触发xss的危险函数有：</p>\n<p><code>getURL</code> <code>navigateToURL</code> <code>ExternalInterface.call</code> <code>htmlText loadMovie</code>等</p>\n<p>要想知道这一关的是不是属于flash xss，只需要对引用的swf文件</p>\n<p>进行反编译然后进行源码分析。</p>\n<p>这里我说使用的对此类文件进行反编译的工具是<code>jpexs-decompiler</code>。</p>\n<p>项目地址:<a href=\"https://github.com/jindrapetrik/jpexs-decompiler\">https://github.com/jindrapetrik/jpexs-decompiler</a></p>\n<p>Flash XSS参考文章：<a href=\"https://baynk.blog.csdn.net/article/details/103213877\">https://baynk.blog.csdn.net/article/details/103213877</a></p>\n","text":"[TOC] 前言记录一下xss靶场，xss-labs通关过程。 ##Level-1（无过滤） ###0x00 可以看到给的提示是payload长度为4，地址栏中get方式的name&#x3D;test与欢迎用户test相对应，试着改一下name的参数值。 0x01修改为test&...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"},{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-1\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-1\"><span class=\"toc-text\">0x02</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-3%EF%BC%88%E5%8D%95%E5%BC%95%E5%8F%B7%E9%97%AD%E5%90%88-htmlspecialchar-%E5%87%BD%E6%95%B0%EF%BC%89\"><span class=\"toc-text\">Level-3（单引号闭合+htmlspecialchar()函数）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-2\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-2\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-1\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-4%EF%BC%88%E5%8F%8C%E5%BC%95%E5%8F%B7%E9%97%AD%E5%90%88-%E6%B7%BB%E5%8A%A0%E4%BA%8B%E4%BB%B6%EF%BC%89\"><span class=\"toc-text\">Level-4（双引号闭合+添加事件）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-2\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-3\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-3\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-2\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-5%EF%BC%88-javascript%E4%BC%AA%E5%8D%8F%E8%AE%AE%EF%BC%89\"><span class=\"toc-text\">Level-5（ javascript伪协议）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-4\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-4\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-3\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-2\"><span class=\"toc-text\">0x04</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-6%EF%BC%88%E5%A4%A7%E5%B0%8F%E5%86%99%E6%B7%B7%E5%90%88%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Level-6（大小写混合绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-3\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-5\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-5\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-4\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-7%EF%BC%88%E5%8F%8C%E5%86%99%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Level-7（双写绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-4\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-6\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-6\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-5\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-8%EF%BC%88%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%89\"><span class=\"toc-text\">Level-8（编码绕过）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-5\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-7\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-7\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-6\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-9%EF%BC%88%E6%A3%80%E6%B5%8B%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%89\"><span class=\"toc-text\">Level-9（检测关键字）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-6\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-8\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-8\"><span class=\"toc-text\">0x02</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-10%EF%BC%88%E9%9A%90%E8%97%8F%E4%BF%A1%E6%81%AF%EF%BC%89\"><span class=\"toc-text\">Level-10（隐藏信息）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-7\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-9\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-9\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-7\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-3\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05-1\"><span class=\"toc-text\">0x05</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-11%EF%BC%88Referer%EF%BC%89\"><span class=\"toc-text\">Level-11（Referer）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-8\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-10\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-10\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-8\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-4\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05-2\"><span class=\"toc-text\">0x05</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-12%EF%BC%88User-agent%EF%BC%89\"><span class=\"toc-text\">Level-12（User-agent）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-9\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-11\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-11\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-9\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-13%EF%BC%88Cookie%EF%BC%89\"><span class=\"toc-text\">Level-13（Cookie）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-10\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-12\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-10\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-14\"><span class=\"toc-text\">Level-14</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-11\"><span class=\"toc-text\">0x00</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-15%EF%BC%88ng-include%EF%BC%89\"><span class=\"toc-text\">Level-15（ng-include）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-12\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-12\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-13\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-11\"><span class=\"toc-text\">0x03</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-16%EF%BC%88%E7%A9%BA%E6%A0%BC%E5%AE%9E%E4%BD%93%E8%BD%AC%E4%B9%89%EF%BC%89\"><span class=\"toc-text\">Level-16（空格实体转义）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-13\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-13\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-14\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-12\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-5\"><span class=\"toc-text\">0x04</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Level-17%EF%BC%88%E5%8F%82%E6%95%B0%E6%8B%BC%E6%8E%A5%EF%BC%89\"><span class=\"toc-text\">Level-17（参数拼接）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-14\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-14\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-15\"><span class=\"toc-text\">0x02</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-18%EF%BC%88%E5%8F%82%E6%95%B0%E6%8B%BC%E6%8E%A5%EF%BC%89\"><span class=\"toc-text\">Level-18（参数拼接）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-15\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-15\"><span class=\"toc-text\">0x01</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Level-19-20%EF%BC%88Flash-XSS%EF%BC%89\"><span class=\"toc-text\">Level-19-20（Flash XSS）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-16\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-16\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Flash%E4%BA%A7%E7%94%9F%E7%9A%84xss%E9%97%AE%E9%A2%98%E4%B8%BB%E8%A6%81%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">Flash产生的xss问题主要有两种方式：</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"xss过滤的那些事","uid":"42f7b323120f691383c67796cc3bfd08","slug":"xss过滤的那些事","date":"2022-02-22T09:20:10.000Z","updated":"2022-05-30T14:42:00.129Z","comments":true,"path":"api/articles/xss过滤的那些事.json","keywords":null,"cover":null,"text":"前言由于实战当中避免不了拦截xss跨站攻击，由此需要了解过滤xss的方式有哪些，以及去如何绕过。 Http OnlyHttpOnly是包含在http返回头Set-Cookie里面的一个附加的flag，所以它是后端服务器对cookie设置的一个附加的属性，在生成cookie时使用H...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"XSS基础","uid":"2ae9b590ca3c1c2667fd185e3a54758c","slug":"XSS基础","date":"2022-02-20T13:42:18.000Z","updated":"2022-05-30T14:42:10.426Z","comments":true,"path":"api/articles/XSS基础.json","keywords":null,"cover":[],"text":"前言XSS跨站脚本攻击： XSS原理恶意攻击者在web页面中会插入一些恶意的script代码。当用户浏览该页面的时候，那么嵌入到web页面中script代码会执行，因此会达到恶意攻击用户的目的。属于前端漏洞。 （若有与对方交互的地方，就可能会有攻击点） XSS分类1、反射型（非持...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}