{"title":"逻辑越权-找回机制与接口爆破","uid":"539bd4c95e28f22aa63a4256033042d5","slug":"逻辑越权-找回机制与接口爆破","date":"2022-06-01T10:04:03.000Z","updated":"2022-06-03T08:48:22.128Z","comments":true,"path":"api/articles/逻辑越权-找回机制与接口爆破.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p><strong>1.找回重置机制</strong></p>\n<p>客户端回显：验证码在客户端的浏览器或数据包中可以看到</p>\n<p>Response状态值：页面通过该值返回输入的验证码的对错，可以修改数据包中的值，有回复的状态值如0&#x2F;1，我们可以更改状态值来实现绕过</p>\n<p>验证码爆破：如果验证码范围不大，验证码有效时间足够，没有次数限制，则可以尝试</p>\n<p>找回流程绕过：发送验证码-验证-重置密码，绕过验证码验证，直接请求下一步（找回成功后会跳转到另外一个页面，先通过一个正常用户去获取跳转的URL和数据包，再换一个用户去访问第三步（跳过验证 ））</p>\n<p><strong>2.接口调用乱用</strong></p>\n<p>短信轰炸，来电轰炸(呼死你原理，有些网站有发送数据包的功能，截获网站验证码的数据包，然后利用软件或者程序去进行批量测试，即调用别人网站的接口来实现短信轰炸)</p>\n<h2 id=\"0x01-绑定手机验证码逻辑-Rep-状态值篡改-实例\"><a href=\"#0x01-绑定手机验证码逻辑-Rep-状态值篡改-实例\" class=\"headerlink\" title=\"0x01 绑定手机验证码逻辑-Rep 状态值篡改-实例\"></a>0x01 绑定手机验证码逻辑-Rep 状态值篡改-实例</h2><h3 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>靶场：夜神模拟器</p>\n<p>攻击机：windows10</p>\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>先在模拟器中修改代理和端口，在BP中设置代理及监听其端口</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602100107779.png\" alt=\"image-20220602100107779\"></p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>点击福利期货app我的主页-&#x3D;-个人信息—修改密码</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602100256367.png\" alt=\"image-20220602100256367\"></p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220603164512722.png\" alt=\"image-20220603164512722\"></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>在修改密码中任意输入短信验证码进行抓包，得到验证码错误的回复包</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602101350143.png\" alt=\"image-20220602101350143\"></p>\n<p>放包之后可以看到短信验证码不正确</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602101550141.png\" alt=\"image-20220602101550141\"></p>\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>正常获取验证码，抓取正确验证码的回复包</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602101834177.png\" alt=\"image-20220602101834177\"></p>\n<p>可以观察到正确验证码的回复包是和错误验证码的回复包是有区别的</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602101914410.png\" alt=\"image-20220602101914410\"></p>\n<h3 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>再任意输入验证码抓包，利用BP通过右键do intercept&gt;response to the request，截获返回数据包，放包，将错误的回显改为正确的回显放包</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602102255849.png\" alt=\"image-20220602102255849\"></p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220603164728024.png\" alt=\"image-20220603164728024\"></p>\n<p>错误回显包，更改正确回显包</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602102421586.png\" alt=\"image-20220602102421586\"></p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220603164822043.png\" alt=\"image-20220603164822043\"></p>\n<h3 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h3><p>直接跳转修改密码页面</p>\n<p><img src=\"/post/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83-%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E4%B8%8E%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4.htm/image-20220602102657991.png\" alt=\"image-20220602102657991\"></p>\n<h3 id=\"0x07-总结\"><a href=\"#0x07-总结\" class=\"headerlink\" title=\"0x07 总结\"></a>0x07 总结</h3><p>重置密码的步骤：1.发送验证码2.验证3.重置密码</p>\n<p>流程绕过原理：1直接—&gt;到3，跳过了验证</p>\n<p>测试：将3个数据包都抓到，在1数据包到2数据包的时候，用工具拦截，直接加载第三个界面 。</p>\n<p>类似的网站类的验证码情况大致相同；</p>\n<p>主要注意一下：是本地回显验证还是服务端回显验证。</p>\n<h2 id=\"0x02-验证码爆破\"><a href=\"#0x02-验证码爆破\" class=\"headerlink\" title=\"0x02 验证码爆破\"></a>0x02 验证码爆破</h2><p><strong>原理分析：</strong></p>\n<p>抓取数据包，将code发送爆破（如果是数字，就可以直接爆破，如果是英文，就要用字典）</p>\n<p>前提条件：1.验证码的存活时间2.验证码的输入次数限制3.有些短信验证码输入一次就改一次（就没法爆破）</p>\n<p>如果是直接显示的图片验证码（这里要识别验证码（插件自动识别））（如果是拖动或者</p>\n<p>识别的验证码就更加复杂）</p>\n<p>（靶场搭建了两天，总是环境有问题，都不能进行注册，之后遇到再补充吧）</p>\n","text":"0x001.找回重置机制 客户端回显：验证码在客户端的浏览器或数据包中可以看到 Response状态值：页面通过该值返回输入的验证码的对错，可以修改数据包中的值，有回复的状态值如0&#x2F;1，我们可以更改状态值来实现绕过 验证码爆破：如果验证码范围不大，验证码有效时间足够，没...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-%E7%BB%91%E5%AE%9A%E6%89%8B%E6%9C%BA%E9%AA%8C%E8%AF%81%E7%A0%81%E9%80%BB%E8%BE%91-Rep-%E7%8A%B6%E6%80%81%E5%80%BC%E7%AF%A1%E6%94%B9-%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">0x01 绑定手机验证码逻辑-Rep 状态值篡改-实例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x07-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x07 总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-%E9%AA%8C%E8%AF%81%E7%A0%81%E7%88%86%E7%A0%B4\"><span class=\"toc-text\">0x02 验证码爆破</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"逻辑越权-验证码与Token及接口","uid":"e9b18ef1b67c7f0e9290c6534e851593","slug":"逻辑越权-验证码与Token及接口","date":"2022-06-02T08:18:09.000Z","updated":"2022-06-03T11:11:24.010Z","comments":true,"path":"api/articles/逻辑越权-验证码与Token及接口.json","keywords":null,"cover":[],"text":"0x00脑图 0x011、验证码安全 分类: 图片，手机或邮箱，语音，视频，操作等原理: 验证生成或验证过程中的逻辑问题危害: 账户权限泄漏，短信轰炸，遍历，任意用户操作等漏洞: 客户端回显，验证码复用，验证码爆破，绕过等—验证码爆破：没有次数限制，验证码有效时间内不变 —验证码...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"逻辑越权靶场--后台及订单支付类","uid":"329a24a72a2314bc7146a2672d8bedf5","slug":"逻辑越权靶场-后台及订单支付类","date":"2022-06-01T01:40:29.000Z","updated":"2022-06-01T07:22:06.683Z","comments":true,"path":"api/articles/逻辑越权靶场-后台及订单支付类.json","keywords":null,"cover":[],"text":"0x00 后台登陆账号密码爆破测试0x00靶场：ZBlog博客网站后台密码爆破 攻击机：windows10 0x01利用admin，admin抓取登录时的数据包： 可以看到密码是经过加密的，类型应该是md5。 0x02尝试利用BP爆破模块进行密码的暴力破解； 由于密码是经过加密的...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/categories/逻辑越权.json"}],"tags":[{"name":"逻辑越权","slug":"逻辑越权","count":6,"path":"api/tags/逻辑越权.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}