{"title":"XXE和XML-利用检测绕过","uid":"f59b4912b599c61d7ef7202907a014a6","slug":"XXE和XML-利用检测绕过","date":"2022-06-05T09:15:30.000Z","updated":"2022-06-06T01:08:06.472Z","comments":true,"path":"api/articles/XXE和XML-利用检测绕过.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>脑图：<br><img src=\"/post/XXE%E5%92%8CXML-%E5%88%A9%E7%94%A8%E6%A3%80%E6%B5%8B%E7%BB%95%E8%BF%87.htm/XML&XXE.png\" alt=\"XML&amp;XXE\"></p>\n<h2 id=\"0x01-XML简介\"><a href=\"#0x01-XML简介\" class=\"headerlink\" title=\"0x01 XML简介\"></a>0x01 XML简介</h2><p>###0x00</p>\n<p>1、XML指可扩展标记语言，它被设计用来传输和存储数据。（HTML被用来显示数据）<br>2、XML没有预定义的标签，需要自行定义标签<br>3、XML是不作为的，及它不存在任何的行为，只是用来结构化、传输和存储信息<br>4、它仅仅是纯文字<br>5、XML 是独立于软件和硬件的信息传输工具。<br>（更多介绍详见w3school的介绍）</p>\n<p>w3school介绍：</p>\n<p><a href=\"https://www.w3school.com.cn/xml/xml_intro.asp\">https://www.w3school.com.cn/xml/xml_intro.asp</a></p>\n<h3 id=\"0x01-XML结构\"><a href=\"#0x01-XML结构\" class=\"headerlink\" title=\"0x01 XML结构\"></a>0x01 XML结构</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!--声明部分--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>?xml</span> <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">encoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!--文档类型定义部分--></span>\n&lt;! DOCTYPE note[\n\t&lt;!ELEMENT file SYSTEM \"file:///var/passwd\">\n]>\n<span class=\"token comment\">&lt;!--内容部分--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>letter</span> <span class=\"token attr-name\">date</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2021/10/20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>to</span><span class=\"token punctuation\">></span></span>xxx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>to</span><span class=\"token punctuation\">></span></span>\n \t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>from</span><span class=\"token punctuation\">></span></span>gs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>from</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>记得去外滩！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token entity named-entity\" title=\"&file;\">&amp;file;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>letter</span><span class=\"token punctuation\">></span></span>\n\n第2行 是XML声明，它定义了XML的版本（version）和字符编码（encoding）\n第4到6行是文档类型定义（DTD）内容\n第5行引入了外部实体\n第8-13行是内容部分\n第8行的<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>letter</span><span class=\"token punctuation\">></span></span>是根节点，date是它的属性\n第9行到第12行是具体的内容（<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>to</span><span class=\"token punctuation\">></span></span>、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>from</span><span class=\"token punctuation\">></span></span>、<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>），称为子元素\n第12行显示了引入的外部实体\n第13行则是根节点的闭标签<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"0x02-XML语法说明\"><a href=\"#0x02-XML语法说明\" class=\"headerlink\" title=\"0x02 XML语法说明\"></a>0x02 XML语法说明</h3><p>1、每个标签都对应有一个闭合的标签。</p>\n<p>2、XML文档<strong>必须包含根节点</strong>。文档中的所有元素形成了一颗文档树，这颗树从根部开始并扩展到最底端。</p>\n<p>3、上下层级的元素存在父子的关系，同级的为同胞（兄弟姐妹）</p>\n<p>4、所有的元素都可以拥有子元素、文本内容和属性</p>\n<p>5、XML标签大小写敏感</p>\n<p>6、XML标签必须正确的嵌套</p>\n<p>7、XML中的属性需要加引号</p>\n<p>8、XML中的一些特殊字符无法直接在标签内部当作文本使用。比如<code>&lt;message&gt;123 &lt; 321&lt;/message&gt;</code>，此时的<code>&lt;</code>不再是小于号，而会被解析器当作新元素的开始。因此此处需要使用<strong>实体引用</strong>：<code>&amp;lt;</code>。实体引用对照表如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">实体引用</th>\n<th align=\"center\">符号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><code>&amp;lt;</code></td>\n<td align=\"center\">&lt;</td>\n</tr>\n<tr>\n<td align=\"center\"><code>&amp;gt;</code></td>\n<td align=\"center\">&gt;</td>\n</tr>\n<tr>\n<td align=\"center\"><code>&amp;amp;</code></td>\n<td align=\"center\">&amp;</td>\n</tr>\n<tr>\n<td align=\"center\"><code>&amp;apos;</code></td>\n<td align=\"center\">’</td>\n</tr>\n<tr>\n<td align=\"center\"><code>&amp;quot;</code></td>\n<td align=\"center\">“</td>\n</tr>\n</tbody></table>\n<p>参考文章：<br><a href=\"https://blog.csdn.net/weixin_43876438/article/details/120906582\">https://blog.csdn.net/weixin_43876438/article/details/120906582</a></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p><strong>XML文档类型定义包括：</strong><br>内部声明DTD格式：<code>＜!DOCTYPE 根元素［元素声明］＞</code>。<br>引用外部DTD格式：<code>＜!DOCTYPE 根元素 SYSTEM ”文件名 ”＞</code>。<br>在DTD中进行实体声明时，将使用<code>ENTITY</code>关键字来声明 。实体是用于定义引用普通文本或特殊字符的快捷方式的变量。实体可在内部或外部进行声明 。<br>内部声明 实体格式：<code>＜!ENTITY 实体名称 ”实体的值”＞</code>。<br>引用外部 实体格式：<code>＜!ENTITY 实体名称 SYSTEM &quot;URI&quot;＞</code>。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">文档类型定义（DTD）\n&lt;!DOCTYPE Pwn [\n\t&lt;!ENTITY subscribe SYSTEM &quot;secret.txt&quot;&gt;\n]&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p> <strong>DTD（Document Type Definition） 文档类型定义</strong></p>\n<p>定义XML文档的合法构建模块:</p>\n<p><strong>DTD声明</strong><br>内部声明DTD：<code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code><br>引用外部DTD：<code>&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</code>或<code>&lt;!DOCTYPE 根元素 PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;</code><br><strong>DTD实体</strong><br>定义引用普通文本或特殊字符的快捷方式的变量；<br>通用实体：<code>&lt;!ENTITY 实体名 &quot;实体内容&quot;&gt;</code><br>外部通用实体：<code>&lt;!ENTITY 实体名 SYSTEM &quot;URI/URL&quot;&gt;或&lt;!ENTITY 实体名 PUBLIC &quot;public_ID&quot; &quot;URI/URL&quot;&gt;</code><br>通用实体引用：&amp;实体名;<br>参数实体：<code>&lt;!ENTITY % 实体名 &quot;实体内容&quot;&gt;</code>（%后有个空格）<br>外部参数实体：<code>&lt;!ENTITY % 实体名 SYSTEM &quot;URI/URL&quot;&gt;</code><br>参数实体引用：%实体名;<br><strong>参数实体只能在DTD中被引用</strong></p>\n<h3 id=\"0x05-文档元素（XML元素）\"><a href=\"#0x05-文档元素（XML元素）\" class=\"headerlink\" title=\"0x05  文档元素（XML元素）\"></a>0x05  文档元素（XML元素）</h3><p>定义：<code>&lt;!ELEMENT 元素名 元素类型&gt;</code><br> 命名规则：</p>\n<ol>\n<li>名称可以包含字母、数字以及其他的字符；</li>\n<li>名称不能以数字或者标点符号开始；</li>\n<li>名称不能以字母 xml（或者 XML、Xml 等等）开始；</li>\n<li>名称不能包含空格；</li>\n</ol>\n<h2 id=\"0x02-XML和XXE及区别\"><a href=\"#0x02-XML和XXE及区别\" class=\"headerlink\" title=\"0x02 XML和XXE及区别\"></a>0x02 XML和XXE及区别</h2><p><strong>XML和XXE</strong>：</p>\n<p>XML 被设计为传输和存储数据，XML 文档结构包括 XML 声明、DTD 文档类型定义（可选）、文档元素，其焦点是数据的内容，其把数据从 HTML 分离，是独立于软件和硬件的信息传输工具。XXE 漏洞全称XML External Entity Injection，即 xml 外部实体注入漏洞，XXE 漏洞发生在应用程序解析 XML 输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。</p>\n<p><strong>区别</strong>：</p>\n<p>XML 被设计为传输和存储数据，其焦点是数据的内容。</p>\n<p>HTML 被设计用来显示数据，其焦点是数据的外观。</p>\n<p>HTML 旨在显示信息 ，而 XML 旨在传输信息。</p>\n<h2 id=\"0x03-各种脚本类型可使用的协议\"><a href=\"#0x03-各种脚本类型可使用的协议\" class=\"headerlink\" title=\"0x03 各种脚本类型可使用的协议\"></a>0x03 各种脚本类型可使用的协议</h2><table>\n<thead>\n<tr>\n<th align=\"center\">libxml2</th>\n<th align=\"center\">PHP</th>\n<th align=\"center\">Java</th>\n<th align=\"center\">.NET</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">file，http，ftp</td>\n<td align=\"center\">file，http，ftp，php，compress.zlib，compress.bzip2，data，glob，phar</td>\n<td align=\"center\">http，https，ftp，file，jar，netdoc，mailto，gopher *</td>\n<td align=\"center\">file，http，https，ftp</td>\n</tr>\n</tbody></table>\n<h2 id=\"0x04-XXE漏洞\"><a href=\"#0x04-XXE漏洞\" class=\"headerlink\" title=\"0x04 XXE漏洞\"></a>0x04 XXE漏洞</h2><h3 id=\"0x00-危害\"><a href=\"#0x00-危害\" class=\"headerlink\" title=\"0x00 危害\"></a>0x00 危害</h3><ul>\n<li><strong>任意文件读取</strong>。可以配合任意文件上传漏洞实现getshell</li>\n<li>通过某些协议（比如安装expect扩展的PHP环境中）可以实现<strong>远程命令执行</strong></li>\n<li>通过HTTP协议<strong>探测内网端口</strong></li>\n</ul>\n<h3 id=\"0x01-防护\"><a href=\"#0x01-防护\" class=\"headerlink\" title=\"0x01 防护\"></a>0x01 防护</h3><ul>\n<li>使用开发语言提供的禁用外部实体来防止注入</li>\n<li>过滤用户提交的XML数据。比如过滤掉<code>&lt;!DOCTYPE</code>或<code>&lt;!ENTITY</code></li>\n</ul>\n<h3 id=\"0x02-攻击方式\"><a href=\"#0x02-攻击方式\" class=\"headerlink\" title=\"0x02 攻击方式\"></a>0x02 攻击方式</h3><p>方式一，构建如下payload：<code>]&gt;</code></p>\n<p>通过file协议可以实现任意文件读取</p>\n<p>方式二，构建payload：<code>&lt;!DOCTYPE a [&lt;!ENTITY file SYSTEM &quot;http://127.0.0.1:81&quot;&gt;]&gt;</code></p>\n<p>通过HTTP协议可以实现端口探测</p>\n<p>方式三，构建payload：<code>&lt;!DOCTYPE a [&lt;!ENTITY file SYSTEM &quot;expect://whoami&quot;&gt;]&gt;</code></p>\n<p>通过expect协议可以执行系统命令</p>\n<h3 id=\"0x03-漏洞发现\"><a href=\"#0x03-漏洞发现\" class=\"headerlink\" title=\"0x03 漏洞发现\"></a>0x03 漏洞发现</h3><p><strong>利用XXE-labs的学习可以检测发现XXE漏洞。</strong></p>\n<p>在数据包爬行目录时候去发现数据包里面有符合XML数据传输的地方，在传输数据地方插入payload即可。</p>\n<p>##0x05 自动化XXE注入工具</p>\n<p>下载链接：<br><a href=\"https://github.com/enjoiz/XXEinjector\">https://github.com/enjoiz/XXEinjector</a></p>\n<p>参考文章：<br><a href=\"https://www.cnblogs.com/bmjoker/p/9614990.html\">https://www.cnblogs.com/bmjoker/p/9614990.html</a></p>\n","text":"0x00脑图： 0x01 XML简介###0x00 1、XML指可扩展标记语言，它被设计用来传输和存储数据。（HTML被用来显示数据）2、XML没有预定义的标签，需要自行定义标签3、XML是不作为的，及它不存在任何的行为，只是用来结构化、传输和存储信息4、它仅仅是纯文字5、XML...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-XML%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">0x01 XML简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-XML%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">0x01 XML结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-XML%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">0x02 XML语法说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05-%E6%96%87%E6%A1%A3%E5%85%83%E7%B4%A0%EF%BC%88XML%E5%85%83%E7%B4%A0%EF%BC%89\"><span class=\"toc-text\">0x05  文档元素（XML元素）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-XML%E5%92%8CXXE%E5%8F%8A%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">0x02 XML和XXE及区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-%E5%90%84%E7%A7%8D%E8%84%9A%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%8F%AF%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">0x03 各种脚本类型可使用的协议</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-XXE%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">0x04 XXE漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-%E5%8D%B1%E5%AE%B3\"><span class=\"toc-text\">0x00 危害</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-%E9%98%B2%E6%8A%A4\"><span class=\"toc-text\">0x01 防护</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">0x02 攻击方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0\"><span class=\"toc-text\">0x03 漏洞发现</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Vulnhub-XXE靶场","uid":"d6b5c98aeeb32013f5e3f6af5fdb7e80","slug":"Vulnhub-XXE靶场","date":"2022-06-05T14:38:38.000Z","updated":"2022-06-05T16:23:18.119Z","comments":true,"path":"api/articles/Vulnhub-XXE靶场.json","keywords":null,"cover":[],"text":"0x00靶机地址：https://download.vulnhub.com/xxe/XXE.zip 攻击机：Ninjitsu OS 0x01打开靶机 0x02查看攻击机ip地址： 使用nmap扫描网段，查找靶机ip： nmap -sS 192.168.216.1&#x2F;24 ...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"XXE","slug":"XXE","count":4,"path":"api/categories/XXE.json"}],"tags":[{"name":"XXE","slug":"XXE","count":4,"path":"api/tags/XXE.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"反序列化-JAVA","uid":"765364a990a298eaa5bfb6798653b2a8","slug":"反序列化-JAVA","date":"2022-06-05T01:26:42.000Z","updated":"2022-06-05T03:25:14.974Z","comments":true,"path":"api/articles/反序列化-JAVA.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 Java中的API实现位置：Java.io.ObjectOutputStream Java.io.ObjectInputStream 序列化：ObjectOutputStream 类–&gt;writeObject() ​ 注：该方法对参数指定的obj对...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/categories/反序列化.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":5,"path":"api/tags/反序列化.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}