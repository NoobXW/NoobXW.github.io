{"title":"代码审计-CMS靶场","uid":"54d8350a6e513341975c7d9c3662fe93","slug":"代码审计-CMS靶场","date":"2022-06-12T08:33:39.000Z","updated":"2022-06-12T11:18:54.947Z","comments":true,"path":"api/articles/代码审计-CMS靶场.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00-骑士人才招聘系统-SQL注入挖掘\"><a href=\"#0x00-骑士人才招聘系统-SQL注入挖掘\" class=\"headerlink\" title=\"0x00 骑士人才招聘系统-SQL注入挖掘\"></a>0x00 骑士人才招聘系统-SQL注入挖掘</h2><h3 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>靶场：骑士人才招聘系统PHPCMS，3.4版本；</p>\n<p>描述：源码自带过滤机制。</p>\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>使用seay源代码审计系统分析源码：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612164004315.png\" alt=\"image-20220612164004315\"></p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>分析时需要找全局配置文件，一般全局配置文件就会又过滤机制；</p>\n<p>一般全局配置文件则是需要其他问价加载时包含其中，达到过滤机制，因此查找是找到<code>inclde</code></p>\n<p>、<code>common</code>、<code>function</code>这样的文件或者文件夹去查看代码；例如：</p>\n<p>找到common.fun.php文件打开可以看到有过滤机制的代码：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612164626088.png\" alt=\"image-20220612164626088\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612164850024.png\" alt=\"image-20220612164850024\"></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>首先common.fun.php文件先会检查你的php环境魔术引号是否开启：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612165252188.png\" alt=\"image-20220612165252188\"></p>\n<p>如果没打开，就用addslashes过滤，在套用mystrip_tags过滤一次：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612165345610.png\" alt=\"image-20220612165345610\"></p>\n<p>addslashes()函数：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612165609948.png\" alt=\"image-20220612165609948\"></p>\n<p>如果魔术引号开启，直接调用mystrip_tags()字符串进行过滤：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612170248480.png\" alt=\"image-20220612170248480\"></p>\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>如果魔术引号开启，这里就变成了绕过魔术引号的注入；</p>\n<p>绕过魔术引号的的SQL注入：宽字节注入，二次注入；</p>\n<p>这里采用二次注入可以绕过魔术引号的转义，因此需要找到insert和update字段的功能点，一般为注册和修改信息。</p>\n<h3 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>点击会员中心创建新简历，随便填写信息保存下一步：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612172304259.png\" alt=\"image-20220612172304259\"></p>\n<p>从url来看，访问的文件夹路径是<code>/user/personal/personal_resume.php</code>：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612173748210.png\" alt=\"image-20220612173748210\"></p>\n<p>利用seay插件mysql监控，找到resume字段可以看到就是刚才填写的信息，接着update字段不是我们自己更改的信息，因此这里使用二次注入的条件不能够满足，另找功能点。</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612173338683.png\" alt=\"image-20220612173338683\"></p>\n<h3 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h3><p>随便填写保存下一步：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612174441337.png\" alt=\"image-20220612174441337\"></p>\n<p>接着进行mysql监控查看信息，同样update还不是能够进行操作：（必须要update字段自己填写）<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612174639380.png\" alt=\"image-20220612174639380\"></p>\n<h3 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h3><p>继续向下：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612174921365.png\" alt=\"image-20220612174921365\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612174906915.png\" alt=\"image-20220612174906915\"></p>\n<p>可以看到直接进行了update，但这里没有进行insert，不能实现二次注入。</p>\n<h3 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h3><p>随便填写：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612180248993.png\" alt=\"image-20220612180248993\"></p>\n<p>mysql监控，可以看到这里的update出现了可控的字段<code>xiao</code>：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612180458903.png\" alt=\"image-20220612180458903\"></p>\n<p>测试字符是否能被通过：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612180833632.png\" alt=\"image-20220612180833632\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612181004203.png\" alt=\"image-20220612181004203\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">insert字段：INSERT INTO resume_education (&#96;uid&#96;, &#96;pid&#96;, &#96;start&#96;, &#96;endtime&#96;, &#96;school&#96;, &#96;speciality&#96;, &#96;education&#96;, &#96;education_cn&#96;) VALUES (&#39;1&#39;, &#39;1&#39;, &#39;2013\\xC4\\xEA1\\xD4\\xC2&#39;, &#39;2014\\xC4\\xEA2\\xD4\\xC2&#39;, &#39;a\\&#39;&#39;, &#39;xiao&#39;, &#39;68&#39;, &#39;\\xD6\\xD0ר&#39;)\nupdate字段：UPDATE resume SET &#96;photo&#96;&#x3D;&#39;0&#39;, &#96;complete&#96;&#x3D;&#39;1&#39;, &#96;complete_percent&#96;&#x3D;&#39;60&#39;, &#96;key&#96;&#x3D;&#39;a&#39; \\xCF\\xEEĿ\\xBE\\xAD\\xC0\\xED&#x2F;\\xB2\\xFAƷ\\xBE\\xAD\\xC0\\xED xxxx00  \\xCF\\xEEĿ00 \\xCF\\xEEĿ\\xBE\\xAD\\xC0\\xED \\xBE\\xAD\\xC0\\xED00 \\xB2\\xFAƷ00 \\xB2\\xFAƷ\\xBE\\xAD\\xC0\\xED \\xB8\\xDF\\xD6\\xD000 xiao&#39;, &#96;refreshtime&#96;&#x3D;&#39;1655028523&#39; WHERE uid&#x3D;&#39;1&#39; AND id&#x3D;&#39;1&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>可以看到insert字段中a的单引号被转义为<code>\\</code>，而update中a值正常，这就体现了二次注入的原理，在第一次进行数据库插入数据的时候，使用了 addslashes 、get_magic_quotes_gpc、mysql_escape_string、mysql_real_escape_string等函数对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数在过滤后会添加 “\\” 进行转义，但是“\\”并不会插入到数据库中，在写入数据库的时候还是保留了原来的数据。在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。<br>比如在第一次插入数据的时候，数据中带有单引号，直接插入到了数据库中；然后在下一次使用中在拼凑的过程中，就形成了二次注入。</p>\n<h3 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h3><p>插入payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">aa&#39;,&#39;fullname&#39;&#x3D;user()#<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612191534728.png\" alt=\"image-20220612191534728\"></p>\n<p>查看简历，可以看到姓名变成了root@localhost，后续可以继续进行其他的绕过读取用户数据。</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-CMS%E9%9D%B6%E5%9C%BA.htm/image-20220612191557721.png\" alt=\"image-20220612191557721\"></p>\n","text":"0x00 骑士人才招聘系统-SQL注入挖掘0x00靶场：骑士人才招聘系统PHPCMS，3.4版本； 描述：源码自带过滤机制。 0x01使用seay源代码审计系统分析源码： 0x02分析时需要找全局配置文件，一般全局配置文件就会又过滤机制； 一般全局配置文件则是需要其他问价加载时包...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00-%E9%AA%91%E5%A3%AB%E4%BA%BA%E6%89%8D%E6%8B%9B%E8%81%98%E7%B3%BB%E7%BB%9F-SQL%E6%B3%A8%E5%85%A5%E6%8C%96%E6%8E%98\"><span class=\"toc-text\">0x00 骑士人才招聘系统-SQL注入挖掘</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x07\"><span class=\"toc-text\">0x07</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x08\"><span class=\"toc-text\">0x08</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x09\"><span class=\"toc-text\">0x09</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"代码审计-PHP框架MVC类上传断点调试挖掘","uid":"702d6f073e84f9179e4d91ac7d1a1d09","slug":"代码审计-PHP框架MVC类上传断点调试挖掘","date":"2022-06-13T02:24:54.000Z","updated":"2022-06-14T12:06:41.086Z","comments":true,"path":"api/articles/代码审计-PHP框架MVC类上传断点调试挖掘.json","keywords":null,"cover":[],"text":"0x00 关键字搜索函数，键字，全局变量等 文件上传的相关函数：move_uploaded_file 等； 文件上传的关键字：在写上传的时候会有注释，如&#x2F;&#x2F;上传； 全局变量$_FILES‘ 应用功能抓包：（任何可能存在上传的应用功能点），前台会员中心，后台新闻...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"代码审计--PHP无框架项目SQL注入挖掘技巧","uid":"731c1533414732448019e85116b30fa4","slug":"代码审计-PHP无框架项目SQL注入挖掘技巧","date":"2022-06-11T09:55:23.000Z","updated":"2022-07-23T15:41:11.307Z","comments":true,"path":"api/articles/代码审计-PHP无框架项目SQL注入挖掘技巧.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 使用Fortify进行代码审计使用sql靶场源代码为例，颜色代表漏洞危害等级，也可调试代码，可以为繁琐的手工审计节省出大量时间。 0x02 定点挖掘0x00 关键字通过搜索特定关键字尝试寻找特定漏洞，如“select”“insert”“update”等与...","link":"","photos":[],"count_time":{"symbolsCount":574,"symbolsTime":"1 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}