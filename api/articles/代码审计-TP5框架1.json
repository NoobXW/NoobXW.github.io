{"title":"代码审计-TP5框架1","uid":"189405de58d744911bbd6ef55ac89edc","slug":"代码审计-TP5框架1","date":"2022-06-18T01:49:09.000Z","updated":"2022-06-18T15:42:07.123Z","comments":true,"path":"api/articles/代码审计-TP5框架1.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"0x00\"><a href=\"#0x00\" class=\"headerlink\" title=\"0x00\"></a>0x00</h2><p>脑图：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/TP%E6%A1%86%E6%9E%B6.png\" alt=\"TP框架\"></p>\n<h2 id=\"0x01-Metinfo-无框架-变量覆盖-自动审计或搜索\"><a href=\"#0x01-Metinfo-无框架-变量覆盖-自动审计或搜索\" class=\"headerlink\" title=\"0x01 Metinfo-无框架-变量覆盖-自动审计或搜索\"></a>0x01 Metinfo-无框架-变量覆盖-自动审计或搜索</h2><h3 id=\"0x00-1\"><a href=\"#0x00-1\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>打开靶场：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618102033894.png\" alt=\"image-20220618102033894\"></p>\n<h3 id=\"0x01\"><a href=\"#0x01\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>使用seay先进行自动审计：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618102222723.png\" alt=\"image-20220618102222723\"></p>\n<p>检测到可能存在变量覆盖漏洞：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618102354770.png\" alt=\"image-20220618102354770\"></p>\n<h3 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h3><p>打开其配置文件审计相关函数：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618102731712.png\" alt=\"image-20220618102731712\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618102532401.png\" alt=\"image-20220618102532401\"></p>\n<p>可以看到双$$符号。</p>\n<p>foreach()函数，每次循环中，当前单元的值被赋给 $value 并且数组内部的指针向前移一步（因此下一次循环中将会得到下一个单元），这里相当于两个循环的for循环，第一个request分别循环三种传参方法；第二个循环，当前单元的键名也会在每次循环中被赋给变量 $key，之后$key又赋值给value，然后再将value的值过滤后赋值给$key，总之，就是通过get，post，cookie接受数据，进行变量覆盖 。</p>\n<p>涉及函数：</p>\n<p>foreach()函数：遍历给定的数组。每次循环中，当前单元的值被赋给 $value 并且数组内部的指针向前移一步（因此下一次循环中将会得到下一个单元）。</p>\n<p> <code>php</code>中的<code>=&gt;</code>：一般用作数组键名与元素的连接符。简单来说就是使用&#x3D;&gt;符号来分隔键和值，左侧表示键，右侧表示值。</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618104255974.png\" alt=\"image-20220618104255974\"></p>\n<h3 id=\"0x03\"><a href=\"#0x03\" class=\"headerlink\" title=\"0x03\"></a>0x03</h3><p>由于配置文件几乎全局包含，搜索相关包含其文件的文件：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618104908470.png\" alt=\"image-20220618104908470\"></p>\n<p>index.php包含其文件。</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618104947665.png\" alt=\"image-20220618104947665\"></p>\n<h3 id=\"0x04\"><a href=\"#0x04\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>由于common.inc.php文件可能存在变量覆盖漏洞，将index.php文件添加测试语句进行测试；由于现在打开的index.php文件不是网站首页文件：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618105149180.png\" alt=\"image-20220618105149180\"></p>\n<p>网站首页文件内在templates目录下：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618105310603.png\" alt=\"image-20220618105310603\"></p>\n<p>在index.php文件中写入测试语句：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618111728315.png\" alt=\"image-20220618111728315\"></p>\n<p>接着在index.html文件中输出：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618105745708.png\" alt=\"image-20220618105745708\"></p>\n<p>网站首页看到test的数据：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618111712482.png\" alt=\"image-20220618111712482\"></p>\n<p><strong>注意：在index.php文件中，test变量的赋值一定要在index.php文件中的包含文件common.inc.php的上方，不然test变量的值不会改变。</strong></p>\n<h3 id=\"0x05\"><a href=\"#0x05\" class=\"headerlink\" title=\"0x05\"></a>0x05</h3><p>传参：test接收值123456，返回值123465，而不是asdas，实现了变量覆盖。<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618112341335.png\" alt=\"image-20220618112341335\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618112420227.png\" alt=\"image-20220618112420227\"></p>\n<h3 id=\"0x06\"><a href=\"#0x06\" class=\"headerlink\" title=\"0x06\"></a>0x06</h3><p>审计：<br>三种方式传参的值都可以接受，比如这里GET接收test</p>\n<p>foreach($_GET as $_key&#x3D;&gt;$_value)</p>\n<p>get传参test&#x3D;111,相当于数组{“test”:”111”}</p>\n<p>那么$_key&#x3D;test;$_value&#x3D;111,而$_value的过滤类似魔术引号加&#x2F;&#x2F;只对注入防范有用，这里对111不起作用</p>\n<p>这里就会将$test&#x3D;$_value&#x3D;111 </p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618113103692.png\" alt=\"image-20220618113103692\"></p>\n<h3 id=\"0x07-配合文件包含漏洞进行攻击\"><a href=\"#0x07-配合文件包含漏洞进行攻击\" class=\"headerlink\" title=\"0x07 配合文件包含漏洞进行攻击\"></a>0x07 配合文件包含漏洞进行攻击</h3><p>条件：</p>\n<p>1、include($filename)</p>\n<p>2、包含文件common.inc.php </p>\n<p>先搜索文件包含漏洞关键函数：<br>include，include_once，require require_once 等：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618114032789.png\" alt=\"image-20220618114032789\"></p>\n<p>发现有一个$moudle变量，打开文件查看：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618114140892.png\" alt=\"image-20220618114140892\"></p>\n<p>没有包含common.inc.php变量覆盖文件，无法利用。</p>\n<p>打开moudle.php文件，包含了common.inc.php变量覆盖文件：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618114531482.png\" alt=\"image-20220618114531482\"></p>\n<p>表示这个index.php文件间接包含了common.inc.php变量覆盖文件：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618114729593.png\" alt=\"image-20220618114729593\"></p>\n<p>require_once()函数：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618114922885.png\" alt=\"image-20220618114922885\"></p>\n<h3 id=\"0x08\"><a href=\"#0x08\" class=\"headerlink\" title=\"0x08\"></a>0x08</h3><p>审计：</p>\n<p>查看原来module的赋值条件，通过判断fmofule的值，当fmofule&#x3D;7并且变量list为空时，module就等于<code>$modulefname[$mdle][$mdtp]</code>，这里我们只需要确定module有赋值，然后我们去覆盖就行，不用确定module的值。</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618115434624.png\" alt=\"image-20220618115434624\"></p>\n<h3 id=\"0x09\"><a href=\"#0x09\" class=\"headerlink\" title=\"0x09\"></a>0x09</h3><p>访问存在文件包含漏洞的目录about&#x2F;index.php：</p>\n<p>构造payload：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;metinfo&#x2F;about&#x2F;index.php?fmodule&#x3D;7&amp;module&#x3D;1.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618120347202.png\" alt=\"image-20220618120347202\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618120354397.png\" alt=\"image-20220618120354397\"></p>\n<p>成功打开1.txt文件，执行phpinfo()函数。</p>\n<p>后续只需上传任意文件，只需更改<code>module</code>值，访问上传的文件地址进行getshell。\t</p>\n<h2 id=\"0x02-Thinkphp5框架\"><a href=\"#0x02-Thinkphp5框架\" class=\"headerlink\" title=\"0x02 Thinkphp5框架\"></a>0x02 Thinkphp5框架</h2><h3 id=\"0x00-2\"><a href=\"#0x00-2\" class=\"headerlink\" title=\"0x00\"></a>0x00</h3><p>打开网站：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618122740026.png\" alt=\"image-20220618122740026\"></p>\n<p>其中的APPlication是应用的目录：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618122901748.png\" alt=\"image-20220618122901748\"></p>\n<p>具体参考文章：</p>\n<p><a href=\"https://www.kancloud.cn/thinkphp/thinkphp5-guide/90110\">https://www.kancloud.cn/thinkphp/thinkphp5-guide/90110</a></p>\n<h3 id=\"0x01-1\"><a href=\"#0x01-1\" class=\"headerlink\" title=\"0x01\"></a>0x01</h3><p>这段代码的作用就是定义应用目录APP_PATH和加载ThinkPHP框架的入口文件：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618123651593.png\" alt=\"image-20220618123651593\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618124301371.png\" alt=\"image-20220618124301371\"></p>\n<p>首页加载的文件实在APPlication目录下的：<img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618124039063.png\" alt=\"image-20220618124039063\"></p>\n<p>具体解释：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618124342433.png\" alt=\"image-20220618124342433\"></p>\n<h3 id=\"0x02-测试\"><a href=\"#0x02-测试\" class=\"headerlink\" title=\"0x02 测试\"></a>0x02 测试</h3><p>class中写入test方法，浏览器按照格式访问，如图：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618130840780.png\" alt=\"image-20220618130840780\"></p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618130828858.png\" alt=\"image-20220618130828858\"></p>\n<h3 id=\"0x03-Thinkphp版本查看\"><a href=\"#0x03-Thinkphp版本查看\" class=\"headerlink\" title=\"0x03 Thinkphp版本查看\"></a>0x03 Thinkphp版本查看</h3><p>1、通过url的报错查看：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618124823617.png\" alt=\"image-20220618124823617\"></p>\n<p>2、readme文件查看：<br><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618124905138.png\" alt=\"image-20220618124905138\"></p>\n<h3 id=\"0x04-1\"><a href=\"#0x04-1\" class=\"headerlink\" title=\"0x04\"></a>0x04</h3><p>ThinkPHP网上的历史版本的漏洞：</p>\n<p><img src=\"/post/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-TP5%E6%A1%86%E6%9E%B61.htm/image-20220618131214231.png\" alt=\"image-20220618131214231\"></p>\n<p>ThinkPHP-Vuln：</p>\n<p><a href=\"https://github.com/Mochazz/ThinkPHP-Vuln\">https://github.com/Mochazz/ThinkPHP-Vuln</a></p>\n<h3 id=\"0x05-总结\"><a href=\"#0x05-总结\" class=\"headerlink\" title=\"0x05 总结\"></a>0x05 总结</h3><p>如果发现thinkPHP框架，可能存在以下思路：</p>\n<p>1、如果按照thinkPHP去写，就是thinkPHP的框架漏洞；</p>\n<p>2、如果虽然存在thinkPHP框架，但是没有利用框架，就是常规的审计思路。</p>\n","text":"0x00脑图： 0x01 Metinfo-无框架-变量覆盖-自动审计或搜索0x00打开靶场： 0x01使用seay先进行自动审计： 检测到可能存在变量覆盖漏洞： 0x02打开其配置文件审计相关函数： 可以看到双$$符号。 foreach()函数，每次循环中，当前单元的值被赋给 $...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01-Metinfo-%E6%97%A0%E6%A1%86%E6%9E%B6-%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96-%E8%87%AA%E5%8A%A8%E5%AE%A1%E8%AE%A1%E6%88%96%E6%90%9C%E7%B4%A2\"><span class=\"toc-text\">0x01 Metinfo-无框架-变量覆盖-自动审计或搜索</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-1\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03\"><span class=\"toc-text\">0x03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05\"><span class=\"toc-text\">0x05</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x06\"><span class=\"toc-text\">0x06</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x07-%E9%85%8D%E5%90%88%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E8%BF%9B%E8%A1%8C%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">0x07 配合文件包含漏洞进行攻击</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x08\"><span class=\"toc-text\">0x08</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x09\"><span class=\"toc-text\">0x09</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02-Thinkphp5%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">0x02 Thinkphp5框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-2\"><span class=\"toc-text\">0x00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-1\"><span class=\"toc-text\">0x01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">0x02 测试</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-Thinkphp%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">0x03 Thinkphp版本查看</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-1\"><span class=\"toc-text\">0x04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x05 总结</span></a></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"权限提升-网站后台漏洞第三方获取","uid":"f8af41c2e2288536f49250d641a67ce7","slug":"权限提升-网站后台漏洞第三方获取","date":"2022-06-19T01:32:42.000Z","updated":"2022-06-19T11:53:52.360Z","comments":true,"path":"api/articles/权限提升-网站后台漏洞第三方获取.json","keywords":null,"cover":[],"text":"0x00脑图： 0x01 权限分类 1、后台权限：（获得方式：爆破，注入猜解，弱口令等获取的帐号密码配合登录） 一般网站或应用后台只能操作应用的界面内容数据图片等信息，无法操作程序的源代码或服务器上的资源文件的。（如后台功能存在文件操作的话也可以操作文件数据） 2、网站权限：（获...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"代码审计-PHP框架MVC类上传断点调试挖掘","uid":"702d6f073e84f9179e4d91ac7d1a1d09","slug":"代码审计-PHP框架MVC类上传断点调试挖掘","date":"2022-06-13T02:24:54.000Z","updated":"2022-06-14T12:06:41.086Z","comments":true,"path":"api/articles/代码审计-PHP框架MVC类上传断点调试挖掘.json","keywords":null,"cover":[],"text":"0x00 关键字搜索函数，键字，全局变量等 文件上传的相关函数：move_uploaded_file 等； 文件上传的关键字：在写上传的时候会有注释，如&#x2F;&#x2F;上传； 全局变量$_FILES‘ 应用功能抓包：（任何可能存在上传的应用功能点），前台会员中心，后台新闻...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}