{"title":"SQL注入-文件读写操作","uid":"9eb50f7de58edddafde74a5aa271206c","slug":"SQL注入-文件读写操作","date":"2022-02-01T04:55:10.000Z","updated":"2022-02-13T15:45:43.308Z","comments":true,"path":"api/articles/SQL注入-文件读写操作.json","keywords":null,"cover":[],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>[TOC]</p>\n<h2 id=\"SQL注入文件读写及导出\"><a href=\"#SQL注入文件读写及导出\" class=\"headerlink\" title=\"SQL注入文件读写及导出\"></a>SQL注入文件读写及导出</h2><p>这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。</p>\n<p>1、<strong>load_file():读取函数</strong>：</p>\n<p>以下代码实在数据库执行的源码进行文件读取：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select load_file(&#39;D:&#x2F;1.txt&#39;);这里的D可以用小写d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里的d:&#x2F;1.txt文件路径中的斜杠要用 &#x2F; ,由于在sql语句中 \\n是换行符，所以为了避免，这里的读取路径要使用 &#x2F; ；另一种可以通过\\进行转义出  \\ 。</p>\n<p>执行如下代码：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;-1&#39; union select 1,load_file(&#39;D:&#x2F;1.txt&#39;),3 --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以看到已读取出1.txt文件的内容。</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C.htm/image-20220201182045161.png\" alt=\"image-20220201182045161\"></p>\n<p>2、<strong>into outfile或into dumpfile:导出函数</strong>：</p>\n<p>源码执行语句：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">select &#39;CTF1&#39; into outfile &#39;D:&#x2F;2.txt&#39;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;sqli-labs-master&#x2F;Less-1&#x2F;?id&#x3D;-1&#39; union select 1,2,&#39;CTF1&#39;  into outfile &#39;D:&#x2F;2.txt&#39; --+<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里的写入语句，要写入的东西和路径都需要加 ‘’ 。</p>\n<p>可以看到页面返回异常，但返回D盘查看文件，已将CTF1写入文件2.txt</p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C.htm/image-20220201183145889.png\" alt=\"image-20220201183145889\"></p>\n<p><img src=\"/post/SQL%E6%B3%A8%E5%85%A5-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C.htm/image-20220201183319837.png\" alt=\"image-20220201183319837\"></p>\n<p>SQL注入任意文件读取，这样的漏洞一旦出发，可以读取数据库管理员的账号密码，也可以通过写入操作将后门植入，提高权限。</p>\n<p><strong>文件读取操作必须要知道文件的具体路径。</strong></p>\n<hr>\n<h2 id=\"路径获取的常见方法\"><a href=\"#路径获取的常见方法\" class=\"headerlink\" title=\"路径获取的常见方法\"></a>路径获取的常见方法</h2><p>报错显示：通过扫描工具或手工探测报错网页，会爆出该网站的真实路径；</p>\n<p>遗留文件：例如 phpinfo.php文件，可以找到网站路径</p>\n<p>漏洞报错：在搜索引擎根据网站使用的什么程序去搜索网站所在的爆路径的漏洞</p>\n<p>平台配置文件：配置文件里会有网站的路径信息。</p>\n<p>​                          敏感文件文章：<a href=\"https://blog.csdn.net/weixin_30292843/article/details/99381669\">https://blog.csdn.net/weixin_30292843/article/details/99381669</a></p>\n<p>爆破：很难找到路径信息，按照常规思路去爆破。这是由于搭建网站的时候会有常见的路径，</p>\n<p>​            例如：windows：                                              linux：</p>\n<p>​                                           d:&#x2F;www&#x2F;……                                     &#x2F;var&#x2F;www&#x2F;……</p>\n<hr>\n<h2 id=\"魔术引号\"><a href=\"#魔术引号\" class=\"headerlink\" title=\"魔术引号\"></a>魔术引号</h2><p><strong>魔术引号开关：magic_quotes_gpc</strong>这个文件在php.ini目录下的文件</p>\n<p><strong>魔术引号是为了防止任意文件读取的SQL注入。</strong></p>\n<p>什么是魔术引号：当打开时，所有的 ‘（单引号），”（双引号），\\（反斜线）和 NULL 字符都会被自动加上一个反斜线进行转义。这和 <a href=\"https://www.jb51.net/shouce/php5/zh/function.addslashes.html\"><strong>addslashes()</strong></a> 作用完全相同。一个自动将进入 PHP 脚本的数据进行转义的过程。最好在编码时不要转义而在运行时根据需要而转义。</p>\n<p><strong>魔术引号 【Warning：本特性已自 PHP 5.3.0 起废弃并将自 PHP 5.4.0 起移除。】</strong></p>\n<hr>\n<h3 id=\"魔术引号的绕过：\"><a href=\"#魔术引号的绕过：\" class=\"headerlink\" title=\"魔术引号的绕过：\"></a>魔术引号的绕过：</h3><p>利用编码或宽字节绕过。</p>\n<hr>\n<h2 id=\"防注入策略\"><a href=\"#防注入策略\" class=\"headerlink\" title=\"防注入策略\"></a>防注入策略</h2><p>1.自带防御：魔术引导</p>\n<p>2.内置函数;int等</p>\n<p>3.自定义关键字：select，会对select,and,or等关键字进行过滤。（大小写混合可以尝试绕过过滤）</p>\n<p>4.WAF防护软件：安全狗，宝塔等</p>\n","text":"[TOC] SQL注入文件读写及导出这里的load_file()和into outfile或into dumpfile函数都是Mysql数据库的内置函数。 1、load_file():读取函数： 以下代码实在数据库执行的源码进行文件读取： select load_file(&#3...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%8F%8A%E5%AF%BC%E5%87%BA\"><span class=\"toc-text\">SQL注入文件读写及导出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E5%BE%84%E8%8E%B7%E5%8F%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">路径获取的常见方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E5%BC%95%E5%8F%B7\"><span class=\"toc-text\">魔术引号</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E5%BC%95%E5%8F%B7%E7%9A%84%E7%BB%95%E8%BF%87%EF%BC%9A\"><span class=\"toc-text\">魔术引号的绕过：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%98%B2%E6%B3%A8%E5%85%A5%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">防注入策略</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SQL注入-盲注","uid":"db9d897023f4869df00e643d24440891","slug":"SQL注入-盲注","date":"2022-02-02T07:08:10.000Z","updated":"2022-02-11T13:18:49.307Z","comments":true,"path":"api/articles/SQL注入-盲注.json","keywords":null,"cover":[],"text":"SQL盲注概述盲注，通俗易懂一点，就是在页面没有提供明显信息的情况执行的注入方式。 1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的 盲注来获取信息。2.盲注是不能通过直接显示的途径来获取数据库数据的方法。 盲注的分类1、布尔盲注 2、...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入字符型和数字型判断","uid":"13edec6f4d479c2c3e54757e7424c180","slug":"SQL注入字符型和数字型判断","date":"2022-01-31T15:43:00.000Z","updated":"2022-02-13T15:47:04.073Z","comments":true,"path":"api/articles/SQL注入字符型和数字型判断.json","keywords":null,"cover":[],"text":"[TOC] 说明在SQL注入中如何判断字符型注入还是数字型注入很重要，这里自己记录一下。 数字型判定1、and或者or 假设数据库的执行语句是：select * from table where id&#x3D;$id 这里我以自己本地的sql靶场为例。 此时执行语句为： htt...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}