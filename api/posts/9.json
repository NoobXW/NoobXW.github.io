{"total":133,"pageSize":12,"pageCount":12,"data":[{"title":"xss跨站-xss-labs","uid":"b564e09de39e303e8a190e6bd2a14088","slug":"xss跨站-xss-labs","date":"2022-02-21T14:58:27.000Z","updated":"2022-05-30T14:43:32.587Z","comments":true,"path":"api/articles/xss跨站-xss-labs.json","cover":[],"text":"[TOC] 前言记录一下xss靶场，xss-labs通关过程。 ##Level-1（无过滤） ###0x00 可以看到给的提示是payload长度为4，地址栏中get方式的name&#x3D;test与欢迎用户test相对应，试着改一下name的参数值。 0x01修改为test&...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"},{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"XSS基础","uid":"2ae9b590ca3c1c2667fd185e3a54758c","slug":"XSS基础","date":"2022-02-20T13:42:18.000Z","updated":"2022-05-30T14:42:10.426Z","comments":true,"path":"api/articles/XSS基础.json","cover":[],"text":"前言XSS跨站脚本攻击： XSS原理恶意攻击者在web页面中会插入一些恶意的script代码。当用户浏览该页面的时候，那么嵌入到web页面中script代码会执行，因此会达到恶意攻击用户的目的。属于前端漏洞。 （若有与对方交互的地方，就可能会有攻击点） XSS分类1、反射型（非持...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"xss","slug":"xss","count":4,"path":"api/categories/xss.json"}],"tags":[{"name":"xss","slug":"xss","count":4,"path":"api/tags/xss.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-WAF绕过","uid":"07ba4ec78c8c1a3bf9ee409d03b686e2","slug":"文件上传-WAF绕过","date":"2022-02-18T07:45:11.000Z","updated":"2022-02-18T12:25:50.391Z","comments":true,"path":"api/articles/文件上传-WAF绕过.json","cover":null,"text":"前言由于在真实环境当中，网站会有相应的软件防护，通常发现文件上传漏洞后还要进行WAF绕过，而类似的防护软件有safedog，BT等，所以需要了解防护的规则并且绕过防护。 当然，这里的WAF绕过是广义上的，不单单是指防护软件，类似前后端源码的防护规则也需要进行WAF绕过。 上传参数...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-解析漏洞","uid":"8822ebc3b04f9f9d5f4a65e981067804","slug":"文件上传-解析漏洞","date":"2022-02-17T13:22:37.000Z","updated":"2022-02-17T17:21:38.295Z","comments":true,"path":"api/articles/文件上传-解析漏洞.json","cover":[],"text":"前言由于中间件会出现解析漏洞，若配合文件上传会出现很大的安全危害。这里以Vulhub靶场进行漏洞复现，在这之前要了解一下中间件，服务器和Web服务器的区别。 中间件，服务器和Web服务器的区别一、服务器的定义： 服务器指的是一个管理资源并为用户提供服务的计算机软件，通常分为文件服...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-upload-labs","uid":"839a0bf2eef6223788002c9f68db568c","slug":"文件上传-upload-labs","date":"2022-02-14T06:12:41.000Z","updated":"2023-01-31T13:41:40.159Z","comments":true,"path":"api/articles/文件上传-upload-labs.json","cover":[],"text":"Pass-01（前端JS绕过）0x00首先分析一下源码： $_FILES：PHP中的$_FILES 是一个预定义的数组，用来获取通过 POST 方法上传文件的相关信息。如果为单个文件上传，那么 $_FILES 为二维数组；如果为多个文件上传，那么 $_FILES 为三维数组。 m...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"靶场","slug":"靶场","count":12,"path":"api/tags/靶场.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传-Webshell介绍","uid":"ac44a9ac4337ea71f1fa38abe9d1c638","slug":"文件上传-Webshell介绍","date":"2022-02-13T12:48:38.000Z","updated":"2022-02-13T14:55:04.207Z","comments":true,"path":"api/articles/文件上传-Webshell介绍.json","cover":null,"text":"[TOC] Webshell​ webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。使用方法简单，只需上传一个代码文件，通过网址访问，便可进行很多日常操作，极大地方便了使用者对网站和服务器的管理...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"文件上传基础","uid":"d7d77bc82bafbf7e1e25394ce17aed92","slug":"文件上传基础","date":"2022-02-12T15:02:42.000Z","updated":"2022-02-13T16:20:08.511Z","comments":true,"path":"api/articles/文件上传基础.json","cover":[],"text":"[TOC] 前言相比于SQL注入等其他漏洞，文件上传漏洞风险更大，最直接的情况则是上传一个webshell拿权限。 文件上传分类： 了解到是文件上传漏洞时，要清楚是什么类型的文件上传漏洞，之后进行下一步操作。 ##文件上传漏洞原理： 网站Web应用都有一些文件上传功能，比如文档、...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"文件上传","slug":"文件上传","count":5,"path":"api/categories/文件上传.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":7,"path":"api/tags/文件上传.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-绕过WAF","uid":"e80d729249f46c80b287eec83a7a4367","slug":"SQL注入-绕过WAF","date":"2022-02-11T15:37:25.000Z","updated":"2022-02-13T15:45:57.047Z","comments":true,"path":"api/articles/SQL注入-绕过WAF.json","cover":[],"text":"[TOC] 前言由于网站会部署WAF，例如安全狗，宝塔等，各自有各自的WAF策略规则，因此，绕过的方法也不同。了解其最基本的WAF规则便可进行对其绕过。 WAF绕过姿势1、大小写&#x2F;关键字的替换： id=1 UnIoN/**/SeLeCT 1,user() Hex() b...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-堆叠注入","uid":"a92a2310a2f65e102da5b7c1e7626f1d","slug":"SQL注入-堆叠注入","date":"2022-02-10T09:06:24.000Z","updated":"2022-02-13T15:45:30.445Z","comments":true,"path":"api/articles/SQL注入-堆叠注入.json","cover":[],"text":"[TOC] 堆叠注入原理在 SQL 中，分号（;）是用来表示一条 sql 语句的结束。试想一下我们在 ; 结束一个 sql 语句后继续构造下一条语句，会不会一起执行？因此这个想法也就造就了堆叠注入。而 union injection（联合注入）也是将两条语句合并在一起，两者之间有...","link":"","photos":[],"count_time":{"symbolsCount":287,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-宽字节注入","uid":"b7b3116373fd14d65fd221fa9b494766","slug":"SQL注入-宽字节注入","date":"2022-02-10T07:14:55.000Z","updated":"2022-02-13T15:34:05.258Z","comments":true,"path":"api/articles/SQL注入-宽字节注入.json","cover":[],"text":"[TOC] 宽字节注入原理原理：mysql 在使用 GBK 编码的时候，会认为两个字符为一个汉字，例如%aa%5c 就是一个 汉字（前一个 ascii 码大于 128 才能到汉字的范围）。我们在过滤 ’ 的时候，往往利用的思 路是将 ‘ 转换为 \\’ 。 注入思路思路一：由于单引...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SQL注入-HPP","uid":"ed28de52de42846cd0569a9a357ddaf1","slug":"SQL注入-HPP","date":"2022-02-10T05:11:20.000Z","updated":"2022-02-15T12:14:34.027Z","comments":true,"path":"api/articles/SQL注入-HPP.json","cover":[],"text":"[TOC] ##服务器两层架构 服务器端有两个部分：第一部分为 tomcat 为引擎的 jsp 型服务器，第二部分为 apache为引擎的 php 服务器，真正提供 web 服务的是 php 服务器。工作流程为：client 访问服务器， 能直接访问到 tomcat 服务器，然后...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"POST注入-二次注入","uid":"47679b9d369f170d867be494752fa62e","slug":"POST注入-二次注入","date":"2022-02-09T03:31:17.000Z","updated":"2022-02-13T15:33:50.663Z","comments":true,"path":"api/articles/POST注入-二次注入.json","cover":[],"text":"[TOC] ##二次注入原理 二次注入，主要分为两步； 第一步：插入恶意数据 ​ 第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数...","link":"","photos":[],"count_time":{"symbolsCount":687,"symbolsTime":"1 mins."},"categories":[{"name":"SQL注入","slug":"SQL注入","count":20,"path":"api/categories/SQL注入.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"基础知识","slug":"基础知识","count":12,"path":"api/tags/基础知识.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}