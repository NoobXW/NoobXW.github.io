{"total":133,"pageSize":12,"pageCount":12,"data":[{"title":"权限提升-数据库提权1","uid":"1989a1e5dad512659756c4dce4a56243","slug":"权限提升-数据库提权1","date":"2022-06-20T08:13:30.000Z","updated":"2022-06-21T00:44:39.773Z","comments":true,"path":"api/articles/权限提升-数据库提权1.json","cover":[],"text":"0x00脑图： 0x01 数据库提权的意义及流程1、意义：在利用系统溢出漏洞无果的情况下，可以采用数据库进行提权；但需要知道数据库提权的前提条件：服务器开启数据库服务及获取到最高权限用户密码。除 Access 数据库外，其他数据库基本都存在数据库提权的可能。 2、流程 ：服务探针...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-windows提权","uid":"e38c975ecb9beb0ae47fa044c10774fe","slug":"权限提升-windows提权","date":"2022-06-19T14:00:54.000Z","updated":"2022-06-20T02:03:43.786Z","comments":true,"path":"api/articles/权限提升-windows提权.json","cover":[],"text":"0x00脑图： 0x01 windows权限划分0x00 普通权限 1、默认情况下，系统为用户分了7个组，并给每个组赋予不同的操作权限，管理员组(Administrators)、高权限用户组(PowerUsers)、普通用户组(Users)、备份操作组(Backup Operat...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"权限提升-网站后台漏洞第三方获取","uid":"f8af41c2e2288536f49250d641a67ce7","slug":"权限提升-网站后台漏洞第三方获取","date":"2022-06-19T01:32:42.000Z","updated":"2022-06-19T11:53:52.360Z","comments":true,"path":"api/articles/权限提升-网站后台漏洞第三方获取.json","cover":[],"text":"0x00脑图： 0x01 权限分类 1、后台权限：（获得方式：爆破，注入猜解，弱口令等获取的帐号密码配合登录） 一般网站或应用后台只能操作应用的界面内容数据图片等信息，无法操作程序的源代码或服务器上的资源文件的。（如后台功能存在文件操作的话也可以操作文件数据） 2、网站权限：（获...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/categories/权限提升.json"}],"tags":[{"name":"权限提升","slug":"权限提升","count":10,"path":"api/tags/权限提升.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-TP5框架1","uid":"189405de58d744911bbd6ef55ac89edc","slug":"代码审计-TP5框架1","date":"2022-06-18T01:49:09.000Z","updated":"2022-06-18T15:42:07.123Z","comments":true,"path":"api/articles/代码审计-TP5框架1.json","cover":[],"text":"0x00脑图： 0x01 Metinfo-无框架-变量覆盖-自动审计或搜索0x00打开靶场： 0x01使用seay先进行自动审计： 检测到可能存在变量覆盖漏洞： 0x02打开其配置文件审计相关函数： 可以看到双$$符号。 foreach()函数，每次循环中，当前单元的值被赋给 $...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-PHP框架MVC类上传断点调试挖掘","uid":"702d6f073e84f9179e4d91ac7d1a1d09","slug":"代码审计-PHP框架MVC类上传断点调试挖掘","date":"2022-06-13T02:24:54.000Z","updated":"2022-06-14T12:06:41.086Z","comments":true,"path":"api/articles/代码审计-PHP框架MVC类上传断点调试挖掘.json","cover":[],"text":"0x00 关键字搜索函数，键字，全局变量等 文件上传的相关函数：move_uploaded_file 等； 文件上传的关键字：在写上传的时候会有注释，如&#x2F;&#x2F;上传； 全局变量$_FILES‘ 应用功能抓包：（任何可能存在上传的应用功能点），前台会员中心，后台新闻...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计-CMS靶场","uid":"54d8350a6e513341975c7d9c3662fe93","slug":"代码审计-CMS靶场","date":"2022-06-12T08:33:39.000Z","updated":"2022-06-12T11:18:54.947Z","comments":true,"path":"api/articles/代码审计-CMS靶场.json","cover":[],"text":"0x00 骑士人才招聘系统-SQL注入挖掘0x00靶场：骑士人才招聘系统PHPCMS，3.4版本； 描述：源码自带过滤机制。 0x01使用seay源代码审计系统分析源码： 0x02分析时需要找全局配置文件，一般全局配置文件就会又过滤机制； 一般全局配置文件则是需要其他问价加载时包...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"代码审计--PHP无框架项目SQL注入挖掘技巧","uid":"731c1533414732448019e85116b30fa4","slug":"代码审计-PHP无框架项目SQL注入挖掘技巧","date":"2022-06-11T09:55:23.000Z","updated":"2022-07-23T15:41:11.307Z","comments":true,"path":"api/articles/代码审计-PHP无框架项目SQL注入挖掘技巧.json","cover":[],"text":"0x00脑图： 0x01 使用Fortify进行代码审计使用sql靶场源代码为例，颜色代表漏洞危害等级，也可调试代码，可以为繁琐的手工审计节省出大量时间。 0x02 定点挖掘0x00 关键字通过搜索特定关键字尝试寻找特定漏洞，如“select”“insert”“update”等与...","link":"","photos":[],"count_time":{"symbolsCount":574,"symbolsTime":"1 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":4,"path":"api/categories/代码审计.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":21,"path":"api/tags/SQL注入.json"},{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-权限控制","uid":"21e0a43668edaae60c8a409447987781","slug":"WAF绕过-权限控制","date":"2022-06-11T02:42:28.000Z","updated":"2022-06-11T04:05:32.404Z","comments":true,"path":"api/articles/WAF绕过-权限控制.json","cover":[],"text":"0x00脑图： 0x01 变量覆盖一句话木马，用eval()函数将字符串转换为PHP代码： &lt;?php @ev删掉这串汉字al($_POST[‘chop删掉这串汉字per’]);?> 用ass删掉这串汉字ert代替eval()： （eval()会被检测） &lt;?php ...","link":"","photos":[],"count_time":{"symbolsCount":959,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-漏洞利用之注入上传跨站等绕过","uid":"33e492c349a108568658a2914e822de5","slug":"WAF绕过-漏洞利用之注入上传跨站等绕过","date":"2022-06-10T14:12:41.000Z","updated":"2022-06-10T15:42:56.054Z","comments":true,"path":"api/articles/WAF绕过-漏洞利用之注入上传跨站等绕过.json","cover":[],"text":"0x00脑图： 0x01 SQL注入使用如sqlmap等工具注入时，为防止CC拦截，修改数据包us头模仿爬虫，或使用代理池 安全狗：参考之前payload Aliyun：基本修改指纹即可 宝塔：匹配关键字，包括“&#x2F;*”，注入语句的每个“&#x2F;*”都改为“%00&#...","link":"","photos":[],"count_time":{"symbolsCount":614,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-漏洞发现之代理池指纹被动探针","uid":"60c32b8c4d5a420db76927924181a57e","slug":"WAF绕过-漏洞发现之代理池指纹被动探针","date":"2022-06-10T10:48:38.000Z","updated":"2022-06-10T12:00:36.685Z","comments":true,"path":"api/articles/WAF绕过-漏洞发现之代理池指纹被动探针.json","cover":[],"text":"0x00脑图： 0x01 漏洞发现触发WAF点-针对xray,awvs等1、扫描速度-(代理池，延迟，白名单等)：速度过快肯定会被拦截 2、工具指纹-(特征修改，伪造模拟真实用户等) 3、漏洞Payload-(数据变异，数据加密，白名单等) （热门的扫描工具（awvs，xray等...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"WAF绕过-信息搜集反爬虫延时代理池技术","uid":"7994f7b150cfea785dcbebf986580404","slug":"WAF绕过-信息搜集反爬虫延时代理池技术","date":"2022-06-09T08:30:59.000Z","updated":"2022-06-09T09:52:21.731Z","comments":true,"path":"api/articles/WAF绕过-信息搜集反爬虫延时代理池技术.json","cover":[],"text":"0x00脑图： 0x01 绕过手法1、请求方法：改变数据包的请求方法，如从Head改为更常见的Get 2、模拟用户：修改整个数据包，使它更像一般用户发送的数据 3、延时：两次访问间设置合适的时间间隔，以防触发拦截机制 4、代理池：使用代理访问，避开对单个IP的限制 5、爬虫引擎：...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Bypass WAF","slug":"Bypass-WAF","count":7,"path":"api/tags/Bypass-WAF.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"漏洞发现-API接口服务类","uid":"3453cd6915cc1680ff9c8ccd16d4f69e","slug":"漏洞发现-API接口服务类","date":"2022-06-08T07:03:31.000Z","updated":"2022-06-08T13:07:39.886Z","comments":true,"path":"api/articles/漏洞发现-API接口服务类.json","cover":[],"text":"0x00脑图： 0x01 端口服务类安全测试根据前期信息收集针对目标端口服务类探针后进行的安全测试；主要涉及攻击方法：口令安全，WEB类漏洞，版本漏洞等，其中产生的危害可大可小。属于端口服务&#x2F;第三方服务类安全测试面。一般在已知应用无思路的情况下选用的安全测试方案。 0x...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/categories/漏洞检测.json"}],"tags":[{"name":"漏洞检测","slug":"漏洞检测","count":4,"path":"api/tags/漏洞检测.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}